{"kind": "module", "_version": {"kind": "module"}, "catalog": {"kind": "module", "base": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "catalog_service_base": {"kind": "module", "CatalogOrganization": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["attributes: 'CatalogOrganizationAttributes'", "CatalogOrganizationAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiOrganizationIn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "data_source": {"kind": "module", "action_model": {"kind": "module", "requests": {"kind": "module", "ldm_request": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SqlColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["data_type: 'str'", "str"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiSqlColumn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogPdmSql": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["statement: 'str'", "str"], ["title: 'str'", "str"], ["columns: 'List[SqlColumn]'", "List[SqlColumn]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogPdmSql.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmSql.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[PdmSql]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogPdmLdmRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["sqls: 'List[CatalogPdmSql]'", "List[CatalogPdmSql]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogPdmLdmRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogPdmLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[PdmLdmRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogGenerateLdmRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["separator: 'str' = '__'", "str"], ["generate_long_ids: 'Optional[bool]' = None", "Optional[bool]"], ["table_prefix: 'Optional[str]' = None", "Optional[str]"], ["view_prefix: 'Optional[str]' = None", "Optional[str]"], ["primary_label_prefix: 'Optional[str]' = None", "Optional[str]"], ["secondary_label_prefix: 'Optional[str]' = None", "Optional[str]"], ["fact_prefix: 'Optional[str]' = None", "Optional[str]"], ["date_granularities: 'Optional[str]' = None", "Optional[str]"], ["grain_prefix: 'Optional[str]' = None", "Optional[str]"], ["reference_prefix: 'Optional[str]' = None", "Optional[str]"], ["grain_reference_prefix: 'Optional[str]' = None", "Optional[str]"], ["denorm_prefix: 'Optional[str]' = None", "Optional[str]"], ["wdf_prefix: 'Optional[str]' = None", "Optional[str]"], ["pdm: 'Optional[CatalogPdmLdmRequest]' = None", "Optional[CatalogPdmLdmRequest]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[GenerateLdmRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "scan_model_request": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogScanModelRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["separator: 'str' = '__'", "str"], ["scan_tables: 'bool' = True", "bool"], ["scan_views: 'bool' = False", "bool"], ["table_prefix: 'Optional[str]' = None", "Optional[str]"], ["view_prefix: 'Optional[str]' = None", "Optional[str]"], ["schemata: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ScanRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "scan_sql_request": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ScanSqlRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["sql: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiScanSqlRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "responses": {"kind": "module", "scan_sql_response": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SqlColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["data_type: 'str'", "str"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiSqlColumn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ScanSqlResponse": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["columns: 'List[SqlColumn]'", "List[SqlColumn]"], ["data_preview: 'Optional[List[List[Optional[str]]]]' = None", "Optional[List[List[Optional[str]]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiScanSqlResponse]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "sql_column": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SqlColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["data_type: 'str'", "str"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class SqlColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SqlColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiSqlColumn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "declarative_model": {"kind": "module", "data_source": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeTables": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["tables: 'List[CatalogDeclarativeTable]' = NOTHING", "List[CatalogDeclarativeTable]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeTables]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["data_source_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentialsFromFile": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["file_path: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "token_from_file": {"docstring": null, "signature": {"params": [["file_path: 'Path'", "Path"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogParameter": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["name: str", "<class 'str'>"], ["value: str", "<class 'str'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "typing.Type[gooddata_api_client.model.parameter.Parameter]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSourcePermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSourcePermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSources": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["data_sources: 'List[CatalogDeclarativeDataSource]'", "List[CatalogDeclarativeDataSource]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSources]"}, "docstring_parsed": null, "kind": "function"}, "data_sources_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["credentials: 'Optional[dict[str, Any]]' = None", "Optional[dict[str, Any]]"]], "return_annotation": "DeclarativeDataSources"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSource": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["type: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["schema: 'str'", "str"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["pdm: 'CatalogDeclarativeTables' = CatalogDeclarativeTables(tables=[])", "CatalogDeclarativeTables"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["username: 'Optional[str]' = None", "Optional[str]"], ["parameters: 'Optional[List[CatalogParameter]]' = None", "Optional[List[CatalogParameter]]"], ["decoded_parameters: 'Optional[List[CatalogParameter]]' = None", "Optional[List[CatalogParameter]]"], ["permissions: 'List[CatalogDeclarativeDataSourcePermission]' = NOTHING", "List[CatalogDeclarativeDataSourcePermission]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSource]"}, "docstring_parsed": null, "kind": "function"}, "data_source_folder": {"docstring": null, "signature": {"params": [["data_sources_folder: 'Path'", "Path"], ["data_source_id: 'str'", "str"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["data_sources_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["password: 'Optional[str]' = None", "Optional[str]"], ["token: 'Optional[str]' = None", "Optional[str]"], ["include_nested_structures: 'bool' = True", "bool"]], "return_annotation": "DeclarativeDataSource"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "to_test_request": {"docstring": null, "signature": {"params": [["self", "None"], ["password: 'Optional[str]' = None", "Optional[str]"], ["token: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "TestDefinitionRequest"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "physical_model": {"kind": "module", "column": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["data_type: 'str'", "str"], ["is_primary_key: 'Optional[bool]' = None", "Optional[bool]"], ["referenced_table_id: 'Optional[str]' = None", "Optional[str]"], ["referenced_table_column: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeColumn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "pdm": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeTable": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"], ["path: 'List[str]'", "List[str]"], ["columns: 'List[CatalogDeclarativeColumn]'", "List[CatalogDeclarativeColumn]"], ["name_prefix: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeTable]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["pdm_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeTables": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["tables: 'List[CatalogDeclarativeTable]' = NOTHING", "List[CatalogDeclarativeTable]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeTables]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["data_source_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogScanResultPdm": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["pdm: 'CatalogDeclarativeTables' = CatalogDeclarativeTables(tables=[])", "CatalogDeclarativeTables"], ["warnings: 'List[Dict]' = NOTHING", "List[Dict]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "table": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["data_type: 'str'", "str"], ["is_primary_key: 'Optional[bool]' = None", "Optional[bool]"], ["referenced_table_id: 'Optional[str]' = None", "Optional[str]"], ["referenced_table_column: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeColumn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeTable": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"], ["path: 'List[str]'", "List[str]"], ["columns: 'List[CatalogDeclarativeColumn]'", "List[CatalogDeclarativeColumn]"], ["name_prefix: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTable.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTable.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeTable]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["pdm_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}}, "entity_model": {"kind": "module", "content_objects": {"kind": "module", "table": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceTable": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"], ["attributes: 'CatalogDataSourceTableAttributes'", "CatalogDataSourceTableAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceTableAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["columns: 'List[CatalogDataSourceTableColumn]'", "List[CatalogDataSourceTableColumn]"], ["name_prefix: 'Optional[str]' = None", "Optional[str]"], ["path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["type: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceTableColumn": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["data_type: 'str'", "str"], ["is_primary_key: 'Optional[bool]' = None", "Optional[bool]"], ["referenced_table_column: 'Optional[str]' = None", "Optional[str]"], ["referenced_table_id: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableColumn.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableColumn.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "data_source": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "BasicCredentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["username: 'str'", "str"], ["password: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Credentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["token: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentialsFromFile": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["file_path: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "token_from_file": {"docstring": null, "signature": {"params": [["file_path: 'Path'", "Path"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceBase": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other: 'Any'", "Any"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceBase.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["type: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceBase.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBase.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSource": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other: 'Any'", "Any"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSource.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["type: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSource.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "DatabaseAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class DatabaseAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabaseAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PostgresAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '5432'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class PostgresAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class PostgresAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "RedshiftAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '5439'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class RedshiftAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class RedshiftAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "VerticaAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '5433'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class VerticaAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class VerticaAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GreenplumAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '5432'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class GreenplumAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class GreenplumAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourcePostgres": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'POSTGRESQL'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourcePostgres.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourcePostgres.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceRedshift": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'REDSHIFT'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceRedshift.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceRedshift.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceVertica": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'VERTICA'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceVertica.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceVertica.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SnowflakeAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["account: 'str'", "str"], ["warehouse: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '443'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class SnowflakeAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class SnowflakeAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceSnowflake": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'SNOWFLAKE'", "str"], ["db_specific_attributes: 'DatabaseAttributes'", "DatabaseAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceSnowflake.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceSnowflake.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceBigQuery": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'BIGQUERY'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceBigQuery.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceBigQuery.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceGreenplum": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'GREENPLUM'", "str"], ["db_vendor: 'str' = 'postgresql'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceGreenplum.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceGreenplum.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "MsSqlAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["db_name: 'str'", "str"], ["port: 'str' = '1433'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class MsSqlAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class MsSqlAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceMsSql": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'MSSQL'", "str"], ["db_vendor: 'str' = 'sqlserver'", "str"], ["db_specific_attributes: 'MsSqlAttributes'", "MsSqlAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceMsSql.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceMsSql.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "DatabricksAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["http_path: 'str'", "str"], ["port: 'str' = '443'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class DatabricksAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class DatabricksAttributes.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceDatabricks": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"], ["type: 'str' = 'DATABRICKS'", "str"], ["parameters: 'List[Dict[str, str]]'", "List[Dict[str, str]]"], ["db_specific_attributes: 'DatabricksAttributes'", "DatabricksAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceDatabricks.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceDatabricks.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "service": {"kind": "module", "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogGenerateLdmRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["separator: 'str' = '__'", "str"], ["generate_long_ids: 'Optional[bool]' = None", "Optional[bool]"], ["table_prefix: 'Optional[str]' = None", "Optional[str]"], ["view_prefix: 'Optional[str]' = None", "Optional[str]"], ["primary_label_prefix: 'Optional[str]' = None", "Optional[str]"], ["secondary_label_prefix: 'Optional[str]' = None", "Optional[str]"], ["fact_prefix: 'Optional[str]' = None", "Optional[str]"], ["date_granularities: 'Optional[str]' = None", "Optional[str]"], ["grain_prefix: 'Optional[str]' = None", "Optional[str]"], ["reference_prefix: 'Optional[str]' = None", "Optional[str]"], ["grain_reference_prefix: 'Optional[str]' = None", "Optional[str]"], ["denorm_prefix: 'Optional[str]' = None", "Optional[str]"], ["wdf_prefix: 'Optional[str]' = None", "Optional[str]"], ["pdm: 'Optional[CatalogPdmLdmRequest]' = None", "Optional[CatalogPdmLdmRequest]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogGenerateLdmRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGenerateLdmRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[GenerateLdmRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogScanModelRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["separator: 'str' = '__'", "str"], ["scan_tables: 'bool' = True", "bool"], ["scan_views: 'bool' = False", "bool"], ["table_prefix: 'Optional[str]' = None", "Optional[str]"], ["view_prefix: 'Optional[str]' = None", "Optional[str]"], ["schemata: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogScanModelRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanModelRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ScanRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ScanSqlRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["sql: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class ScanSqlRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiScanSqlRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ScanSqlResponse": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["columns: 'List[SqlColumn]'", "List[SqlColumn]"], ["data_preview: 'Optional[List[List[Optional[str]]]]' = None", "Optional[List[List[Optional[str]]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class ScanSqlResponse.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class ScanSqlResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ApiScanSqlResponse]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSource": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["type: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["schema: 'str'", "str"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["pdm: 'CatalogDeclarativeTables' = CatalogDeclarativeTables(tables=[])", "CatalogDeclarativeTables"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["username: 'Optional[str]' = None", "Optional[str]"], ["parameters: 'Optional[List[CatalogParameter]]' = None", "Optional[List[CatalogParameter]]"], ["decoded_parameters: 'Optional[List[CatalogParameter]]' = None", "Optional[List[CatalogParameter]]"], ["permissions: 'List[CatalogDeclarativeDataSourcePermission]' = NOTHING", "List[CatalogDeclarativeDataSourcePermission]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSource.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSource]"}, "docstring_parsed": null, "kind": "function"}, "data_source_folder": {"docstring": null, "signature": {"params": [["data_sources_folder: 'Path'", "Path"], ["data_source_id: 'str'", "str"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["data_sources_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["password: 'Optional[str]' = None", "Optional[str]"], ["token: 'Optional[str]' = None", "Optional[str]"], ["include_nested_structures: 'bool' = True", "bool"]], "return_annotation": "DeclarativeDataSource"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "to_test_request": {"docstring": null, "signature": {"params": [["self", "None"], ["password: 'Optional[str]' = None", "Optional[str]"], ["token: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "TestDefinitionRequest"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSources": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["data_sources: 'List[CatalogDeclarativeDataSource]'", "List[CatalogDeclarativeDataSource]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSources.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSources.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSources]"}, "docstring_parsed": null, "kind": "function"}, "data_sources_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["credentials: 'Optional[dict[str, Any]]' = None", "Optional[dict[str, Any]]"]], "return_annotation": "DeclarativeDataSources"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeTables": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["tables: 'List[CatalogDeclarativeTable]' = NOTHING", "List[CatalogDeclarativeTable]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeTables.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeTables.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeTables]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["data_source_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogScanResultPdm": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["pdm: 'CatalogDeclarativeTables' = CatalogDeclarativeTables(tables=[])", "CatalogDeclarativeTables"], ["warnings: 'List[Dict]' = NOTHING", "List[Dict]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogScanResultPdm.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogScanResultPdm.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceTable": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"], ["attributes: 'CatalogDataSourceTableAttributes'", "CatalogDataSourceTableAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceTable.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTable.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSource": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other: 'Any'", "Any"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSource.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["type: 'str'", "str"], ["schema: 'str'", "str"], ["url: 'Optional[str]' = None", "Optional[str]"], ["enable_caching: 'Optional[bool]' = None", "Optional[bool]"], ["cache_path: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["decoded_parameters: 'Optional[List[Dict[str, str]]]' = None", "Optional[List[Dict[str, str]]]"], ["credentials: 'Credentials'", "Credentials"], ["db_specific_attributes: 'Optional[DatabaseAttributes]' = None", "Optional[DatabaseAttributes]"], ["url_params: 'Optional[List[Tuple[str, str]]]' = None", "Optional[List[Tuple[str, str]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSource.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSource.", "examples": "[]", "returns": null}, "kind": "function"}, "_check_allowed_values": {"docstring": null, "signature": {"params": [["self", "None"], ["attribute: 'attr.Attribute'", "attr.Attribute"], ["value: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "_join_params": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "_make_url": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[str]"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentialsFromFile": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["file_path: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "token_from_file": {"docstring": null, "signature": {"params": [["file_path: 'Path'", "Path"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogDataSourceService": {"docstring": "_summary_\n\nArgs:\n    CatalogServiceBase (_type_): _description_", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_credentials_from_file": {"docstring": null, "signature": {"params": [["credentials_path: 'Path'", "Path"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "create_or_update_data_source": {"docstring": "Pushes the Data Source to the GoodData environment.\n\nAutomatically decides, whether to create or update.\n\nArgs:\n    data_source (CatalogDataSource):\n        Catalog Data Source object\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source: 'CatalogDataSource'", "CatalogDataSource"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source", "default": null, "is_optional": false, "type_name": "CatalogDataSource", "description": "Catalog Data Source object"}], "long_description": "Automatically decides, whether to create or update.", "short_description": "Pushes the Data Source to the GoodData environment.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "data_source_folder": {"docstring": "TODO\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path):\n        ...\n\nReturns:\n    Path:\n        Path to the source folder.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": null, "is_optional": false, "type_name": "Path", "description": "..."}], "long_description": null, "short_description": "TODO", "examples": "[]", "returns": {"type_name": "Path", "description": "Path to the source folder.", "return_name": null}}, "kind": "function"}, "delete_data_source": {"docstring": "Delete data source using Data Source id.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Delete data source using Data Source id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "generate_logical_model": {"docstring": "Generate logical data model for a data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    generate_ldm_request (CatalogGenerateLdmRequest, optional):\n        LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["generate_ldm_request: 'CatalogGenerateLdmRequest' = CatalogGenerateLdmRequest(separator='__', generate_long_ids=None, table_prefix=None, view_prefix=None, primary_label_prefix=None, secondary_label_prefix=None, fact_prefix=None, date_granularities=None, grain_prefix=None, reference_prefix=None, grain_reference_prefix=None, denorm_prefix=None, wdf_prefix='wdf', pdm=None)", "CatalogGenerateLdmRequest"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "generate_ldm_request", "default": null, "is_optional": true, "type_name": "CatalogGenerateLdmRequest", "description": "LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")"}], "long_description": null, "short_description": "Generate logical data model for a data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model", "return_name": null}}, "kind": "function"}, "get_data_source": {"docstring": "Retrieve Data Source entity using data source id.\n\nArgs:\n    data_source_id (str): Data Source identification string e.g. \"demo\"\n\nReturns:\n    CatalogDataSource: Data Source Object", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDataSource"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve Data Source entity using data source id.", "examples": "[]", "returns": {"type_name": "CatalogDataSource", "description": "Data Source Object", "return_name": null}}, "kind": "function"}, "get_declarative_data_sources": {"docstring": "Retrieve all data sources, including their related physical data model.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources, including physical data model.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources, including physical data model.", "return_name": null}}, "kind": "function"}, "get_declarative_pdm": {"docstring": "Retrieve physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve physical data model for a given data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_data_source_tables": {"docstring": "Lists all the data source tables for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    List[CatalogDataSourceTable]:\n        List of Data Source Table objects", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "List[CatalogDataSourceTable]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Lists all the data source tables for a given data source.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSourceTable]", "description": "List of Data Source Table objects", "return_name": null}}, "kind": "function"}, "list_data_sources": {"docstring": "Lists all data sources.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogDataSource]:\n        List of all Data Sources in the whole organization.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogDataSource]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Lists all data sources.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSource]", "description": "List of all Data Sources in the whole organization.", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_data_sources": {"docstring": "Loads and sets layouts stored using `store_declarative_data_sources`.\n\nThis method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to Path.cwd().\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}, {"arg_name": "credentials_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to Path.cwd()."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": "This method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.", "short_description": "Loads and sets layouts stored using `store_declarative_data_sources`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_pdm": {"docstring": "Loads and sets layouts stored using `store_declarative_pdm`.\n\nThis method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.", "short_description": "Loads and sets layouts stored using `store_declarative_pdm`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_data_sources": {"docstring": "Load declarative data sources layout, which was stored using store_declarative_data_sources.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources object", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative data sources layout, which was stored using store_declarative_data_sources.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object", "return_name": null}}, "kind": "function"}, "load_declarative_pdm": {"docstring": "Load declarative physical data model layout.\n\nLoad declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables: Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "Load declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.", "short_description": "Load declarative physical data model layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "load_pdm_from_disk": {"docstring": "This method is used to load pdm stored to disk using method store_pdm_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "This method is used to load pdm stored to disk using method store_pdm_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "patch_data_source_attributes": {"docstring": "Applies changes to the specified data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    attributes (dict):\n        A dictionary containing attributes of the data source to be changed.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["attributes: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "attributes", "default": null, "is_optional": false, "type_name": "dict", "description": "A dictionary containing attributes of the data source to be changed."}], "long_description": null, "short_description": "Applies changes to the specified data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_data_sources": {"docstring": "Set all data sources, including their related physical data model.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Source object. Can be retrieved by get_declarative_data_sources.\n    credentials_path (Optional[Path], optional):\n        Path to the Credentials. Optional, defaults to None.\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Source object. Can be retrieved by get_declarative_data_sources."}, {"arg_name": "credentials_path", "default": null, "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the Credentials. Optional, defaults to None."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": null, "short_description": "Set all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_pdm": {"docstring": "Set physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    declarative_tables (CatalogDeclarativeTables):\n        Physical Data Model object. Can be obtained via get_declarative_pdm.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["declarative_tables: 'CatalogDeclarativeTables'", "CatalogDeclarativeTables"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "declarative_tables", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object. Can be obtained via get_declarative_pdm."}], "long_description": null, "short_description": "Set physical data model for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "register_upload_notification": {"docstring": "Invalidate cache of your computed reports to force your analytics to be recomputed.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Invalidate cache of your computed reports to force your analytics to be recomputed.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "report_warnings": {"docstring": null, "signature": {"params": [["warnings: 'list[dict]'", "list[dict]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "scan_and_put_pdm": {"docstring": "This method combines scan_data_source and put_declarative_pdm methods.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}], "long_description": null, "short_description": "This method combines scan_data_source and put_declarative_pdm methods.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "scan_data_source": {"docstring": "Scan data source specified by its id and optionally by specified scan request.\n\nCatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n    report_warnings (bool, optional):\n        Switch to turn on warnings. Defaults to False.\n\nReturns:\n    CatalogScanResultPdm:\n        An instance of CatalogScanResultPdm.\n        Containing pdm itself and a list of warnings that occurred during scanning.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"], ["report_warnings: 'bool' = False", "bool"]], "return_annotation": "CatalogScanResultPdm"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}, {"arg_name": "report_warnings", "default": "False", "is_optional": true, "type_name": "bool", "description": "Switch to turn on warnings. Defaults to False."}], "long_description": "CatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.", "short_description": "Scan data source specified by its id and optionally by specified scan request.", "examples": "[]", "returns": {"type_name": "CatalogScanResultPdm", "description": "An instance of CatalogScanResultPdm.\nContaining pdm itself and a list of warnings that occurred during scanning.", "return_name": null}}, "kind": "function"}, "scan_schemata": {"docstring": "Returns a list of schemas that exist in the database.\n\nCan be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    list[str]:\n        List of schema names for the given data source specified by its id.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "list[str]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": "Can be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.", "short_description": "Returns a list of schemas that exist in the database.", "examples": "[]", "returns": {"type_name": "list[str]", "description": "List of schema names for the given data source specified by its id.", "return_name": null}}, "kind": "function"}, "scan_sql": {"docstring": "Analyze SELECT SQL query in a given request.\n\nReturn description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    sql_request (ScanSqlRequest):\n        SELECT SQL query to analyze\n\nReturns:\n    ScanSqlResponse:\n        SELECT query analysis result", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["sql_request: 'ScanSqlRequest'", "ScanSqlRequest"]], "return_annotation": "ScanSqlResponse"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "sql_request", "default": null, "is_optional": false, "type_name": "ScanSqlRequest", "description": "SELECT SQL query to analyze"}], "long_description": "Return description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.", "short_description": "Analyze SELECT SQL query in a given request.", "examples": "[]", "returns": {"type_name": "ScanSqlResponse", "description": "SELECT query analysis result", "return_name": null}}, "kind": "function"}, "store_declarative_data_sources": {"docstring": "Store data sources layouts in a directory hierarchy.\n\n    gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml", "short_description": "Store data sources layouts in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_pdm": {"docstring": "Store physical data model layout in directory hierarchy for a given data source.\n\ngooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml", "short_description": "Store physical data model layout in directory hierarchy for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_pdm_to_disk": {"docstring": "Store the physical data model layout in the directory for a given data source.\n\nThe directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    datasource_id (str):\n        Data Source identification string. e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["datasource_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "datasource_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "The directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml", "short_description": "Store the physical data model layout in the directory for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "test_data_sources_connection": {"docstring": "Tests connection to declarative data sources.\n\nIf `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Sources object\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to None.\n\nRaises:\n    ValueError:\n        Check API references for possible errors of data source connections.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object"}, {"arg_name": "credentials_path", "default": "None", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to None."}], "long_description": "If `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.", "short_description": "Tests connection to declarative data sources.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": {"params": [{"arg_name": "CatalogServiceBase", "default": null, "is_optional": false, "type_name": "_type_", "description": "_description_"}], "long_description": null, "short_description": "_summary_", "examples": "[]", "returns": null}, "kind": "class"}}, "validation": {"kind": "module", "data_source": {"kind": "module", "CatalogDataSourceService": {"docstring": "_summary_\n\nArgs:\n    CatalogServiceBase (_type_): _description_", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_credentials_from_file": {"docstring": null, "signature": {"params": [["credentials_path: 'Path'", "Path"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "create_or_update_data_source": {"docstring": "Pushes the Data Source to the GoodData environment.\n\nAutomatically decides, whether to create or update.\n\nArgs:\n    data_source (CatalogDataSource):\n        Catalog Data Source object\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source: 'CatalogDataSource'", "CatalogDataSource"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source", "default": null, "is_optional": false, "type_name": "CatalogDataSource", "description": "Catalog Data Source object"}], "long_description": "Automatically decides, whether to create or update.", "short_description": "Pushes the Data Source to the GoodData environment.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "data_source_folder": {"docstring": "TODO\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path):\n        ...\n\nReturns:\n    Path:\n        Path to the source folder.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": null, "is_optional": false, "type_name": "Path", "description": "..."}], "long_description": null, "short_description": "TODO", "examples": "[]", "returns": {"type_name": "Path", "description": "Path to the source folder.", "return_name": null}}, "kind": "function"}, "delete_data_source": {"docstring": "Delete data source using Data Source id.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Delete data source using Data Source id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "generate_logical_model": {"docstring": "Generate logical data model for a data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    generate_ldm_request (CatalogGenerateLdmRequest, optional):\n        LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["generate_ldm_request: 'CatalogGenerateLdmRequest' = CatalogGenerateLdmRequest(separator='__', generate_long_ids=None, table_prefix=None, view_prefix=None, primary_label_prefix=None, secondary_label_prefix=None, fact_prefix=None, date_granularities=None, grain_prefix=None, reference_prefix=None, grain_reference_prefix=None, denorm_prefix=None, wdf_prefix='wdf', pdm=None)", "CatalogGenerateLdmRequest"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "generate_ldm_request", "default": null, "is_optional": true, "type_name": "CatalogGenerateLdmRequest", "description": "LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")"}], "long_description": null, "short_description": "Generate logical data model for a data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model", "return_name": null}}, "kind": "function"}, "get_data_source": {"docstring": "Retrieve Data Source entity using data source id.\n\nArgs:\n    data_source_id (str): Data Source identification string e.g. \"demo\"\n\nReturns:\n    CatalogDataSource: Data Source Object", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDataSource"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve Data Source entity using data source id.", "examples": "[]", "returns": {"type_name": "CatalogDataSource", "description": "Data Source Object", "return_name": null}}, "kind": "function"}, "get_declarative_data_sources": {"docstring": "Retrieve all data sources, including their related physical data model.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources, including physical data model.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources, including physical data model.", "return_name": null}}, "kind": "function"}, "get_declarative_pdm": {"docstring": "Retrieve physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve physical data model for a given data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_data_source_tables": {"docstring": "Lists all the data source tables for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    List[CatalogDataSourceTable]:\n        List of Data Source Table objects", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "List[CatalogDataSourceTable]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Lists all the data source tables for a given data source.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSourceTable]", "description": "List of Data Source Table objects", "return_name": null}}, "kind": "function"}, "list_data_sources": {"docstring": "Lists all data sources.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogDataSource]:\n        List of all Data Sources in the whole organization.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogDataSource]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Lists all data sources.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSource]", "description": "List of all Data Sources in the whole organization.", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_data_sources": {"docstring": "Loads and sets layouts stored using `store_declarative_data_sources`.\n\nThis method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to Path.cwd().\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}, {"arg_name": "credentials_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to Path.cwd()."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": "This method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.", "short_description": "Loads and sets layouts stored using `store_declarative_data_sources`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_pdm": {"docstring": "Loads and sets layouts stored using `store_declarative_pdm`.\n\nThis method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.", "short_description": "Loads and sets layouts stored using `store_declarative_pdm`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_data_sources": {"docstring": "Load declarative data sources layout, which was stored using store_declarative_data_sources.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources object", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative data sources layout, which was stored using store_declarative_data_sources.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object", "return_name": null}}, "kind": "function"}, "load_declarative_pdm": {"docstring": "Load declarative physical data model layout.\n\nLoad declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables: Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "Load declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.", "short_description": "Load declarative physical data model layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "load_pdm_from_disk": {"docstring": "This method is used to load pdm stored to disk using method store_pdm_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "This method is used to load pdm stored to disk using method store_pdm_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "patch_data_source_attributes": {"docstring": "Applies changes to the specified data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    attributes (dict):\n        A dictionary containing attributes of the data source to be changed.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["attributes: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "attributes", "default": null, "is_optional": false, "type_name": "dict", "description": "A dictionary containing attributes of the data source to be changed."}], "long_description": null, "short_description": "Applies changes to the specified data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_data_sources": {"docstring": "Set all data sources, including their related physical data model.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Source object. Can be retrieved by get_declarative_data_sources.\n    credentials_path (Optional[Path], optional):\n        Path to the Credentials. Optional, defaults to None.\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Source object. Can be retrieved by get_declarative_data_sources."}, {"arg_name": "credentials_path", "default": null, "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the Credentials. Optional, defaults to None."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": null, "short_description": "Set all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_pdm": {"docstring": "Set physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    declarative_tables (CatalogDeclarativeTables):\n        Physical Data Model object. Can be obtained via get_declarative_pdm.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["declarative_tables: 'CatalogDeclarativeTables'", "CatalogDeclarativeTables"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "declarative_tables", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object. Can be obtained via get_declarative_pdm."}], "long_description": null, "short_description": "Set physical data model for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "register_upload_notification": {"docstring": "Invalidate cache of your computed reports to force your analytics to be recomputed.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Invalidate cache of your computed reports to force your analytics to be recomputed.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "report_warnings": {"docstring": null, "signature": {"params": [["warnings: 'list[dict]'", "list[dict]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "scan_and_put_pdm": {"docstring": "This method combines scan_data_source and put_declarative_pdm methods.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}], "long_description": null, "short_description": "This method combines scan_data_source and put_declarative_pdm methods.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "scan_data_source": {"docstring": "Scan data source specified by its id and optionally by specified scan request.\n\nCatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n    report_warnings (bool, optional):\n        Switch to turn on warnings. Defaults to False.\n\nReturns:\n    CatalogScanResultPdm:\n        An instance of CatalogScanResultPdm.\n        Containing pdm itself and a list of warnings that occurred during scanning.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"], ["report_warnings: 'bool' = False", "bool"]], "return_annotation": "CatalogScanResultPdm"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}, {"arg_name": "report_warnings", "default": "False", "is_optional": true, "type_name": "bool", "description": "Switch to turn on warnings. Defaults to False."}], "long_description": "CatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.", "short_description": "Scan data source specified by its id and optionally by specified scan request.", "examples": "[]", "returns": {"type_name": "CatalogScanResultPdm", "description": "An instance of CatalogScanResultPdm.\nContaining pdm itself and a list of warnings that occurred during scanning.", "return_name": null}}, "kind": "function"}, "scan_schemata": {"docstring": "Returns a list of schemas that exist in the database.\n\nCan be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    list[str]:\n        List of schema names for the given data source specified by its id.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "list[str]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": "Can be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.", "short_description": "Returns a list of schemas that exist in the database.", "examples": "[]", "returns": {"type_name": "list[str]", "description": "List of schema names for the given data source specified by its id.", "return_name": null}}, "kind": "function"}, "scan_sql": {"docstring": "Analyze SELECT SQL query in a given request.\n\nReturn description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    sql_request (ScanSqlRequest):\n        SELECT SQL query to analyze\n\nReturns:\n    ScanSqlResponse:\n        SELECT query analysis result", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["sql_request: 'ScanSqlRequest'", "ScanSqlRequest"]], "return_annotation": "ScanSqlResponse"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "sql_request", "default": null, "is_optional": false, "type_name": "ScanSqlRequest", "description": "SELECT SQL query to analyze"}], "long_description": "Return description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.", "short_description": "Analyze SELECT SQL query in a given request.", "examples": "[]", "returns": {"type_name": "ScanSqlResponse", "description": "SELECT query analysis result", "return_name": null}}, "kind": "function"}, "store_declarative_data_sources": {"docstring": "Store data sources layouts in a directory hierarchy.\n\n    gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml", "short_description": "Store data sources layouts in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_pdm": {"docstring": "Store physical data model layout in directory hierarchy for a given data source.\n\ngooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml", "short_description": "Store physical data model layout in directory hierarchy for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_pdm_to_disk": {"docstring": "Store the physical data model layout in the directory for a given data source.\n\nThe directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    datasource_id (str):\n        Data Source identification string. e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["datasource_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "datasource_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "The directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml", "short_description": "Store the physical data model layout in the directory for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "test_data_sources_connection": {"docstring": "Tests connection to declarative data sources.\n\nIf `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Sources object\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to None.\n\nRaises:\n    ValueError:\n        Check API references for possible errors of data source connections.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object"}, {"arg_name": "credentials_path", "default": "None", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to None."}], "long_description": "If `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.", "short_description": "Tests connection to declarative data sources.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": {"params": [{"arg_name": "CatalogServiceBase", "default": null, "is_optional": false, "type_name": "_type_", "description": "_description_"}], "long_description": null, "short_description": "_summary_", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogDeclarativeModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "DataSourceValidator": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["data_source_service: 'CatalogDataSourceService'", "CatalogDataSourceService"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "validate_data_source_ids": {"docstring": null, "signature": {"params": [["self", "None"], ["data_source_ids: 'set[str]'", "set[str]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "validate_ldm": {"docstring": null, "signature": {"params": [["self", "None"], ["model: 'CatalogDeclarativeModel'", "CatalogDeclarativeModel"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}}, "entity": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogNameEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogTypeEntity": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogTitleEntity": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Credentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Credentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Credentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["token: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TokenCredentialsFromFile": {"docstring": null, "functions": {"__attrs_post_init__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__eq__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["file_path: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TokenCredentialsFromFile.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TokenCredentialsFromFile.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "token_from_file": {"docstring": null, "signature": {"params": [["file_path: 'Path'", "Path"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "BasicCredentials": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["username: 'str'", "str"], ["password: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class BasicCredentials.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class BasicCredentials.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api_args": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "identifier": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[WorkspaceIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogReferenceIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ReferenceIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogGrainIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[GrainIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogAssigneeIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[AssigneeIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[UserGroupIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogLabelIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[LabelIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "organization": {"kind": "module", "entity_model": {"kind": "module", "organization": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogOrganizationDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogOrganization'", "CatalogOrganization"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiOrganizationInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["oauth_client_secret: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "JsonApiOrganizationInDocument"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogOrganization": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["attributes: 'CatalogOrganizationAttributes'", "CatalogOrganizationAttributes"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogOrganization.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganization.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiOrganizationIn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogOrganizationAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["name: 'Optional[str]' = None", "Optional[str]"], ["hostname: 'Optional[str]' = None", "Optional[str]"], ["allowed_origins: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["oauth_issuer_location: 'Optional[str]' = None", "Optional[str]"], ["oauth_client_id: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogOrganizationAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiOrganizationInAttributes]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "service": {"kind": "module", "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogOrganizationDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogOrganization'", "CatalogOrganization"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogOrganizationDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogOrganizationDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiOrganizationInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["oauth_client_secret: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "JsonApiOrganizationInDocument"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogOrganizationService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "update_name": {"docstring": "Updates the name of the organization.\n\nArgs:\n    name (str):\n        New name of the organization\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "name", "default": null, "is_optional": false, "type_name": "str", "description": "New name of the organization"}], "long_description": null, "short_description": "Updates the name of the organization.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "update_oidc_parameters": {"docstring": "Updates OIDC parameters of organization.\n\nArgs:\n    oauth_issuer_location (Optional[str], optional):\n        Issuer location. Defaults to None.\n    oauth_client_id (Optional[str], optional):\n        Public client identifier. Defaults to None.\n    oauth_client_secret (Optional[str], optional):\n        Client secret. Defaults to None.\n\nReturns:\n    None\n\nRaises:\n    ValueError:\n        Parameters were not strictly all none or all string.", "signature": {"params": [["self", "None"], ["oauth_issuer_location: 'Optional[str]' = None", "Optional[str]"], ["oauth_client_id: 'Optional[str]' = None", "Optional[str]"], ["oauth_client_secret: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "oauth_issuer_location", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Issuer location. Defaults to None."}, {"arg_name": "oauth_client_id", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Public client identifier. Defaults to None."}, {"arg_name": "oauth_client_secret", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Client secret. Defaults to None."}], "long_description": null, "short_description": "Updates OIDC parameters of organization.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "parameter": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogParameter": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["name: str", "<class 'str'>"], ["value: str", "<class 'str'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogParameter.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogParameter.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "typing.Type[gooddata_api_client.model.parameter.Parameter]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "permission": {"kind": "module", "declarative_model": {"kind": "module", "permission": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogAssigneeIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogAssigneeIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAssigneeIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[AssigneeIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeSingleWorkspacePermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeSingleWorkspacePermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceHierarchyPermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceHierarchyPermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataSourcePermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataSourcePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataSourcePermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspacePermissions": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["permissions: 'List[CatalogDeclarativeSingleWorkspacePermission]' = NOTHING", "List[CatalogDeclarativeSingleWorkspacePermission]"], ["hierarchy_permissions: 'List[CatalogDeclarativeWorkspaceHierarchyPermission]' = NOTHING", "List[CatalogDeclarativeWorkspaceHierarchyPermission]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspacePermissions]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "service": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspacePermissions": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["permissions: 'List[CatalogDeclarativeSingleWorkspacePermission]' = NOTHING", "List[CatalogDeclarativeSingleWorkspacePermission]"], ["hierarchy_permissions: 'List[CatalogDeclarativeWorkspaceHierarchyPermission]' = NOTHING", "List[CatalogDeclarativeWorkspaceHierarchyPermission]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspacePermissions.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspacePermissions]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogPermissionService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: gooddata_sdk.client.GoodDataApiClient", "<class 'gooddata_sdk.client.GoodDataApiClient'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_declarative_permissions": {"docstring": "Retrieve current set of permissions of the workspace in a declarative form.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeWorkspacePermissions:\n        Object containing workspace permissions.", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"]], "return_annotation": "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve current set of permissions of the workspace in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace permissions.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "put_declarative_permissions": {"docstring": "Set effective permissions for the workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n    declarative_workspace_permissions (CatalogDeclarativeWorkspacePermissions):\n        Object containing workspace Permissions.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"], ["declarative_workspace_permissions: gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions", "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}, {"arg_name": "declarative_workspace_permissions", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace Permissions."}], "long_description": null, "short_description": "Set effective permissions for the workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "setting": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["content: 'Optional[Dict[str, Any]]' = None", "Optional[Dict[str, Any]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeCustomApplicationSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["application_name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeCustomApplicationSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "types": {"kind": "module"}, "user": {"kind": "module", "declarative_model": {"kind": "module", "user": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[UserGroupIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["content: 'Optional[Dict[str, Any]]' = None", "Optional[Dict[str, Any]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUsers": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["users: 'List[CatalogDeclarativeUser]'", "List[CatalogDeclarativeUser]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUsers]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUser": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["auth_id: 'Optional[str]' = None", "Optional[str]"], ["user_groups: 'List[CatalogUserGroupIdentifier]' = NOTHING", "List[CatalogUserGroupIdentifier]"], ["settings: 'List[CatalogDeclarativeSetting]' = NOTHING", "List[CatalogDeclarativeSetting]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUser]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "user_and_user_groups": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUser": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["auth_id: 'Optional[str]' = None", "Optional[str]"], ["user_groups: 'List[CatalogUserGroupIdentifier]' = NOTHING", "List[CatalogUserGroupIdentifier]"], ["settings: 'List[CatalogDeclarativeSetting]' = NOTHING", "List[CatalogDeclarativeSetting]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUser.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUser.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUser]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUsers": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["users: 'List[CatalogDeclarativeUser]'", "List[CatalogDeclarativeUser]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUsers]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUserGroup": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["parents: 'Optional[List[CatalogUserGroupIdentifier]]' = None", "Optional[List[CatalogUserGroupIdentifier]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUserGroup]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUserGroups": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["user_groups: 'List[CatalogDeclarativeUserGroup]' = NOTHING", "List[CatalogDeclarativeUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUserGroups]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUsersUserGroups": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["users: 'List[CatalogDeclarativeUser]'", "List[CatalogDeclarativeUser]"], ["user_groups: 'List[CatalogDeclarativeUserGroup]'", "List[CatalogDeclarativeUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUsersUserGroups]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "user_group": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[UserGroupIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUserGroups": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["user_groups: 'List[CatalogDeclarativeUserGroup]' = NOTHING", "List[CatalogDeclarativeUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUserGroups]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUserGroup": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["parents: 'Optional[List[CatalogUserGroupIdentifier]]' = None", "Optional[List[CatalogUserGroupIdentifier]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUserGroup]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "entity_model": {"kind": "module", "user": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroup": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["relationships: 'Optional[CatalogUserGroupRelationships]' = None", "Optional[CatalogUserGroupRelationships]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserGroupIn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogUser'", "CatalogUser"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "update_user": {"docstring": null, "signature": {"params": [["self", "None"], ["authentication_id: 'Optional[str]' = None", "Optional[str]"], ["user_group_ids: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUser": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["attributes: 'Optional[CatalogUserAttributes]' = None", "Optional[CatalogUserAttributes]"], ["relationships: 'Optional[CatalogUserRelationships]' = None", "Optional[CatalogUserRelationships]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "add_user_group": {"docstring": "Adds a User Group to the relationships variable.\n\nArgs:\n    user_group (CatalogUserGroup):\n        User Group to be added.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group", "default": null, "is_optional": false, "type_name": "CatalogUserGroup", "description": "User Group to be added."}], "long_description": null, "short_description": "Adds a User Group to the relationships variable.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "add_user_groups": {"docstring": "Adds multiple User Groups to the relationship with the user.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        User Groups to be added.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "User Groups to be added."}], "long_description": null, "short_description": "Adds multiple User Groups to the relationship with the user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserIn]"}, "docstring_parsed": null, "kind": "function"}, "remove_user_groups": {"docstring": "Clears the User Group from the relationship with the user.\n\nReturns:\n    None", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Clears the User Group from the relationship with the user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "replace_user_groups": {"docstring": "Replaces the User Groups in the relationships variable.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        New User Groups to be put into relationship with the user.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "New User Groups to be put into relationship with the user."}], "long_description": null, "short_description": "Replaces the User Groups in the relationships variable.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserAttributes": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["authentication_id: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserAttributes.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserAttributes.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserRelationships": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["user_groups: 'Optional[CatalogUserGroupsData]' = None", "Optional[CatalogUserGroupsData]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserRelationships.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "add_user_groups": {"docstring": "Appends the User Groups to the existing list.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        User Groups to be added.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "User Groups to be added."}], "long_description": null, "short_description": "Appends the User Groups to the existing list.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "replace_user_groups": {"docstring": "Replace the User Groups in the relationship with the user.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        User Groups to replace the old one.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "User Groups to replace the old one."}], "long_description": null, "short_description": "Replace the User Groups in the relationship with the user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupsData": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["data: 'List[CatalogUserGroup]' = NOTHING", "List[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupsData.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupsData.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "user_group": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserGroupInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "update_user_group": {"docstring": null, "signature": {"params": [["self", "None"], ["user_group_parents_id: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroup": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["relationships: 'Optional[CatalogUserGroupRelationships]' = None", "Optional[CatalogUserGroupRelationships]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserGroupIn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupRelationships": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["parents: 'Optional[CatalogUserGroupParents]' = None", "Optional[CatalogUserGroupParents]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupRelationships.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupRelationships.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupParents": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["data: 'Optional[List[CatalogUserGroup]]' = None", "Optional[List[CatalogUserGroup]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupParents.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupParents.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "service": {"kind": "module", "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUsers": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["users: 'List[CatalogDeclarativeUser]'", "List[CatalogDeclarativeUser]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsers.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsers.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUsers]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUsersUserGroups": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["users: 'List[CatalogDeclarativeUser]'", "List[CatalogDeclarativeUser]"], ["user_groups: 'List[CatalogDeclarativeUserGroup]'", "List[CatalogDeclarativeUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUsersUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUsersUserGroups]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeUserGroups": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["user_groups: 'List[CatalogDeclarativeUserGroup]' = NOTHING", "List[CatalogDeclarativeUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeUserGroups.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeUserGroups]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUser": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["attributes: 'Optional[CatalogUserAttributes]' = None", "Optional[CatalogUserAttributes]"], ["relationships: 'Optional[CatalogUserRelationships]' = None", "Optional[CatalogUserRelationships]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUser.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUser.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "add_user_group": {"docstring": "Adds a User Group to the relationships variable.\n\nArgs:\n    user_group (CatalogUserGroup):\n        User Group to be added.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group", "default": null, "is_optional": false, "type_name": "CatalogUserGroup", "description": "User Group to be added."}], "long_description": null, "short_description": "Adds a User Group to the relationships variable.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "add_user_groups": {"docstring": "Adds multiple User Groups to the relationship with the user.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        User Groups to be added.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "User Groups to be added."}], "long_description": null, "short_description": "Adds multiple User Groups to the relationship with the user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserIn]"}, "docstring_parsed": null, "kind": "function"}, "remove_user_groups": {"docstring": "Clears the User Group from the relationship with the user.\n\nReturns:\n    None", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Clears the User Group from the relationship with the user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "replace_user_groups": {"docstring": "Replaces the User Groups in the relationships variable.\n\nArgs:\n    user_groups (list[CatalogUserGroup]):\n        New User Groups to be put into relationship with the user.\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'list[CatalogUserGroup]'", "list[CatalogUserGroup]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "list[CatalogUserGroup]", "description": "New User Groups to be put into relationship with the user."}], "long_description": null, "short_description": "Replaces the User Groups in the relationships variable.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogUser'", "CatalogUser"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "update_user": {"docstring": null, "signature": {"params": [["self", "None"], ["authentication_id: 'Optional[str]' = None", "Optional[str]"], ["user_group_ids: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroup": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["relationships: 'Optional[CatalogUserGroupRelationships]' = None", "Optional[CatalogUserGroupRelationships]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroup.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroup.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserGroupIn]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserGroupDocument": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["data: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogUserGroupDocument.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogUserGroupDocument.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[JsonApiUserGroupInDocument]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "update_user_group": {"docstring": null, "signature": {"params": [["self", "None"], ["user_group_parents_id: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "create_or_update_user": {"docstring": "Creates a new user or overwrites an existing user.\n\n\nArgs:\n    user (CatalogUser):\n        User entity object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user: 'CatalogUser'", "CatalogUser"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user", "default": null, "is_optional": false, "type_name": "CatalogUser", "description": "User entity object."}], "long_description": null, "short_description": "Creates a new user or overwrites an existing user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "create_or_update_user_group": {"docstring": "Create a new user group or overwrite an existing user group.\n\nArgs:\n    user_group (CatalogUserGroup):\n        UserGroup entity object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group", "default": null, "is_optional": false, "type_name": "CatalogUserGroup", "description": "UserGroup entity object."}], "long_description": null, "short_description": "Create a new user group or overwrite an existing user group.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_user": {"docstring": "Delete User using User id.\n\nArgs:\n    user_id (str):\n        User identification string. e.g. \"123\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_id", "default": null, "is_optional": false, "type_name": "str", "description": "User identification string. e.g. \"123\""}], "long_description": null, "short_description": "Delete User using User id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_user_group": {"docstring": "Delete User Group using User Group id.\n\nArgs:\n    user_group_id (str):\n        User Group identification string. e.g. \"123\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group_id", "default": null, "is_optional": false, "type_name": "str", "description": "User Group identification string. e.g. \"123\""}], "long_description": null, "short_description": "Delete User Group using User Group id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "get_declarative_user_groups": {"docstring": "Retrieve all user groups in a declarative form.\n\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUserGroups:\n        Declarative User Groups object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUserGroups"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all user groups in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object.", "return_name": null}}, "kind": "function"}, "get_declarative_users": {"docstring": "Retrieve all users in a declarative form.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUsers:\n        Declarative Users object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUsers"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all users in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object.", "return_name": null}}, "kind": "function"}, "get_declarative_users_user_groups": {"docstring": "Retrieves all users and user groups in a declarative form.\n\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUsersUserGroups:\n        Declarative Users and User Groups object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUsersUserGroups"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieves all users and user groups in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "get_user": {"docstring": "Get an individual user using User id.\n\nArgs:\n    user_id (str):\n        User identification string. e.g. \"123\"\n\nReturns:\n    CatalogUser:\n        User entity object.", "signature": {"params": [["self", "None"], ["user_id: 'str'", "str"]], "return_annotation": "CatalogUser"}, "docstring_parsed": {"params": [{"arg_name": "user_id", "default": null, "is_optional": false, "type_name": "str", "description": "User identification string. e.g. \"123\""}], "long_description": null, "short_description": "Get an individual user using User id.", "examples": "[]", "returns": {"type_name": "CatalogUser", "description": "User entity object.", "return_name": null}}, "kind": "function"}, "get_user_group": {"docstring": "Get an individual user group using user group id.\n\nArgs:\n    user_group_id (str):\n        User Group identification string. e.g. \"123\"\n\nReturns:\n    CatalogUserGroup:\n        UserGroup entity object.", "signature": {"params": [["self", "None"], ["user_group_id: 'str'", "str"]], "return_annotation": "CatalogUserGroup"}, "docstring_parsed": {"params": [{"arg_name": "user_group_id", "default": null, "is_optional": false, "type_name": "str", "description": "User Group identification string. e.g. \"123\""}], "long_description": null, "short_description": "Get an individual user group using user group id.", "examples": "[]", "returns": {"type_name": "CatalogUserGroup", "description": "UserGroup entity object.", "return_name": null}}, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_user_groups": {"docstring": "Get a list of all existing user groups.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogUserGroup]:\n        List of all User groups as UserGroup entity object.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogUserGroup]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get a list of all existing user groups.", "examples": "[]", "returns": {"type_name": "List[CatalogUserGroup]", "description": "List of all User groups as UserGroup entity object.", "return_name": null}}, "kind": "function"}, "list_users": {"docstring": "Get a list of all existing users.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogUser]:\n        List of all Users as User entity objects.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogUser]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get a list of all existing users.", "examples": "[]", "returns": {"type_name": "List[CatalogUser]", "description": "List of all Users as User entity objects.", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_user_groups": {"docstring": "Loads and sets the layouts stored using `store_declarative_users`.\n\nThis method combines load_declarative_users and put_declarative_users\nmethods to load and set layouts stored using store_declarative_users.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines load_declarative_users and put_declarative_users\nmethods to load and set layouts stored using store_declarative_users.", "short_description": "Loads and sets the layouts stored using `store_declarative_users`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_users": {"docstring": "Loads and sets the layouts stored using `store_declarative_users`.\n\nThis method combines `load_declarative_users` and `put_declarative_users`\nmethods to load and set layouts stored using `store_declarative_users`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_users` and `put_declarative_users`\nmethods to load and set layouts stored using `store_declarative_users`.", "short_description": "Loads and sets the layouts stored using `store_declarative_users`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_users_user_groups": {"docstring": "Loads and sets the layouts stored using `store_declarative_users_user_groups`.\n\nThis method combines `load_declarative_users` and `put_declarative_users_user_groups`\nmethods to load and set layouts stored using `store_declarative_users_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_users` and `put_declarative_users_user_groups`\nmethods to load and set layouts stored using `store_declarative_users_user_groups`.", "short_description": "Loads and sets the layouts stored using `store_declarative_users_user_groups`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_user_groups": {"docstring": "Load declarative users groups layout, which was stored using `store_declarative_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUserGroups:\n        Declarative User Groups object.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUserGroups"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users groups layout, which was stored using `store_declarative_user_groups`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object.", "return_name": null}}, "kind": "function"}, "load_declarative_users": {"docstring": "Load declarative users layout, which was stored using store_declarative_users.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUsers:\n        Declarative Users object, incuding authetication properties.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUsers"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users layout, which was stored using store_declarative_users.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object, incuding authetication properties.", "return_name": null}}, "kind": "function"}, "load_declarative_users_user_groups": {"docstring": "Load declarative users and user groups layout, which was stored using `store_declarative_users_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUsersUserGroups:\n        Declarative Users and User Groups object.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUsersUserGroups"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users and user groups layout, which was stored using `store_declarative_users_user_groups`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object.", "return_name": null}}, "kind": "function"}, "put_declarative_user_groups": {"docstring": "Set all user groups eventually with their parents.\n\nArgs:\n    user_groups (CatalogDeclarativeUserGroups):\n        Declarative User Groups object.\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'CatalogDeclarativeUserGroups'", "CatalogDeclarativeUserGroups"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object."}], "long_description": null, "short_description": "Set all user groups eventually with their parents.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_users": {"docstring": "Set all users and their authentication properties.\n\nArgs:\n    users (CatalogDeclarativeUsers):\n        Declarative Users object, incuding authetication properties.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["users: 'CatalogDeclarativeUsers'", "CatalogDeclarativeUsers"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "users", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object, incuding authetication properties."}], "long_description": null, "short_description": "Set all users and their authentication properties.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_users_user_groups": {"docstring": "Set all users and user groups.\n\nArgs:\n    users_user_groups (CatalogDeclarativeUsersUserGroups):\n        Declarative Users and User Groups object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["users_user_groups: 'CatalogDeclarativeUsersUserGroups'", "CatalogDeclarativeUsersUserGroups"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "users_user_groups", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object."}], "long_description": null, "short_description": "Set all users and user groups.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_user_groups": {"docstring": "Stores all the user groups in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores all the user groups in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_users": {"docstring": "Store users in directory hierarchy. Directly from server.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store users in directory hierarchy. Directly from server.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_users_user_groups": {"docstring": "Stores all the users and user groups in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores all the users and user groups in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "workspace": {"kind": "module", "content_service": {"kind": "module", "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "DataSourceValidator": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["data_source_service: 'CatalogDataSourceService'", "CatalogDataSourceService"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "validate_data_source_ids": {"docstring": null, "signature": {"params": [["self", "None"], ["data_source_ids: 'set[str]'", "set[str]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "validate_ldm": {"docstring": null, "signature": {"params": [["self", "None"], ["model: 'CatalogDeclarativeModel'", "CatalogDeclarativeModel"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAnalytics": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["analytics: 'Optional[CatalogDeclarativeAnalyticsLayer]' = None", "Optional[CatalogDeclarativeAnalyticsLayer]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAnalytics]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogAttribute": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"], ["labels: 'list[CatalogLabel]'", "list[CatalogLabel]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}, "find_label": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}, "primary_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogFact": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogLabel": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["identifiers: 'List[CatalogEntityIdentifier]' = NOTHING", "List[CatalogEntityIdentifier]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesResponse": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["graph: 'CatalogDependentEntitiesGraph'", "CatalogDependentEntitiesGraph"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesResponse]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceContent": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["valid_obj_fun: 'functools.partial[dict[str, set[str]]]'", "functools.partial[dict[str, set[str]]]"], ["datasets: 'list[CatalogDataset]'", "list[CatalogDataset]"], ["metrics: 'list[CatalogMetric]'", "list[CatalogMetric]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_create_attr_labels": {"docstring": null, "signature": {"params": [["attr_id: 'str'", "str"], ["label_ids: 'dict[str, Any]'", "dict[str, Any]"], ["raw_labels: 'SideLoads'", "SideLoads"]], "return_annotation": "list[CatalogLabel]"}, "docstring_parsed": null, "kind": "function"}, "_valid_objects": {"docstring": null, "signature": {"params": [["self", "None"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "ValidObjects"}, "docstring_parsed": null, "kind": "function"}, "catalog_with_valid_objects": {"docstring": "Returns a new instance of catalog which contains only those datasets (attributes and facts) that are valid in\nthe provided context. The context is composed of one more more entities of the semantic model and\nthe filtered catalog will contain only those entities that can be safely added on top of that existing context.\n\n:param ctx: existing context. you can specify context in one of the following ways:\n\n - single item or list of items from the execution model\n - single item or list of items from catalog model; catalog fact, label or metric may be added\n - the entire execution definition that is used to compute analytics", "signature": {"params": [["self", "None"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "CatalogWorkspaceContent"}, "docstring_parsed": null, "kind": "function"}, "find_label_attribute": {"docstring": "Get attribute by label id.", "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogAttribute, None]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get attribute by label id.", "examples": "[]", "returns": null}, "kind": "function"}, "get_dataset": {"docstring": "Gets dataset by id. The id can be either an instance of ObjId or string containing serialized ``ObjId\n('dataset/some.dataset.id')`` or contain just the id part (``some.dataset.id``).\n\n:param dataset_id: fully qualified dataset entity id (type/id) or just the identifier of dataset entity\n\n:return: instance of CatalogDataset or None if no such dataset in catalog\n\n:rtype: CatalogDataset", "signature": {"params": [["self", "None"], ["dataset_id: 'Union[str, ObjId]'", "Union[str, ObjId]"]], "return_annotation": "Union[CatalogDataset, None]"}, "docstring_parsed": null, "kind": "function"}, "get_metric": {"docstring": "Gets metric by id. The id can be either an instance of ObjId or string containing serialized ObjId\n('metric/some.metric.id') or contain just the id part ('some.metric.id').\n\n:param metric_id: fully qualified metric entity id (type/id) or just the identifier of metric entity\n\n:return: instance of CatalogMetric or None if no such metric in catalog\n\n:rtype: CatalogMetric", "signature": {"params": [["self", "None"], ["metric_id: 'Union[str, ObjId]'", "Union[str, ObjId]"]], "return_annotation": "Union[CatalogMetric, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionDefinition": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attributes: 'Optional[list[Attribute]]'", "Optional[list[Attribute]]"], ["metrics: 'Optional[list[Metric]]'", "Optional[list[Metric]]"], ["filters: 'Optional[list[Filter]]'", "Optional[list[Filter]]"], ["dimensions: 'list[Optional[list[str]]]'", "list[Optional[list[str]]]"], ["totals: 'Optional[list[TotalDefinition]]' = None", "Optional[list[TotalDefinition]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_create_dimensions": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "list[models.Dimension]"}, "docstring_parsed": null, "kind": "function"}, "_create_result_spec": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.ResultSpec"}, "docstring_parsed": null, "kind": "function"}, "_create_totals": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[list[models.Total]]"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.AfmExecution"}, "docstring_parsed": null, "kind": "function"}, "has_attributes": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_filters": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_metrics": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_one_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_two_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceContentService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_prepare_afm_for_availability": {"docstring": null, "signature": {"params": [["items: 'list[ValidObjectTypes]'", "list[ValidObjectTypes]"]], "return_annotation": "afm_models.AFM"}, "docstring_parsed": null, "kind": "function"}, "compute_valid_objects": {"docstring": "Returns attributes, facts, and metrics which are valid to add to a context that already\ncontains some entities from the semantic model. The entities are typically used to compute analytics and\ncome from the execution definition. You may, however, specify the entities through different layers of\nconvenience.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    ctx (ValidObjectsInputType):\n        items already in context. you can specify context in one of the following ways:\n\nReturns:\n    ValidObjects:\n        type of available object is used as key in the dict,\n        the value is a set containing id's of available items", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "ValidObjects"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "ctx", "default": null, "is_optional": false, "type_name": "ValidObjectsInputType", "description": "items already in context. you can specify context in one of the following ways:"}], "long_description": "contains some entities from the semantic model. The entities are typically used to compute analytics and\ncome from the execution definition. You may, however, specify the entities through different layers of\nconvenience.", "short_description": "Returns attributes, facts, and metrics which are valid to add to a context that already", "examples": "[]", "returns": {"type_name": "ValidObjects", "description": "type of available object is used as key in the dict,\nthe value is a set containing id's of available items", "return_name": null}}, "kind": "function"}, "get_attributes_catalog": {"docstring": "Retrieve all attributes in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogAttribute]:\n        List of all attributes in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogAttribute]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all attributes in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogAttribute]", "description": "List of all attributes in a given workspace.", "return_name": null}}, "kind": "function"}, "get_declarative_analytics_model": {"docstring": "Retrieves declarative analytics model. The model is tied to the workspace and organization.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieves declarative analytics model. The model is tied to the workspace and organization.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "get_declarative_ldm": {"docstring": "Retrieve a logical model layout. On CatalogDeclarativeModel user can call\n``modify_mapped_data_source(data_source_mapping: dict)`` method,\nwhich substitutes data source id in datasets.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "``modify_mapped_data_source(data_source_mapping: dict)`` method,\nwhich substitutes data source id in datasets.", "short_description": "Retrieve a logical model layout. On CatalogDeclarativeModel user can call", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model.", "return_name": null}}, "kind": "function"}, "get_dependent_entities_graph": {"docstring": "There are dependencies among all catalog objects, the chain is the following:\n`fact/attribute/label \u2192 dataset \u2192 metric \u2192 visualization \u2192 dashboard`\nSome steps can be skipped, e.g. `fact \u2192 visualization`\nWe do not support `table \u2192 dataset` dependency yet.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDependentEntitiesResponse:\n        Dependent entities graph containing nodes and edges.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDependentEntitiesResponse"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "`fact/attribute/label \u2192 dataset \u2192 metric \u2192 visualization \u2192 dashboard`\nSome steps can be skipped, e.g. `fact \u2192 visualization`\nWe do not support `table \u2192 dataset` dependency yet.", "short_description": "There are dependencies among all catalog objects, the chain is the following:", "examples": "[]", "returns": {"type_name": "CatalogDependentEntitiesResponse", "description": "Dependent entities graph containing nodes and edges.", "return_name": null}}, "kind": "function"}, "get_dependent_entities_graph_from_entry_points": {"docstring": "Extends get_dependent_entities_graph with the entry point from which the graph is created.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    dependent_entities_request (CatalogDependentEntitiesRequest):\n        Entry points for the dependent entities graph\n\nReturns:\n    CatalogDependentEntitiesResponse:\n        Dependent entities graph containing nodes and edges.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["dependent_entities_request: 'CatalogDependentEntitiesRequest'", "CatalogDependentEntitiesRequest"]], "return_annotation": "CatalogDependentEntitiesResponse"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "dependent_entities_request", "default": null, "is_optional": false, "type_name": "CatalogDependentEntitiesRequest", "description": "Entry points for the dependent entities graph"}], "long_description": null, "short_description": "Extends get_dependent_entities_graph with the entry point from which the graph is created.", "examples": "[]", "returns": {"type_name": "CatalogDependentEntitiesResponse", "description": "Dependent entities graph containing nodes and edges.", "return_name": null}}, "kind": "function"}, "get_facts_catalog": {"docstring": "Retrieve all facts in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogFact]:\n        List of all facts in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogFact]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all facts in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogFact]", "description": "List of all facts in a given workspace.", "return_name": null}}, "kind": "function"}, "get_full_catalog": {"docstring": "Retrieves catalog for a workspace. Catalog contains all data sets and metrics defined in that workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogWorkspaceContent:\n        Object containing all data sets and metrics.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogWorkspaceContent"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieves catalog for a workspace. Catalog contains all data sets and metrics defined in that workspace.", "examples": "[]", "returns": {"type_name": "CatalogWorkspaceContent", "description": "Object containing all data sets and metrics.", "return_name": null}}, "kind": "function"}, "get_labels_catalog": {"docstring": "Retrieve all labels in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogLabel]:\n        List of all labels in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogLabel]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all labels in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogLabel]", "description": "List of all labels in a given workspace.", "return_name": null}}, "kind": "function"}, "get_metrics_catalog": {"docstring": "Retrieve all Metrics in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogMetric]:\n        List of all metrics in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogMetric]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all Metrics in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogMetric]", "description": "List of all metrics in a given workspace.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "layout_workspace_folder": {"docstring": "Ties the LDM or Analytics Model to the Organization and workspaces in the store methods.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    Path:\n        Path to the root of the layout directory for store methods.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": false, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Ties the LDM or Analytics Model to the Organization and workspaces in the store methods.", "examples": "[]", "returns": {"type_name": "Path", "description": "Path to the root of the layout directory for store methods.", "return_name": null}}, "kind": "function"}, "load_analytics_model_from_disk": {"docstring": "Loads the analytics model, which was stored using store_analytics_model_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the analytics model, which was stored using store_analytics_model_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_analytics_model": {"docstring": "This method combines load_declarative_analytics_model and put_analytics_model methods\nto load and set layouts stored using store_declarative_analytics_model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "to load and set layouts stored using store_declarative_analytics_model.", "short_description": "This method combines load_declarative_analytics_model and put_analytics_model methods", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_ldm": {"docstring": "This method combines load_declarative_ldm and put_declarative_ldm\nmethods to load and set layouts stored using store_declarative_ldm.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n    validator (Optional[DataSourceValidator], optional):\n        Object that manages validation, whether each data_source_id in LDM corresponds\n        to existing data source. Defaults to None.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"], ["validator: 'Optional[DataSourceValidator]' = None", "Optional[DataSourceValidator]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}, {"arg_name": "validator", "default": null, "is_optional": true, "type_name": "Optional[DataSourceValidator]", "description": "Object that manages validation, whether each data_source_id in LDM corresponds\nto existing data source. Defaults to None."}], "long_description": "methods to load and set layouts stored using store_declarative_ldm.", "short_description": "This method combines load_declarative_ldm and put_declarative_ldm", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_analytics_model": {"docstring": "Loads the declarative analytics model, which was stored using store_declarative_analytics_model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the declarative analytics model, which was stored using store_declarative_analytics_model.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "load_declarative_ldm": {"docstring": "Load declarative Logical Data Model, which was stored using store_declarative_workspaces\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative Logical Data Model, which was stored using store_declarative_workspaces", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model", "return_name": null}}, "kind": "function"}, "load_ldm_from_disk": {"docstring": "Loads the Logical Data Model, which was stored using store_ldm_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model.", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the Logical Data Model, which was stored using store_ldm_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model.", "return_name": null}}, "kind": "function"}, "put_declarative_analytics_model": {"docstring": "Sets the declarative analytics model for a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    analytics_model (CatalogDeclarativeAnalytics):\n        Object Containing declarative Analytical Model\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["analytics_model: 'CatalogDeclarativeAnalytics'", "CatalogDeclarativeAnalytics"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "analytics_model", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model"}], "long_description": null, "short_description": "Sets the declarative analytics model for a given workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_ldm": {"docstring": "Set declarative logical data model for a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    ldm (CatalogDeclarativeModel):\n        Object Containing declarative Logical Data Model\n    validator (Optional[DataSourceValidator], optional):\n        Object that manages validation, whether each data_source_id in LDM corresponds\n        to existing data source. Defaults to None.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["ldm: 'CatalogDeclarativeModel'", "CatalogDeclarativeModel"], ["validator: 'Optional[DataSourceValidator]' = None", "Optional[DataSourceValidator]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "ldm", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model"}, {"arg_name": "validator", "default": null, "is_optional": true, "type_name": "Optional[DataSourceValidator]", "description": "Object that manages validation, whether each data_source_id in LDM corresponds\nto existing data source. Defaults to None."}], "long_description": null, "short_description": "Set declarative logical data model for a given workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_analytics_model_to_disk": {"docstring": "Store analytics model for a given workspace in directory hierarchy.This method does not tie the declarative\n    analytics model to the workspace and organization, thus it is recommended for migration between workspaces.\n    If you want to migrate analytics model between workspaces, use store_analytics_model_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "analytics model to the workspace and organization, thus it is recommended for migration between workspaces.\n    If you want to migrate analytics model between workspaces, use store_analytics_model_to_disk.", "short_description": "Store analytics model for a given workspace in directory hierarchy.This method does not tie the declarative", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_analytics_model": {"docstring": "Store declarative analytics model for a given workspace in directory hierarchy.\n    This method ties the declarative analytics model to the workspace and organization, thus it is\n    recommended for backups. If you want to move declarative analytics model between workspaces or\n    organizations, use store_analytics_model_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method ties the declarative analytics model to the workspace and organization, thus it is\n    recommended for backups. If you want to move declarative analytics model between workspaces or\n    organizations, use store_analytics_model_to_disk.", "short_description": "Store declarative analytics model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_ldm": {"docstring": "Store declarative logical data model for a given workspace in directory hierarchy.\n    This method ties the LDM to the workspace and organization, thus it is recommended\n    for backups. If you want to move LDM between workspaces or organizations, use store_ldm_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method ties the LDM to the workspace and organization, thus it is recommended\n    for backups. If you want to move LDM between workspaces or organizations, use store_ldm_to_disk.", "short_description": "Store declarative logical data model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_ldm_to_disk": {"docstring": "Store declarative logical data model for a given workspace in directory hierarchy.\n    This method does not tie the LDM to the workspace and organization, thus it is recommended\n    for migration between organizations. If you want to backup LDM use store_declarative_ldm.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method does not tie the LDM to the workspace and organization, thus it is recommended\n    for migration between organizations. If you want to backup LDM use store_declarative_ldm.", "short_description": "Store declarative logical data model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "declarative_model": {"kind": "module", "workspace": {"kind": "module", "analytics_model": {"kind": "module", "analytics_model": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAnalytics": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["analytics: 'Optional[CatalogDeclarativeAnalyticsLayer]' = None", "Optional[CatalogDeclarativeAnalyticsLayer]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalytics.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAnalytics]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAnalyticsLayer": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["analytical_dashboards: 'List[CatalogDeclarativeAnalyticalDashboard]' = NOTHING", "List[CatalogDeclarativeAnalyticalDashboard]"], ["dashboard_plugins: 'List[CatalogDeclarativeDashboardPlugin]' = NOTHING", "List[CatalogDeclarativeDashboardPlugin]"], ["filter_contexts: 'List[CatalogDeclarativeFilterContext]' = NOTHING", "List[CatalogDeclarativeFilterContext]"], ["metrics: 'List[CatalogDeclarativeMetric]' = NOTHING", "List[CatalogDeclarativeMetric]"], ["visualization_objects: 'List[CatalogDeclarativeVisualizationObject]' = NOTHING", "List[CatalogDeclarativeVisualizationObject]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAnalyticsLayer]"}, "docstring_parsed": null, "kind": "function"}, "get_analytical_dashboards_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_analytics_model_folder": {"docstring": null, "signature": {"params": [["workspace_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_dashboard_plugins_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_filter_contexts_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_metrics_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_visualization_objects_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogAnalyticsBase": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogAnalyticsBase.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogAnalyticsBase.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAnalyticalDashboard": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticalDashboard.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAnalyticalDashboard]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDashboardPlugin": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDashboardPlugin.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDashboardPlugin]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeFilterContext": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFilterContext.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeFilterContext]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeMetric": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeMetric.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeMetric.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeMetric]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeVisualizationObject": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeVisualizationObject.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeVisualizationObject]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["analytics_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "logical_model": {"kind": "module", "dataset": {"kind": "module", "dataset": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogGrainIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogGrainIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGrainIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[GrainIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogLabelIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogLabelIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogLabelIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[LabelIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogReferenceIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogReferenceIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogReferenceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[ReferenceIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataset": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["grain: 'List[CatalogGrainIdentifier]'", "List[CatalogGrainIdentifier]"], ["references: 'List[CatalogDeclarativeReference]'", "List[CatalogDeclarativeReference]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["attributes: 'Optional[List[CatalogDeclarativeAttribute]]' = None", "Optional[List[CatalogDeclarativeAttribute]]"], ["facts: 'Optional[List[CatalogDeclarativeFact]]' = None", "Optional[List[CatalogDeclarativeFact]]"], ["data_source_table_id: 'Optional[CatalogDataSourceTableIdentifier]' = None", "Optional[CatalogDataSourceTableIdentifier]"], ["sql: 'Optional[CatalogDeclarativeDatasetSql]' = None", "Optional[CatalogDeclarativeDatasetSql]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["workspace_data_filter_columns: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataset]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["datasets_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAttribute": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["source_column: 'str'", "str"], ["labels: 'List[CatalogDeclarativeLabel]'", "List[CatalogDeclarativeLabel]"], ["source_column_data_type: 'Optional[str]' = None", "Optional[str]"], ["default_view: 'Optional[CatalogLabelIdentifier]' = None", "Optional[CatalogLabelIdentifier]"], ["sort_column: 'Optional[str]' = None", "Optional[str]"], ["sort_direction: 'Optional[str]' = None", "Optional[str]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAttribute.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAttribute.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAttribute]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeFact": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["source_column: 'str'", "str"], ["source_column_data_type: 'Optional[str]' = None", "Optional[str]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeFact.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeFact.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeFact]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataSourceTableIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDataSourceTableIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DataSourceTableIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDatasetSql": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["statement: 'str'", "str"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDatasetSql.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDatasetSql]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeLabel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["source_column: 'str'", "str"], ["source_column_data_type: 'Optional[str]' = None", "Optional[str]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["value_type: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLabel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLabel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeLabel]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeReference": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["identifier: 'CatalogReferenceIdentifier'", "CatalogReferenceIdentifier"], ["multivalue: 'bool'", "bool"], ["source_columns: 'List[str]'", "List[str]"], ["source_column_data_types: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeReference.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeReference.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeReference]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "date_dataset": {"kind": "module", "date_dataset": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDateDataset": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["granularities_formatting: 'CatalogGranularitiesFormatting'", "CatalogGranularitiesFormatting"], ["granularities: 'List[str]'", "List[str]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDateDataset]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["date_instances_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogGranularitiesFormatting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["title_base: 'str'", "str"], ["title_pattern: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogGranularitiesFormatting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogGranularitiesFormatting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[GranularitiesFormatting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "ldm": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDataset": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["grain: 'List[CatalogGrainIdentifier]'", "List[CatalogGrainIdentifier]"], ["references: 'List[CatalogDeclarativeReference]'", "List[CatalogDeclarativeReference]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["attributes: 'Optional[List[CatalogDeclarativeAttribute]]' = None", "Optional[List[CatalogDeclarativeAttribute]]"], ["facts: 'Optional[List[CatalogDeclarativeFact]]' = None", "Optional[List[CatalogDeclarativeFact]]"], ["data_source_table_id: 'Optional[CatalogDataSourceTableIdentifier]' = None", "Optional[CatalogDataSourceTableIdentifier]"], ["sql: 'Optional[CatalogDeclarativeDatasetSql]' = None", "Optional[CatalogDeclarativeDatasetSql]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"], ["workspace_data_filter_columns: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDataset.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDataset]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["datasets_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeDateDataset": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["granularities_formatting: 'CatalogGranularitiesFormatting'", "CatalogGranularitiesFormatting"], ["granularities: 'List[str]'", "List[str]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["tags: 'Optional[List[str]]' = None", "Optional[List[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeDateDataset.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeDateDataset]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["date_instances_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeLdm": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["datasets: 'List[CatalogDeclarativeDataset]' = NOTHING", "List[CatalogDeclarativeDataset]"], ["date_instances: 'List[CatalogDeclarativeDateDataset]' = NOTHING", "List[CatalogDeclarativeDateDataset]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "_change_case": {"docstring": null, "signature": {"params": [["object_name: 'str'", "str"], ["upper_case: 'bool'", "bool"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "change_tables_columns_case": {"docstring": "Change case (to lower/upper-case) of all physical objects mapped in the LDM.\nNamely mapped table names and column names.\nDefault is to change everything to upper-case.\nThis is handy if you migrate e.g. from PostgreSQL to Snowflake,\nwhich is the only DB having upper-case as default.\nInstead of enclosing all (lower-cased) object names in all DDLs during the migration,\nyou can use this function to change the case in GoodData LDM.\nIf you specify upper-case=False, the function changes the case to lower-case\n(e.g. migration from Snowflake back to PostgreSQL).\n\nExamples can be found in the DOC of modify_mapped_data_source() method.\n\nArgs:\n    upper_case (bool):\n        If True, all tables/columns names are changes to upper-case, otherwise to lower-case.\n        If None, noop.\n          - helps to chaining approach,\n            devs do not have to implement IFs if one of inputs in the chaining is optional.\n\nReturns:\n    self", "signature": {"params": [["self", "None"], ["upper_case: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "CatalogDeclarativeLdm"}, "docstring_parsed": {"params": [{"arg_name": "upper_case", "default": null, "is_optional": false, "type_name": "bool", "description": "If True, all tables/columns names are changes to upper-case, otherwise to lower-case.\nIf None, noop.\n  - helps to chaining approach,\n    devs do not have to implement IFs if one of inputs in the chaining is optional."}], "long_description": "Namely mapped table names and column names.\nDefault is to change everything to upper-case.\nThis is handy if you migrate e.g. from PostgreSQL to Snowflake,\nwhich is the only DB having upper-case as default.\nInstead of enclosing all (lower-cased) object names in all DDLs during the migration,\nyou can use this function to change the case in GoodData LDM.\nIf you specify upper-case=False, the function changes the case to lower-case\n(e.g. migration from Snowflake back to PostgreSQL).\n\nExamples can be found in the DOC of modify_mapped_data_source() method.", "short_description": "Change case (to lower/upper-case) of all physical objects mapped in the LDM.", "examples": "[]", "returns": {"type_name": null, "description": "self", "return_name": null}}, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeLdm]"}, "docstring_parsed": null, "kind": "function"}, "get_datasets_folder": {"docstring": null, "signature": {"params": [["ldm_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_date_instances_folder": {"docstring": null, "signature": {"params": [["ldm_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_ldm_folder": {"docstring": null, "signature": {"params": [["workspace_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "modify_mapped_data_source": {"docstring": "LDM contains data source ID - is mapped to this data source.\nYou may decide to migrate to different data source containing the same physical data model\n(e.g. change the DB engine, but keep the model).\nThis function helps you to replace any set of data source IDs with new set of IDs\n(ready for multiple DS per workspace).\n\nExample:\n```\ndata_source_mapping = {\"postgresql\": \"snowflake\"}\nldm = sdk.catalog_workspace_content.get_declarative_ldm(workspace_id)\nldm.modify_mapped_data_source(data_source_mapping)\n# When migrating to Snowflake, we need to change the case of table/column names as well\nldm.change_tables_columns_case(upper_case=True)\nsdk.catalog_workspace_content.put_declarative_ldm(workspace_id, ldm)\n\n# Chaining approach is also possible:\n```\nsdk.catalog_workspace_content.put_declarative_ldm(\n    workspace_id,\n    sdk.catalog_workspace_content.get_declarative_ldm(workspace_id)\\\n        .modify_mapped_data_source(data_source_mapping)\\\n        .change_tables_columns_case(upper_case=True)\n)\n\nArgs:\n    data_source_mapping (dict):\n        Key value pairs representing which DS(key) should be replaced by which DS(value).\n        If mapping is empty, noop\n          - helps to chaining approach,\n            devs do not have to implement IFs if one of inputs in the chaining is optional.\n\nReturns:\n    self", "signature": {"params": [["self", "None"], ["data_source_mapping: 'Optional[dict]'", "Optional[dict]"]], "return_annotation": "CatalogDeclarativeLdm"}, "docstring_parsed": {"params": [{"arg_name": "data_source_mapping", "default": null, "is_optional": false, "type_name": "dict", "description": "Key value pairs representing which DS(key) should be replaced by which DS(value).\nIf mapping is empty, noop\n  - helps to chaining approach,\n    devs do not have to implement IFs if one of inputs in the chaining is optional."}], "long_description": "You may decide to migrate to different data source containing the same physical data model\n(e.g. change the DB engine, but keep the model).\nThis function helps you to replace any set of data source IDs with new set of IDs\n(ready for multiple DS per workspace).", "short_description": "LDM contains data source ID - is mapped to this data source.", "examples": "[<docstring_parser.common.DocstringExample object at 0x7fcbd677c8d0>]", "returns": {"type_name": null, "description": "self", "return_name": null}}, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "workspace": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogWorkspaceIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[WorkspaceIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeSingleWorkspacePermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSingleWorkspacePermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeSingleWorkspacePermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceHierarchyPermission": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["name: 'str'", "str"], ["assignee: 'CatalogAssigneeIdentifier'", "CatalogAssigneeIdentifier"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceHierarchyPermission.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceHierarchyPermission]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeCustomApplicationSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["content: 'Dict[str, Any]'", "Dict[str, Any]"], ["application_name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeCustomApplicationSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeCustomApplicationSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["content: 'Optional[Dict[str, Any]]' = None", "Optional[Dict[str, Any]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeAnalyticsLayer": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["analytical_dashboards: 'List[CatalogDeclarativeAnalyticalDashboard]' = NOTHING", "List[CatalogDeclarativeAnalyticalDashboard]"], ["dashboard_plugins: 'List[CatalogDeclarativeDashboardPlugin]' = NOTHING", "List[CatalogDeclarativeDashboardPlugin]"], ["filter_contexts: 'List[CatalogDeclarativeFilterContext]' = NOTHING", "List[CatalogDeclarativeFilterContext]"], ["metrics: 'List[CatalogDeclarativeMetric]' = NOTHING", "List[CatalogDeclarativeMetric]"], ["visualization_objects: 'List[CatalogDeclarativeVisualizationObject]' = NOTHING", "List[CatalogDeclarativeVisualizationObject]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeAnalyticsLayer.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeAnalyticsLayer]"}, "docstring_parsed": null, "kind": "function"}, "get_analytical_dashboards_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_analytics_model_folder": {"docstring": null, "signature": {"params": [["workspace_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_dashboard_plugins_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_filter_contexts_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_metrics_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_visualization_objects_folder": {"docstring": null, "signature": {"params": [["analytics_model_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeLdm": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["datasets: 'List[CatalogDeclarativeDataset]' = NOTHING", "List[CatalogDeclarativeDataset]"], ["date_instances: 'List[CatalogDeclarativeDateDataset]' = NOTHING", "List[CatalogDeclarativeDateDataset]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeLdm.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeLdm.", "examples": "[]", "returns": null}, "kind": "function"}, "_change_case": {"docstring": null, "signature": {"params": [["object_name: 'str'", "str"], ["upper_case: 'bool'", "bool"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "change_tables_columns_case": {"docstring": "Change case (to lower/upper-case) of all physical objects mapped in the LDM.\nNamely mapped table names and column names.\nDefault is to change everything to upper-case.\nThis is handy if you migrate e.g. from PostgreSQL to Snowflake,\nwhich is the only DB having upper-case as default.\nInstead of enclosing all (lower-cased) object names in all DDLs during the migration,\nyou can use this function to change the case in GoodData LDM.\nIf you specify upper-case=False, the function changes the case to lower-case\n(e.g. migration from Snowflake back to PostgreSQL).\n\nExamples can be found in the DOC of modify_mapped_data_source() method.\n\nArgs:\n    upper_case (bool):\n        If True, all tables/columns names are changes to upper-case, otherwise to lower-case.\n        If None, noop.\n          - helps to chaining approach,\n            devs do not have to implement IFs if one of inputs in the chaining is optional.\n\nReturns:\n    self", "signature": {"params": [["self", "None"], ["upper_case: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "CatalogDeclarativeLdm"}, "docstring_parsed": {"params": [{"arg_name": "upper_case", "default": null, "is_optional": false, "type_name": "bool", "description": "If True, all tables/columns names are changes to upper-case, otherwise to lower-case.\nIf None, noop.\n  - helps to chaining approach,\n    devs do not have to implement IFs if one of inputs in the chaining is optional."}], "long_description": "Namely mapped table names and column names.\nDefault is to change everything to upper-case.\nThis is handy if you migrate e.g. from PostgreSQL to Snowflake,\nwhich is the only DB having upper-case as default.\nInstead of enclosing all (lower-cased) object names in all DDLs during the migration,\nyou can use this function to change the case in GoodData LDM.\nIf you specify upper-case=False, the function changes the case to lower-case\n(e.g. migration from Snowflake back to PostgreSQL).\n\nExamples can be found in the DOC of modify_mapped_data_source() method.", "short_description": "Change case (to lower/upper-case) of all physical objects mapped in the LDM.", "examples": "[]", "returns": {"type_name": null, "description": "self", "return_name": null}}, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeLdm]"}, "docstring_parsed": null, "kind": "function"}, "get_datasets_folder": {"docstring": null, "signature": {"params": [["ldm_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_date_instances_folder": {"docstring": null, "signature": {"params": [["ldm_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "get_ldm_folder": {"docstring": null, "signature": {"params": [["workspace_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "modify_mapped_data_source": {"docstring": "LDM contains data source ID - is mapped to this data source.\nYou may decide to migrate to different data source containing the same physical data model\n(e.g. change the DB engine, but keep the model).\nThis function helps you to replace any set of data source IDs with new set of IDs\n(ready for multiple DS per workspace).\n\nExample:\n```\ndata_source_mapping = {\"postgresql\": \"snowflake\"}\nldm = sdk.catalog_workspace_content.get_declarative_ldm(workspace_id)\nldm.modify_mapped_data_source(data_source_mapping)\n# When migrating to Snowflake, we need to change the case of table/column names as well\nldm.change_tables_columns_case(upper_case=True)\nsdk.catalog_workspace_content.put_declarative_ldm(workspace_id, ldm)\n\n# Chaining approach is also possible:\n```\nsdk.catalog_workspace_content.put_declarative_ldm(\n    workspace_id,\n    sdk.catalog_workspace_content.get_declarative_ldm(workspace_id)\\\n        .modify_mapped_data_source(data_source_mapping)\\\n        .change_tables_columns_case(upper_case=True)\n)\n\nArgs:\n    data_source_mapping (dict):\n        Key value pairs representing which DS(key) should be replaced by which DS(value).\n        If mapping is empty, noop\n          - helps to chaining approach,\n            devs do not have to implement IFs if one of inputs in the chaining is optional.\n\nReturns:\n    self", "signature": {"params": [["self", "None"], ["data_source_mapping: 'Optional[dict]'", "Optional[dict]"]], "return_annotation": "CatalogDeclarativeLdm"}, "docstring_parsed": {"params": [{"arg_name": "data_source_mapping", "default": null, "is_optional": false, "type_name": "dict", "description": "Key value pairs representing which DS(key) should be replaced by which DS(value).\nIf mapping is empty, noop\n  - helps to chaining approach,\n    devs do not have to implement IFs if one of inputs in the chaining is optional."}], "long_description": "You may decide to migrate to different data source containing the same physical data model\n(e.g. change the DB engine, but keep the model).\nThis function helps you to replace any set of data source IDs with new set of IDs\n(ready for multiple DS per workspace).", "short_description": "LDM contains data source ID - is mapped to this data source.", "examples": "[<docstring_parser.common.DocstringExample object at 0x7fcbd6799450>]", "returns": {"type_name": null, "description": "self", "return_name": null}}, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"], ["analytics: 'Optional[CatalogDeclarativeAnalyticsLayer]' = None", "Optional[CatalogDeclarativeAnalyticsLayer]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspace": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"], ["model: 'Optional[CatalogDeclarativeWorkspaceModel]' = None", "Optional[CatalogDeclarativeWorkspaceModel]"], ["parent: 'Optional[CatalogWorkspaceIdentifier]' = None", "Optional[CatalogWorkspaceIdentifier]"], ["permissions: 'List[CatalogDeclarativeSingleWorkspacePermission]' = NOTHING", "List[CatalogDeclarativeSingleWorkspacePermission]"], ["hierarchy_permissions: 'List[CatalogDeclarativeWorkspaceHierarchyPermission]' = NOTHING", "List[CatalogDeclarativeWorkspaceHierarchyPermission]"], ["early_access: 'Optional[str]' = None", "Optional[str]"], ["settings: 'List[CatalogDeclarativeSetting]' = NOTHING", "List[CatalogDeclarativeSetting]"], ["custom_application_settings: 'List[CatalogDeclarativeCustomApplicationSetting]' = NOTHING", "List[CatalogDeclarativeCustomApplicationSetting]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspace.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspace]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspaces_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"], ["include_nested_structures: 'bool' = True", "bool"]], "return_annotation": "DeclarativeWorkspace"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceDataFilterSetting": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["filter_values: 'List[str]'", "List[str]"], ["workspace: 'CatalogWorkspaceIdentifier'", "CatalogWorkspaceIdentifier"], ["description: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilterSetting.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceDataFilterSetting]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceDataFilters": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["workspace_data_filters: 'List[CatalogDeclarativeWorkspaceDataFilter]'", "List[CatalogDeclarativeWorkspaceDataFilter]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceDataFilters]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceDataFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["title: 'str'", "str"], ["column_name: 'str'", "str"], ["workspace_data_filter_settings: 'List[CatalogDeclarativeWorkspaceDataFilterSetting]'", "List[CatalogDeclarativeWorkspaceDataFilterSetting]"], ["description: 'Optional[str]' = None", "Optional[str]"], ["workspace: 'Optional[CatalogWorkspaceIdentifier]' = None", "Optional[CatalogWorkspaceIdentifier]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilter.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceDataFilter]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspaces_data_filters_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaces": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["workspaces: 'List[CatalogDeclarativeWorkspace]'", "List[CatalogDeclarativeWorkspace]"], ["workspace_data_filters: 'List[CatalogDeclarativeWorkspaceDataFilter]'", "List[CatalogDeclarativeWorkspaceDataFilter]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaces]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "workspace_data_filters_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "workspaces_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}}, "entity_model": {"kind": "module", "content_objects": {"kind": "module", "dataset": {"kind": "module", "CatalogEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SimpleMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["item: 'ObjId'", "ObjId"], ["aggregation: 'Optional[str]' = None", "Optional[str]"], ["compute_ratio: 'bool' = False", "bool"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.SimpleMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogAttribute": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"], ["labels: 'list[CatalogLabel]'", "list[CatalogLabel]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}, "find_label": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}, "primary_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogLabel": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogFact": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataset": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"], ["attributes: 'list[CatalogAttribute]'", "list[CatalogAttribute]"], ["facts: 'list[CatalogFact]'", "list[CatalogFact]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "filter_dataset": {"docstring": "Filters dataset so that it contains only attributes and facts that are part of the provided valid objects\nstructure.\n\n:param valid_objects: mapping of object type to a set of valid object ids\n:return: CatalogDataset containing only valid attributes and facts; None if all of the attributes and facts\n         were filtered out", "signature": {"params": [["self", "None"], ["valid_objects: 'ValidObjects'", "ValidObjects"]], "return_annotation": "Union[CatalogDataset, None]"}, "docstring_parsed": null, "kind": "function"}, "find_label_attribute": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogAttribute, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "metric": {"kind": "module", "CatalogEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SimpleMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["item: 'ObjId'", "ObjId"], ["aggregation: 'Optional[str]' = None", "Optional[str]"], ["compute_ratio: 'bool' = False", "bool"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.SimpleMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "graph_objects": {"kind": "module", "graph": {"kind": "module", "Base": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class Base.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class Base.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesRequest": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["identifiers: 'List[CatalogEntityIdentifier]' = NOTHING", "List[CatalogEntityIdentifier]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesRequest.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesRequest]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesResponse": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["graph: 'CatalogDependentEntitiesGraph'", "CatalogDependentEntitiesGraph"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesResponse.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesResponse]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesGraph": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["nodes: 'List[CatalogDependentEntitiesNode]' = NOTHING", "List[CatalogDependentEntitiesNode]"], ["edges: 'List[List[CatalogEntityIdentifier]]' = NOTHING", "List[List[CatalogEntityIdentifier]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesGraph.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesGraph]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDependentEntitiesNode": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"], ["title: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDependentEntitiesNode.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDependentEntitiesNode.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DependentEntitiesNode]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogEntityIdentifier": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogEntityIdentifier.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogEntityIdentifier.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[EntityIdentifier]"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "workspace": {"kind": "module", "CatalogNameEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspace": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["name: 'str'", "str"], ["parent_id: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "JsonApiWorkspaceInDocument"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "model_container": {"kind": "module", "CatalogAttribute": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"], ["labels: 'list[CatalogLabel]'", "list[CatalogLabel]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}, "find_label": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}, "primary_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Union[CatalogLabel, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDataset": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"], ["attributes: 'list[CatalogAttribute]'", "list[CatalogAttribute]"], ["facts: 'list[CatalogFact]'", "list[CatalogFact]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "filter_dataset": {"docstring": "Filters dataset so that it contains only attributes and facts that are part of the provided valid objects\nstructure.\n\n:param valid_objects: mapping of object type to a set of valid object ids\n:return: CatalogDataset containing only valid attributes and facts; None if all of the attributes and facts\n         were filtered out", "signature": {"params": [["self", "None"], ["valid_objects: 'ValidObjects'", "ValidObjects"]], "return_annotation": "Union[CatalogDataset, None]"}, "docstring_parsed": null, "kind": "function"}, "find_label_attribute": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogAttribute, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogFact": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogLabel": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["entity: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionDefinition": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attributes: 'Optional[list[Attribute]]'", "Optional[list[Attribute]]"], ["metrics: 'Optional[list[Metric]]'", "Optional[list[Metric]]"], ["filters: 'Optional[list[Filter]]'", "Optional[list[Filter]]"], ["dimensions: 'list[Optional[list[str]]]'", "list[Optional[list[str]]]"], ["totals: 'Optional[list[TotalDefinition]]' = None", "Optional[list[TotalDefinition]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_create_dimensions": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "list[models.Dimension]"}, "docstring_parsed": null, "kind": "function"}, "_create_result_spec": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.ResultSpec"}, "docstring_parsed": null, "kind": "function"}, "_create_totals": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[list[models.Total]]"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.AfmExecution"}, "docstring_parsed": null, "kind": "function"}, "has_attributes": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_filters": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_metrics": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_one_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_two_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AllPagedEntities": {"docstring": "AllPagedEntities(data, included)", "functions": {"__getnewargs__": {"docstring": "Return self as a plain tuple.  Used by copy and pickle.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self as a plain tuple.  Used by copy and pickle.", "examples": "[]", "returns": null}, "kind": "function"}, "__new__": {"docstring": "Create new instance of AllPagedEntities(data, included)", "signature": {"params": [["_cls", "None"], ["data: ForwardRef('list[Any]')", "ForwardRef('list[Any]')"], ["included: ForwardRef('list[Any]')", "ForwardRef('list[Any]')"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Create new instance of AllPagedEntities(data, included)", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return a nicely formatted representation string", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a nicely formatted representation string", "examples": "[]", "returns": null}, "kind": "function"}, "_asdict": {"docstring": "Return a new dict which maps field names to their values.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a new dict which maps field names to their values.", "examples": "[]", "returns": null}, "kind": "function"}, "_replace": {"docstring": "Return a new AllPagedEntities object replacing specified fields with new values", "signature": {"params": [["self", "None"], ["**kwds", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a new AllPagedEntities object replacing specified fields with new values", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "AllPagedEntities(data, included)", "examples": "[]", "returns": null}, "kind": "class"}, "SideLoads": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["objs: 'list[Any]'", "list[Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__len__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "all_for_type": {"docstring": null, "signature": {"params": [["self", "None"], ["obj_type: 'str'", "str"]], "return_annotation": "list[Any]"}, "docstring_parsed": null, "kind": "function"}, "find": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[Any, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceContent": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["valid_obj_fun: 'functools.partial[dict[str, set[str]]]'", "functools.partial[dict[str, set[str]]]"], ["datasets: 'list[CatalogDataset]'", "list[CatalogDataset]"], ["metrics: 'list[CatalogMetric]'", "list[CatalogMetric]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_create_attr_labels": {"docstring": null, "signature": {"params": [["attr_id: 'str'", "str"], ["label_ids: 'dict[str, Any]'", "dict[str, Any]"], ["raw_labels: 'SideLoads'", "SideLoads"]], "return_annotation": "list[CatalogLabel]"}, "docstring_parsed": null, "kind": "function"}, "_valid_objects": {"docstring": null, "signature": {"params": [["self", "None"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "ValidObjects"}, "docstring_parsed": null, "kind": "function"}, "catalog_with_valid_objects": {"docstring": "Returns a new instance of catalog which contains only those datasets (attributes and facts) that are valid in\nthe provided context. The context is composed of one more more entities of the semantic model and\nthe filtered catalog will contain only those entities that can be safely added on top of that existing context.\n\n:param ctx: existing context. you can specify context in one of the following ways:\n\n - single item or list of items from the execution model\n - single item or list of items from catalog model; catalog fact, label or metric may be added\n - the entire execution definition that is used to compute analytics", "signature": {"params": [["self", "None"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "CatalogWorkspaceContent"}, "docstring_parsed": null, "kind": "function"}, "find_label_attribute": {"docstring": "Get attribute by label id.", "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[CatalogAttribute, None]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get attribute by label id.", "examples": "[]", "returns": null}, "kind": "function"}, "get_dataset": {"docstring": "Gets dataset by id. The id can be either an instance of ObjId or string containing serialized ``ObjId\n('dataset/some.dataset.id')`` or contain just the id part (``some.dataset.id``).\n\n:param dataset_id: fully qualified dataset entity id (type/id) or just the identifier of dataset entity\n\n:return: instance of CatalogDataset or None if no such dataset in catalog\n\n:rtype: CatalogDataset", "signature": {"params": [["self", "None"], ["dataset_id: 'Union[str, ObjId]'", "Union[str, ObjId]"]], "return_annotation": "Union[CatalogDataset, None]"}, "docstring_parsed": null, "kind": "function"}, "get_metric": {"docstring": "Gets metric by id. The id can be either an instance of ObjId or string containing serialized ObjId\n('metric/some.metric.id') or contain just the id part ('some.metric.id').\n\n:param metric_id: fully qualified metric entity id (type/id) or just the identifier of metric entity\n\n:return: instance of CatalogMetric or None if no such metric in catalog\n\n:rtype: CatalogMetric", "signature": {"params": [["self", "None"], ["metric_id: 'Union[str, ObjId]'", "Union[str, ObjId]"]], "return_annotation": "Union[CatalogMetric, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "service": {"kind": "module", "CatalogServiceBase": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogPermissionService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: gooddata_sdk.client.GoodDataApiClient", "<class 'gooddata_sdk.client.GoodDataApiClient'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_declarative_permissions": {"docstring": "Retrieve current set of permissions of the workspace in a declarative form.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeWorkspacePermissions:\n        Object containing workspace permissions.", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"]], "return_annotation": "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve current set of permissions of the workspace in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace permissions.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "put_declarative_permissions": {"docstring": "Set effective permissions for the workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n    declarative_workspace_permissions (CatalogDeclarativeWorkspacePermissions):\n        Object containing workspace Permissions.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"], ["declarative_workspace_permissions: gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions", "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}, {"arg_name": "declarative_workspace_permissions", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace Permissions."}], "long_description": null, "short_description": "Set effective permissions for the workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceDataFilters": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["workspace_data_filters: 'List[CatalogDeclarativeWorkspaceDataFilter]'", "List[CatalogDeclarativeWorkspaceDataFilter]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceDataFilters.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceDataFilters]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaceModel": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["ldm: 'Optional[CatalogDeclarativeLdm]' = None", "Optional[CatalogDeclarativeLdm]"], ["analytics: 'Optional[CatalogDeclarativeAnalyticsLayer]' = None", "Optional[CatalogDeclarativeAnalyticsLayer]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaceModel.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaceModel]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogDeclarativeWorkspaces": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__ge__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__gt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["workspaces: 'List[CatalogDeclarativeWorkspace]'", "List[CatalogDeclarativeWorkspace]"], ["workspace_data_filters: 'List[CatalogDeclarativeWorkspaceDataFilter]'", "List[CatalogDeclarativeWorkspaceDataFilter]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__le__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__lt__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class CatalogDeclarativeWorkspaces.", "examples": "[]", "returns": null}, "kind": "function"}, "_get_snake_dict": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "_is_attribute_private": {"docstring": null, "signature": {"params": [["attribute: 'attr.Attribute'", "attr.Attribute"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "client_class": {"docstring": null, "signature": {"params": [], "return_annotation": "Type[DeclarativeWorkspaces]"}, "docstring_parsed": null, "kind": "function"}, "store_to_disk": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_dict": {"docstring": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be\nspecified.", "signature": {"params": [["self", "None"], ["camel_case: 'bool' = True", "bool"]], "return_annotation": "Dict[str, Any]"}, "docstring_parsed": {"params": [], "long_description": "specified.", "short_description": "Converts object into dictionary. Optional argument if the dictionary should be camelCase or snake_case can be", "examples": "[]", "returns": null}, "kind": "function"}, "workspace_data_filters_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "workspaces_folder": {"docstring": null, "signature": {"params": [["layout_organization_folder: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspace": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["name: 'str'", "str"], ["parent_id: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "to_api": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "JsonApiWorkspaceInDocument"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogWorkspaceService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "clone_workspace": {"docstring": "Clone workspace from existing workspace.\n\nClones complete workspace content - LDM, ADM, permissions.\n\nIf the target workspace already exists, it's content is overwritten.\nThis can be useful when testing changes in the clone\n  - once you are satisfied, you can clone it back to the origin workspace.\nFor the safety, you have to enforce this behavior by the dedicated input argument `overwrite_existing`.\n\nBeware of workspace data filters - after the clone you have to set WDF value for the new workspace.\n\nArgs:\n    source_workspace_id (str):\n        Source workspace ID, from which we wanna create a clone\n    target_workspace_id (str):\n        Target workspace ID, where we wanna clone the source workspace\n        Optional, if empty, we generate <source_workspace_id>_clone\n    target_workspace_name (str):\n        Target workspace name\n        Optional, if empty, we generate <source_workspace_name> (Clone)\n    overwrite_existing (bool):\n        Overwrite existing workspace.\n    data_source_mapping (dict):\n        Optional, allows users to map LDM to different data source ID\n    upper_case (bool):\n        Optional, allows users to change the case of all physical object IDs (table names, columns names)\n        True changes it to upper-case, False to lower-case, None(default) is noop\n        Useful when migrating to Snowflake, which is the only DB with upper-case default.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["source_workspace_id: 'str'", "str"], ["target_workspace_id: 'Optional[str]' = None", "Optional[str]"], ["target_workspace_name: 'Optional[str]' = None", "Optional[str]"], ["overwrite_existing: 'Optional[bool]' = None", "Optional[bool]"], ["data_source_mapping: 'Optional[dict]' = None", "Optional[dict]"], ["upper_case: 'Optional[bool]' = True", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "source_workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Source workspace ID, from which we wanna create a clone"}, {"arg_name": "target_workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Target workspace ID, where we wanna clone the source workspace\nOptional, if empty, we generate <source_workspace_id>_clone"}, {"arg_name": "target_workspace_name", "default": null, "is_optional": false, "type_name": "str", "description": "Target workspace name\nOptional, if empty, we generate <source_workspace_name> (Clone)"}, {"arg_name": "overwrite_existing", "default": null, "is_optional": false, "type_name": "bool", "description": "Overwrite existing workspace."}, {"arg_name": "data_source_mapping", "default": null, "is_optional": false, "type_name": "dict", "description": "Optional, allows users to map LDM to different data source ID"}, {"arg_name": "upper_case", "default": null, "is_optional": false, "type_name": "bool", "description": "Optional, allows users to change the case of all physical object IDs (table names, columns names)\nTrue changes it to upper-case, False to lower-case, None(default) is noop\nUseful when migrating to Snowflake, which is the only DB with upper-case default."}], "long_description": "Clones complete workspace content - LDM, ADM, permissions.\n\nIf the target workspace already exists, it's content is overwritten.\nThis can be useful when testing changes in the clone\n  - once you are satisfied, you can clone it back to the origin workspace.\nFor the safety, you have to enforce this behavior by the dedicated input argument `overwrite_existing`.\n\nBeware of workspace data filters - after the clone you have to set WDF value for the new workspace.", "short_description": "Clone workspace from existing workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "create_or_update": {"docstring": "Create a new workspace or overwrite an existing workspace with the same id.\n\nArgs:\n    workspace (CatalogWorkspace):\n        Catalog Workspace object to be created or updated.\n\nReturns:\n    None\n\nRaises:\n    ValueError: Workspace parent can not be updated.", "signature": {"params": [["self", "None"], ["workspace: 'CatalogWorkspace'", "CatalogWorkspace"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogWorkspace", "description": "Catalog Workspace object to be created or updated."}], "long_description": null, "short_description": "Create a new workspace or overwrite an existing workspace with the same id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_workspace": {"docstring": "Delete a workspace with all its content - logical model and analytics model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    None\n\nRaises:\n    ValueError:\n        Workspace does not exist.\n    ValueError:\n        Workspace is a parent of a workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Delete a workspace with all its content - logical model and analytics model.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "get_declarative_workspace": {"docstring": "Retrieve a workspace layout.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeWorkspaceModel:\n        Object Containing declarative Logical Data Model and declarative Analytical Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeWorkspaceModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve a workspace layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model.", "return_name": null}}, "kind": "function"}, "get_declarative_workspace_data_filters": {"docstring": "Retrieve a workspace data filers layout.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeWorkspaceDataFilters:\n        Object containing List of declarative workspace data filters.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeWorkspaceDataFilters"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve a workspace data filers layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters.", "return_name": null}}, "kind": "function"}, "get_declarative_workspaces": {"docstring": "Get all workspaces in the current organization in a declarative form.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeWorkspaces:\n        Declarative Workspaces object including all the workspaces for given organization.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeWorkspaces"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get all workspaces in the current organization in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces object including all the workspaces for given organization.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "get_workspace": {"docstring": "Get an individual workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogWorkspace:\n        Catalog workspace object containing structure of the workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogWorkspace"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Get an individual workspace.", "examples": "[]", "returns": {"type_name": "CatalogWorkspace", "description": "Catalog workspace object containing structure of the workspace.", "return_name": null}}, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_workspaces": {"docstring": "Returns a list of all workspaces in current organization\n\nArgs:\n    List[CatalogWorkspace]\n\nReturns:\n    List[CatalogWorkspace]:\n        List of workspaces in the current organization.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogWorkspace]"}, "docstring_parsed": null, "kind": "function"}, "load_and_put_declarative_workspace": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspace`.\n\nThis method combines `load_declarative_workspace` and `put_declarative_workspace` methods\nto load and set layouts stored using `store_declarative_workspace`.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspace` and `put_declarative_workspace` methods\nto load and set layouts stored using `store_declarative_workspace`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspace`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_workspace_data_filters": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspace_data_filters`.\n\nThis method combines `load_declarative_workspace_data_filters` and `put_declarative_workspace_data_filters`\nmethods to load and set layouts stored using `store_declarative_workspace_data_filters`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspace_data_filters` and `put_declarative_workspace_data_filters`\nmethods to load and set layouts stored using `store_declarative_workspace_data_filters`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspace_data_filters`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_workspaces": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspaces`.\n\nThis method combines `load_declarative_workspaces` and `put_declarative_workspaces`\nmethods to load and set layouts stored using `store_declarative_workspaces`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspaces` and `put_declarative_workspaces`\nmethods to load and set layouts stored using `store_declarative_workspaces`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspaces`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_workspace": {"docstring": "Load declarative workspaces layout, which was stored using `store_declarative_workspace`.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeWorkspaceModel:\n        Object Containing declarative Logical Data Model and declarative Analytical Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaceModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative workspaces layout, which was stored using `store_declarative_workspace`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model.", "return_name": null}}, "kind": "function"}, "load_declarative_workspace_data_filters": {"docstring": "Loads workspace data filters layout, which was stored using `store_declarative_workspace_data_filters`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeWorkspaceDataFilters:\n        Object containing List of declarative workspace data filters.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaceDataFilters"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads workspace data filters layout, which was stored using `store_declarative_workspace_data_filters`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters.", "return_name": null}}, "kind": "function"}, "load_declarative_workspaces": {"docstring": "Load declarative workspaces layout, which was stored using `store_declarative_workspaces`\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\nReturns:\n    CatalogDeclarativeWorkspaces:\n        Declarative Workspaces Object", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaces"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative workspaces layout, which was stored using `store_declarative_workspaces`", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces Object", "return_name": null}}, "kind": "function"}, "put_declarative_workspace": {"docstring": "Set a workspace layout.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    workspace (CatalogDeclarativeWorkspaceModel):\n        Object Containing declarative Logical Data Model and declarative Analytical Model.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["workspace: 'CatalogDeclarativeWorkspaceModel'", "CatalogDeclarativeWorkspaceModel"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model."}], "long_description": null, "short_description": "Set a workspace layout.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_workspace_data_filters": {"docstring": "Set workspace data filters layout.\n\nArgs:\n    workspace_data_filters (CatalogDeclarativeWorkspaceDataFilters):\n        Object containing List of declarative workspace data filters.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_data_filters: 'CatalogDeclarativeWorkspaceDataFilters'", "CatalogDeclarativeWorkspaceDataFilters"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_data_filters", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters."}], "long_description": null, "short_description": "Set workspace data filters layout.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_workspaces": {"docstring": "Set layout of all workspaces and their hierarchy. Parameter is in declarative form.\n\nArgs:\n    workspace (CatalogDeclarativeWorkspaces):\n        Declarative Workspaces object including all the workspaces for given organization.\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace: 'CatalogDeclarativeWorkspaces'", "CatalogDeclarativeWorkspaces"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces object including all the workspaces for given organization."}], "long_description": null, "short_description": "Set layout of all workspaces and their hierarchy. Parameter is in declarative form.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_workspace": {"docstring": "Store workspace layout in a directory hierarchy.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store workspace layout in a directory hierarchy.", "examples": "[]", "returns": null}, "kind": "function"}, "store_declarative_workspace_data_filters": {"docstring": "Store workspace data filters layout in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store workspace data filters layout in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_workspaces": {"docstring": "Stores declarative workspaces in a given path, as folder hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores declarative workspaces in a given path, as folder hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}}, "client": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}}, "compute": {"kind": "module", "model": {"kind": "module", "attribute": {"kind": "module", "ExecModelEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "base": {"kind": "module", "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecModelEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "execution": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TotalDimension": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class TotalDimension.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDimension.", "examples": "[]", "returns": null}, "kind": "function"}, "__getstate__": {"docstring": "Automatically created by attrs.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Automatically created by attrs.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TotalDimension.", "signature": {"params": [["self", "None"], ["idx: 'int'", "int"], ["items: 'list[str]' = NOTHING", "list[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDimension.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TotalDimension.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDimension.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TotalDimension.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDimension.", "examples": "[]", "returns": null}, "kind": "function"}, "__setstate__": {"docstring": "Automatically created by attrs.", "signature": {"params": [["self", "None"], ["state", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Automatically created by attrs.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TotalDefinition": {"docstring": null, "functions": {"__eq__": {"docstring": "Method generated by attrs for class TotalDefinition.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDefinition.", "examples": "[]", "returns": null}, "kind": "function"}, "__getstate__": {"docstring": "Automatically created by attrs.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Automatically created by attrs.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Method generated by attrs for class TotalDefinition.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["aggregation: 'str'", "str"], ["metric_local_id: 'str'", "str"], ["total_dims: 'list[TotalDimension]'", "list[TotalDimension]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDefinition.", "examples": "[]", "returns": null}, "kind": "function"}, "__ne__": {"docstring": "Method generated by attrs for class TotalDefinition.", "signature": {"params": [["self", "None"], ["other", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDefinition.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Method generated by attrs for class TotalDefinition.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Method generated by attrs for class TotalDefinition.", "examples": "[]", "returns": null}, "kind": "function"}, "__setstate__": {"docstring": "Automatically created by attrs.", "signature": {"params": [["self", "None"], ["state", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Automatically created by attrs.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionDefinition": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attributes: 'Optional[list[Attribute]]'", "Optional[list[Attribute]]"], ["metrics: 'Optional[list[Metric]]'", "Optional[list[Metric]]"], ["filters: 'Optional[list[Filter]]'", "Optional[list[Filter]]"], ["dimensions: 'list[Optional[list[str]]]'", "list[Optional[list[str]]]"], ["totals: 'Optional[list[TotalDefinition]]' = None", "Optional[list[TotalDefinition]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_create_dimensions": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "list[models.Dimension]"}, "docstring_parsed": null, "kind": "function"}, "_create_result_spec": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.ResultSpec"}, "docstring_parsed": null, "kind": "function"}, "_create_totals": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[list[models.Total]]"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.AfmExecution"}, "docstring_parsed": null, "kind": "function"}, "has_attributes": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_filters": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_metrics": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_one_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_two_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ResultSizeDimensionsLimitsExceeded": {"docstring": "Common base class for all non-exit exceptions.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result_size_dimensions_limits: 'ResultSizeDimensions'", "ResultSizeDimensions"], ["actual_result_size_dimensions: 'ResultSizeDimensions'", "ResultSizeDimensions"], ["first_violating_index: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Common base class for all non-exit exceptions.", "examples": "[]", "returns": null}, "kind": "class"}, "ExecutionResult": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result: 'models.ExecutionResult'", "models.ExecutionResult"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "check_dimensions_size_limits": {"docstring": null, "signature": {"params": [["self", "None"], ["result_size_dimensions_limits: 'ResultSizeDimensions'", "ResultSizeDimensions"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "get_all_header_values": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int'", "int"], ["header_idx: 'int'", "int"]], "return_annotation": "list[str]"}, "docstring_parsed": null, "kind": "function"}, "get_all_headers": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int'", "int"]], "return_annotation": "list[list[Any]]"}, "docstring_parsed": null, "kind": "function"}, "is_complete": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int' = 0", "int"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "next_page_start": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int' = 0", "int"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "BareExecutionResponse": {"docstring": "Holds ExecutionResponse from triggered report computation and allows reading report's results.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"], ["workspace_id: 'str'", "str"], ["execution_response: 'models.AfmExecutionResponse'", "models.AfmExecutionResponse"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "read_result": {"docstring": "Reads from the execution result.", "signature": {"params": [["self", "None"], ["limit: 'Union[int, list[int]]'", "Union[int, list[int]]"], ["offset: 'Union[None, int, list[int]]' = None", "Union[None, int, list[int]]"]], "return_annotation": "ExecutionResult"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Reads from the execution result.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Holds ExecutionResponse from triggered report computation and allows reading report's results.", "examples": "[]", "returns": null}, "kind": "class"}, "Execution": {"docstring": "An envelope class holding execution related classes:\n    - exec_def              ExecutionDefinition\n    - bare_exec_response    BareExecutionResponse", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"], ["response: 'models.AfmExecutionResponse'", "models.AfmExecutionResponse"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "read_result": {"docstring": null, "signature": {"params": [["self", "None"], ["limit: 'Union[int, list[int]]'", "Union[int, list[int]]"], ["offset: 'Union[None, int, list[int]]' = None", "Union[None, int, list[int]]"]], "return_annotation": "ExecutionResult"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "- exec_def              ExecutionDefinition\n- bare_exec_response    BareExecutionResponse", "short_description": "An envelope class holding execution related classes:", "examples": "[]", "returns": null}, "kind": "class"}, "ExecutionResponse": {"docstring": "An envelope class holding execution related classes:\n    - exec_def              ExecutionDefinition\n    - bare_exec_response    BareExecutionResponse", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"], ["response: 'models.AfmExecutionResponse'", "models.AfmExecutionResponse"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "read_result": {"docstring": null, "signature": {"params": [["self", "None"], ["limit: 'Union[int, list[int]]'", "Union[int, list[int]]"], ["offset: 'Union[None, int, list[int]]' = None", "Union[None, int, list[int]]"]], "return_annotation": "ExecutionResult"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "- exec_def              ExecutionDefinition\n- bare_exec_response    BareExecutionResponse", "short_description": "An envelope class holding execution related classes:", "examples": "[]", "returns": null}, "kind": "class"}, "ResultSizeBytesLimitExceeded": {"docstring": "Common base class for all non-exit exceptions.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result_size_bytes_limit: 'int'", "int"], ["actual_result_bytes_size: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Common base class for all non-exit exceptions.", "examples": "[]", "returns": null}, "kind": "class"}, "ResultCacheMetadata": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result_cache_metadata: 'models.ResultCacheMetadata'", "models.ResultCacheMetadata"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "check_bytes_size_limit": {"docstring": null, "signature": {"params": [["self", "None"], ["result_size_bytes_limit: 'Optional[int]' = None", "Optional[int]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "filter": {"kind": "module", "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AttributeFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["label: 'Union[ObjId, str, Attribute]'", "Union[ObjId, str, Attribute]"], ["values: 'Optional[list[str]]' = None", "Optional[list[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PositiveAttributeFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["label: 'Union[ObjId, str, Attribute]'", "Union[ObjId, str, Attribute]"], ["values: 'Optional[list[str]]' = None", "Optional[list[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PositiveAttributeFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "NegativeAttributeFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["label: 'Union[ObjId, str, Attribute]'", "Union[ObjId, str, Attribute]"], ["values: 'Optional[list[str]]' = None", "Optional[list[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.NegativeAttributeFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "RelativeDateFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'ObjId'", "ObjId"], ["granularity: 'str'", "str"], ["from_shift: 'int'", "int"], ["to_shift: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.RelativeDateFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AllTimeFilter": {"docstring": "Filter that is semantically equivalent to absent filter.\n\nThis filter exists because 'All time filter' retrieved from GoodData.CN\nis non-standard as it does not have `from` and `to` fields;\nthis is also the reason why as_api_model method is not implemented - it\nwould lead to invalid object.\n\nThe main feature of this filter is noop.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "This filter exists because 'All time filter' retrieved from GoodData.CN\nis non-standard as it does not have `from` and `to` fields;\nthis is also the reason why as_api_model method is not implemented - it\nwould lead to invalid object.\n\nThe main feature of this filter is noop.", "short_description": "Filter that is semantically equivalent to absent filter.", "examples": "[]", "returns": null}, "kind": "class"}, "AbsoluteDateFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'ObjId'", "ObjId"], ["from_date: 'str'", "str"], ["to_date: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AbsoluteDateFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "MetricValueFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["metric: 'Union[ObjId, str, Metric]'", "Union[ObjId, str, Metric]"], ["operator: 'str'", "str"], ["values: 'Union[float, int, tuple[float, float]]'", "Union[float, int, tuple[float, float]]"], ["treat_nulls_as: 'Union[float, None]' = None", "Union[float, None]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Union[afm_models.ComparisonMeasureValueFilter, afm_models.RangeMeasureValueFilter]"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "RankingFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["metrics: 'list[Union[ObjId, Metric, str]]'", "list[Union[ObjId, Metric, str]]"], ["operator: 'str'", "str"], ["value: 'int'", "int"], ["dimensionality: 'Optional[list[Union[str, ObjId, Attribute, Metric]]]'", "Optional[list[Union[str, ObjId, Attribute, Metric]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.RankingFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "metric": {"kind": "module", "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecModelEntity": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SimpleMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["item: 'ObjId'", "ObjId"], ["aggregation: 'Optional[str]' = None", "Optional[str]"], ["compute_ratio: 'bool' = False", "bool"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.SimpleMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDate": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attribute: 'Union[ObjId, Attribute]'", "Union[ObjId, Attribute]"], ["periods_ago: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDate"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDateMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["metric: 'Union[str, Metric]'", "Union[str, Metric]"], ["date_attributes: 'list[PopDate]'", "list[PopDate]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDateMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDateDataset": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["periods_ago: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDataset"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDatesetMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["metric: 'Union[str, Metric]'", "Union[str, Metric]"], ["date_datasets: 'list[PopDateDataset]'", "list[PopDateDataset]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDatasetMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ArithmeticMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["operator: 'str'", "str"], ["operands: 'list[Union[str, Metric]]'", "list[Union[str, Metric]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.ArithmeticMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}, "service": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "Execution": {"docstring": "An envelope class holding execution related classes:\n    - exec_def              ExecutionDefinition\n    - bare_exec_response    BareExecutionResponse", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"], ["response: 'models.AfmExecutionResponse'", "models.AfmExecutionResponse"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "read_result": {"docstring": null, "signature": {"params": [["self", "None"], ["limit: 'Union[int, list[int]]'", "Union[int, list[int]]"], ["offset: 'Union[None, int, list[int]]' = None", "Union[None, int, list[int]]"]], "return_annotation": "ExecutionResult"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "- exec_def              ExecutionDefinition\n- bare_exec_response    BareExecutionResponse", "short_description": "An envelope class holding execution related classes:", "examples": "[]", "returns": null}, "kind": "class"}, "ExecutionDefinition": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attributes: 'Optional[list[Attribute]]'", "Optional[list[Attribute]]"], ["metrics: 'Optional[list[Metric]]'", "Optional[list[Metric]]"], ["filters: 'Optional[list[Filter]]'", "Optional[list[Filter]]"], ["dimensions: 'list[Optional[list[str]]]'", "list[Optional[list[str]]]"], ["totals: 'Optional[list[TotalDefinition]]' = None", "Optional[list[TotalDefinition]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_create_dimensions": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "list[models.Dimension]"}, "docstring_parsed": null, "kind": "function"}, "_create_result_spec": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.ResultSpec"}, "docstring_parsed": null, "kind": "function"}, "_create_totals": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[list[models.Total]]"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.AfmExecution"}, "docstring_parsed": null, "kind": "function"}, "has_attributes": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_filters": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_metrics": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_one_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_two_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ResultCacheMetadata": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result_cache_metadata: 'models.ResultCacheMetadata'", "models.ResultCacheMetadata"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "check_bytes_size_limit": {"docstring": null, "signature": {"params": [["self", "None"], ["result_size_bytes_limit: 'Optional[int]' = None", "Optional[int]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ComputeService": {"docstring": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute\nis encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "for_exec_def": {"docstring": "Starts computation in GoodData.CN workspace, using the provided execution definition.\n\n:param workspace_id: workspace identifier\n:param exec_def: execution definition - this prescribes what to calculate, how to place labels and metric values\n into dimensions", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"]], "return_annotation": "Execution"}, "docstring_parsed": null, "kind": "function"}, "retrieve_result_cache_metadata": {"docstring": "Gets execution result's metadata from GoodData.CN workspace for given execution result ID.\n\n:param workspace_id: workspace identifier\n:param result_id: execution result ID\n:return: execution result's metadata", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["result_id: 'str'", "str"]], "return_annotation": "ResultCacheMetadata"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "is encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "short_description": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute", "examples": "[]", "returns": null}, "kind": "class"}}}, "insight": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AbsoluteDateFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'ObjId'", "ObjId"], ["from_date: 'str'", "str"], ["to_date: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AbsoluteDateFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AllTimeFilter": {"docstring": "Filter that is semantically equivalent to absent filter.\n\nThis filter exists because 'All time filter' retrieved from GoodData.CN\nis non-standard as it does not have `from` and `to` fields;\nthis is also the reason why as_api_model method is not implemented - it\nwould lead to invalid object.\n\nThe main feature of this filter is noop.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "This filter exists because 'All time filter' retrieved from GoodData.CN\nis non-standard as it does not have `from` and `to` fields;\nthis is also the reason why as_api_model method is not implemented - it\nwould lead to invalid object.\n\nThe main feature of this filter is noop.", "short_description": "Filter that is semantically equivalent to absent filter.", "examples": "[]", "returns": null}, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "MetricValueFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["metric: 'Union[ObjId, str, Metric]'", "Union[ObjId, str, Metric]"], ["operator: 'str'", "str"], ["values: 'Union[float, int, tuple[float, float]]'", "Union[float, int, tuple[float, float]]"], ["treat_nulls_as: 'Union[float, None]' = None", "Union[float, None]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Union[afm_models.ComparisonMeasureValueFilter, afm_models.RangeMeasureValueFilter]"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "NegativeAttributeFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["label: 'Union[ObjId, str, Attribute]'", "Union[ObjId, str, Attribute]"], ["values: 'Optional[list[str]]' = None", "Optional[list[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.NegativeAttributeFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PositiveAttributeFilter": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["label: 'Union[ObjId, str, Attribute]'", "Union[ObjId, str, Attribute]"], ["values: 'Optional[list[str]]' = None", "Optional[list[str]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PositiveAttributeFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "RankingFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["metrics: 'list[Union[ObjId, Metric, str]]'", "list[Union[ObjId, Metric, str]]"], ["operator: 'str'", "str"], ["value: 'int'", "int"], ["dimensionality: 'Optional[list[Union[str, ObjId, Attribute, Metric]]]'", "Optional[list[Union[str, ObjId, Attribute, Metric]]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.RankingFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "RelativeDateFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'ObjId'", "ObjId"], ["granularity: 'str'", "str"], ["from_shift: 'int'", "int"], ["to_shift: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.RelativeDateFilter"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ArithmeticMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["operator: 'str'", "str"], ["operands: 'list[Union[str, Metric]]'", "list[Union[str, Metric]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.ArithmeticMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDate": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attribute: 'Union[ObjId, Attribute]'", "Union[ObjId, Attribute]"], ["periods_ago: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDate"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDateDataset": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["dataset: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["periods_ago: 'int'", "int"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDataset"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDateMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["metric: 'Union[str, Metric]'", "Union[str, Metric]"], ["date_attributes: 'list[PopDate]'", "list[PopDate]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDateMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "PopDatesetMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["metric: 'Union[str, Metric]'", "Union[str, Metric]"], ["date_datasets: 'list[PopDateDataset]'", "list[PopDateDataset]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.PopDatasetMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SimpleMetric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["item: 'ObjId'", "ObjId"], ["aggregation: 'Optional[str]' = None", "Optional[str]"], ["compute_ratio: 'bool' = False", "bool"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.SimpleMeasureDefinition"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "SideLoads": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["objs: 'list[Any]'", "list[Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__len__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "all_for_type": {"docstring": null, "signature": {"params": [["self", "None"], ["obj_type: 'str'", "str"]], "return_annotation": "list[Any]"}, "docstring_parsed": null, "kind": "function"}, "find": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[Any, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "InsightMetric": {"docstring": "Represents metric placed on an insight.\n\nNote: this has different shape than object passed to execution.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["metric: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Metric"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "Note: this has different shape than object passed to execution.", "short_description": "Represents metric placed on an insight.", "examples": "[]", "returns": null}, "kind": "class"}, "InsightAttribute": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attribute: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Attribute"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "InsightFilter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["f: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_computable": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Filter"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "InsightBucket": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["bucket: 'dict[str, Any]'", "dict[str, Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Insight": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["from_vis_obj: 'dict[str, Any]'", "dict[str, Any]"], ["side_loads: 'Optional[SideLoads]' = None", "Optional[SideLoads]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "get_metadata": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Optional[Any]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "InsightService": {"docstring": "Insight Service allows retrieval of insights from a GD.CN workspace. The insights are returned as instances of\nInsight which allows convenient introspection and necessary functions to convert the insight into a form where it\ncan be sent for computation.\n\nNote: the insights are created using GD.CN Analytical Designer or using GoodData.UI SDK. They are stored as\nvisualization objects with a free-form body. This body is specific for AD & SDK.\nThe Insight wrapper exists to take care of these discrepancies.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_insight": {"docstring": "Gets a single insight from a workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    insight_id (str):\n        Insight identifier string e.g. \"bikes\"\n\nReturns:\n    Insight:\n        A single Insight object contains side loaded metadata about the entities it references", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["insight_id: 'str'", "str"]], "return_annotation": "Insight"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "insight_id", "default": null, "is_optional": false, "type_name": "str", "description": "Insight identifier string e.g. \"bikes\""}], "long_description": null, "short_description": "Gets a single insight from a workspace.", "examples": "[]", "returns": {"type_name": "Insight", "description": "A single Insight object contains side loaded metadata about the entities it references", "return_name": null}}, "kind": "function"}, "get_insights": {"docstring": "Gets all insights for a workspace. The insights will contain side loaded metadata for all execution entities\nthat they reference.\n\nArgs:\n     workspace_id (str):\n        Workspace identification string e.g. \"demo\"\nReturns:\n     list[Insight]:\n        All available insights, each insight will contain side loaded metadata about the entities it references", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[Insight]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "that they reference.", "short_description": "Gets all insights for a workspace. The insights will contain side loaded metadata for all execution entities", "examples": "[]", "returns": {"type_name": "list[Insight]", "description": "All available insights, each insight will contain side loaded metadata about the entities it references", "return_name": null}}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "Insight which allows convenient introspection and necessary functions to convert the insight into a form where it\ncan be sent for computation.\n\nNote: the insights are created using GD.CN Analytical Designer or using GoodData.UI SDK. They are stored as\nvisualization objects with a free-form body. This body is specific for AD & SDK.\nThe Insight wrapper exists to take care of these discrepancies.", "short_description": "Insight Service allows retrieval of insights from a GD.CN workspace. The insights are returned as instances of", "examples": "[]", "returns": null}, "kind": "class"}}, "sdk": {"kind": "module", "CatalogDataSourceService": {"docstring": "_summary_\n\nArgs:\n    CatalogServiceBase (_type_): _description_", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_credentials_from_file": {"docstring": null, "signature": {"params": [["credentials_path: 'Path'", "Path"]], "return_annotation": "dict[str, Any]"}, "docstring_parsed": null, "kind": "function"}, "create_or_update_data_source": {"docstring": "Pushes the Data Source to the GoodData environment.\n\nAutomatically decides, whether to create or update.\n\nArgs:\n    data_source (CatalogDataSource):\n        Catalog Data Source object\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source: 'CatalogDataSource'", "CatalogDataSource"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source", "default": null, "is_optional": false, "type_name": "CatalogDataSource", "description": "Catalog Data Source object"}], "long_description": "Automatically decides, whether to create or update.", "short_description": "Pushes the Data Source to the GoodData environment.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "data_source_folder": {"docstring": "TODO\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path):\n        ...\n\nReturns:\n    Path:\n        Path to the source folder.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": null, "is_optional": false, "type_name": "Path", "description": "..."}], "long_description": null, "short_description": "TODO", "examples": "[]", "returns": {"type_name": "Path", "description": "Path to the source folder.", "return_name": null}}, "kind": "function"}, "delete_data_source": {"docstring": "Delete data source using Data Source id.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Delete data source using Data Source id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "generate_logical_model": {"docstring": "Generate logical data model for a data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    generate_ldm_request (CatalogGenerateLdmRequest, optional):\n        LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["generate_ldm_request: 'CatalogGenerateLdmRequest' = CatalogGenerateLdmRequest(separator='__', generate_long_ids=None, table_prefix=None, view_prefix=None, primary_label_prefix=None, secondary_label_prefix=None, fact_prefix=None, date_granularities=None, grain_prefix=None, reference_prefix=None, grain_reference_prefix=None, denorm_prefix=None, wdf_prefix='wdf', pdm=None)", "CatalogGenerateLdmRequest"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "generate_ldm_request", "default": null, "is_optional": true, "type_name": "CatalogGenerateLdmRequest", "description": "LDM options. Defaults to CatalogGenerateLdmRequest(separator=\"__\", wdf_prefix=\"wdf\")"}], "long_description": null, "short_description": "Generate logical data model for a data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model", "return_name": null}}, "kind": "function"}, "get_data_source": {"docstring": "Retrieve Data Source entity using data source id.\n\nArgs:\n    data_source_id (str): Data Source identification string e.g. \"demo\"\n\nReturns:\n    CatalogDataSource: Data Source Object", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDataSource"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve Data Source entity using data source id.", "examples": "[]", "returns": {"type_name": "CatalogDataSource", "description": "Data Source Object", "return_name": null}}, "kind": "function"}, "get_declarative_data_sources": {"docstring": "Retrieve all data sources, including their related physical data model.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources, including physical data model.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources, including physical data model.", "return_name": null}}, "kind": "function"}, "get_declarative_pdm": {"docstring": "Retrieve physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve physical data model for a given data source.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_data_source_tables": {"docstring": "Lists all the data source tables for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    List[CatalogDataSourceTable]:\n        List of Data Source Table objects", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "List[CatalogDataSourceTable]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Lists all the data source tables for a given data source.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSourceTable]", "description": "List of Data Source Table objects", "return_name": null}}, "kind": "function"}, "list_data_sources": {"docstring": "Lists all data sources.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogDataSource]:\n        List of all Data Sources in the whole organization.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogDataSource]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Lists all data sources.", "examples": "[]", "returns": {"type_name": "List[CatalogDataSource]", "description": "List of all Data Sources in the whole organization.", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_data_sources": {"docstring": "Loads and sets layouts stored using `store_declarative_data_sources`.\n\nThis method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to Path.cwd().\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}, {"arg_name": "credentials_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to Path.cwd()."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": "This method combines `load_declarative_data_sources` and `put_declarative_data_sources`\nmethods to load and set layouts stored using `store_declarative_data_sources`.", "short_description": "Loads and sets layouts stored using `store_declarative_data_sources`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_pdm": {"docstring": "Loads and sets layouts stored using `store_declarative_pdm`.\n\nThis method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines load_declarative_pdm and `put_declarative_pdm` methods\nto load and set layouts stored using `store_declarative_pdm`.", "short_description": "Loads and sets layouts stored using `store_declarative_pdm`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_data_sources": {"docstring": "Load declarative data sources layout, which was stored using store_declarative_data_sources.\n\nArgs:\n    layout_root_path (Optional[Path], optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeDataSources:\n        Declarative Data Sources object", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeDataSources"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative data sources layout, which was stored using store_declarative_data_sources.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object", "return_name": null}}, "kind": "function"}, "load_declarative_pdm": {"docstring": "Load declarative physical data model layout.\n\nLoad declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables: Physical Data Model object.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "Load declarative physical data model layout, which was stored using\n`store_declarative_pdm` for a given data source.", "short_description": "Load declarative physical data model layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "load_pdm_from_disk": {"docstring": "This method is used to load pdm stored to disk using method store_pdm_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeTables:\n        Physical Data Model object.", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeTables"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "This method is used to load pdm stored to disk using method store_pdm_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object.", "return_name": null}}, "kind": "function"}, "patch_data_source_attributes": {"docstring": "Applies changes to the specified data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    attributes (dict):\n        A dictionary containing attributes of the data source to be changed.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["attributes: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "attributes", "default": null, "is_optional": false, "type_name": "dict", "description": "A dictionary containing attributes of the data source to be changed."}], "long_description": null, "short_description": "Applies changes to the specified data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_data_sources": {"docstring": "Set all data sources, including their related physical data model.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Source object. Can be retrieved by get_declarative_data_sources.\n    credentials_path (Optional[Path], optional):\n        Path to the Credentials. Optional, defaults to None.\n    test_data_sources (bool, optional):\n        If True, the connection of data sources is tested. Defaults to False.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"], ["test_data_sources: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Source object. Can be retrieved by get_declarative_data_sources."}, {"arg_name": "credentials_path", "default": null, "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the Credentials. Optional, defaults to None."}, {"arg_name": "test_data_sources", "default": "False", "is_optional": true, "type_name": "bool", "description": "If True, the connection of data sources is tested. Defaults to False."}], "long_description": null, "short_description": "Set all data sources, including their related physical data model.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_pdm": {"docstring": "Set physical data model for a given data source.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    declarative_tables (CatalogDeclarativeTables):\n        Physical Data Model object. Can be obtained via get_declarative_pdm.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["declarative_tables: 'CatalogDeclarativeTables'", "CatalogDeclarativeTables"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "declarative_tables", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeTables", "description": "Physical Data Model object. Can be obtained via get_declarative_pdm."}], "long_description": null, "short_description": "Set physical data model for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "register_upload_notification": {"docstring": "Invalidate cache of your computed reports to force your analytics to be recomputed.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Invalidate cache of your computed reports to force your analytics to be recomputed.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "report_warnings": {"docstring": null, "signature": {"params": [["warnings: 'list[dict]'", "list[dict]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "scan_and_put_pdm": {"docstring": "This method combines scan_data_source and put_declarative_pdm methods.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}], "long_description": null, "short_description": "This method combines scan_data_source and put_declarative_pdm methods.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "scan_data_source": {"docstring": "Scan data source specified by its id and optionally by specified scan request.\n\nCatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    scan_request (CatalogScanModelRequest, optional):\n        Options for the Scan Request. Defaults to CatalogScanModelRequest().\n    report_warnings (bool, optional):\n        Switch to turn on warnings. Defaults to False.\n\nReturns:\n    CatalogScanResultPdm:\n        An instance of CatalogScanResultPdm.\n        Containing pdm itself and a list of warnings that occurred during scanning.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["scan_request: 'CatalogScanModelRequest' = CatalogScanModelRequest(separator='__', scan_tables=True, scan_views=False, table_prefix=None, view_prefix=None, schemata=None)", "CatalogScanModelRequest"], ["report_warnings: 'bool' = False", "bool"]], "return_annotation": "CatalogScanResultPdm"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "scan_request", "default": "CatalogScanModelRequest()", "is_optional": true, "type_name": "CatalogScanModelRequest", "description": "Options for the Scan Request. Defaults to CatalogScanModelRequest()."}, {"arg_name": "report_warnings", "default": "False", "is_optional": true, "type_name": "bool", "description": "Switch to turn on warnings. Defaults to False."}], "long_description": "CatalogScanResultPdm contains PDM and warnings. Warnings contain information about\ncolumns which were not added to the PDM because their data types are not supported.\nAdditional parameter report_warnings can be passed to suppress or to report warnings.\nBy default warnings are returned but not reported to STDOUT. If you set report_warnings\nto True, warnings are reported to STDOUT.", "short_description": "Scan data source specified by its id and optionally by specified scan request.", "examples": "[]", "returns": {"type_name": "CatalogScanResultPdm", "description": "An instance of CatalogScanResultPdm.\nContaining pdm itself and a list of warnings that occurred during scanning.", "return_name": null}}, "kind": "function"}, "scan_schemata": {"docstring": "Returns a list of schemas that exist in the database.\n\nCan be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n\nReturns:\n    list[str]:\n        List of schema names for the given data source specified by its id.", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"]], "return_annotation": "list[str]"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}], "long_description": "Can be configured in the data source entity. Data source\nmanagers like Dremio or Drill can work with multiple schemas\nand schema names can be injected into scan_request to filter\nout tables stored in the different schemas.", "short_description": "Returns a list of schemas that exist in the database.", "examples": "[]", "returns": {"type_name": "list[str]", "description": "List of schema names for the given data source specified by its id.", "return_name": null}}, "kind": "function"}, "scan_sql": {"docstring": "Analyze SELECT SQL query in a given request.\n\nReturn description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    sql_request (ScanSqlRequest):\n        SELECT SQL query to analyze\n\nReturns:\n    ScanSqlResponse:\n        SELECT query analysis result", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["sql_request: 'ScanSqlRequest'", "ScanSqlRequest"]], "return_annotation": "ScanSqlResponse"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "sql_request", "default": null, "is_optional": false, "type_name": "ScanSqlRequest", "description": "SELECT SQL query to analyze"}], "long_description": "Return description of SQL result-set as list of column names with GoodData data types\nand list of example data returned by SELECT query.", "short_description": "Analyze SELECT SQL query in a given request.", "examples": "[]", "returns": {"type_name": "ScanSqlResponse", "description": "SELECT query analysis result", "return_name": null}}, "kind": "function"}, "store_declarative_data_sources": {"docstring": "Store data sources layouts in a directory hierarchy.\n\n    gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n    \u2514\u2500\u2500 organization_id\n            \u2514\u2500\u2500 data_sources\n                    \u251c\u2500\u2500 data_source_a\n                    \u2502       \u251c\u2500\u2500 pdm\n                    \u2502       \u2502   \u251c\u2500\u2500 table_A.yaml\n                    \u2502       \u2502   \u2514\u2500\u2500 table_B.yaml\n                    \u2502       \u2514\u2500\u2500 data_source_a.yaml\n                    \u2514\u2500\u2500 data_source_b\n                            \u2514\u2500\u2500 pdm\n                            \u2502   \u251c\u2500\u2500 table_X.yaml\n                            \u2502   \u2514\u2500\u2500 table_Y.yaml\n                            \u2514\u2500\u2500 data_source_b.yaml", "short_description": "Store data sources layouts in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_pdm": {"docstring": "Store physical data model layout in directory hierarchy for a given data source.\n\ngooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    data_source_id (str):\n        Data Source identification string. e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["data_source_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "data_source_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "gooddata_layouts\n\u2514\u2500\u2500 organization_id\n        \u2514\u2500\u2500 data_sources\n                \u2514\u2500\u2500 data_source_a\n                        \u2514\u2500\u2500 pdm\n                            \u251c\u2500\u2500 table_A.yaml\n                            \u2514\u2500\u2500 table_B.yaml", "short_description": "Store physical data model layout in directory hierarchy for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_pdm_to_disk": {"docstring": "Store the physical data model layout in the directory for a given data source.\n\nThe directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml\n\nArgs:\n    datasource_id (str):\n        Data Source identification string. e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["datasource_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "datasource_id", "default": null, "is_optional": false, "type_name": "str", "description": "Data Source identification string. e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "The directory structure below shows the output for the path set to Path(\"pdm_location\").\npdm_location\n    \u2514\u2500\u2500 pdm\n        \u251c\u2500\u2500 table_A.yaml\n        \u2514\u2500\u2500 table_B.yaml", "short_description": "Store the physical data model layout in the directory for a given data source.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "test_data_sources_connection": {"docstring": "Tests connection to declarative data sources.\n\nIf `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.\n\nArgs:\n    declarative_data_sources (CatalogDeclarativeDataSources):\n        Declarative Data Sources object\n    credentials_path (Optional[Path], optional):\n        Path to the credentials. Defaults to None.\n\nRaises:\n    ValueError:\n        Check API references for possible errors of data source connections.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["declarative_data_sources: 'CatalogDeclarativeDataSources'", "CatalogDeclarativeDataSources"], ["credentials_path: 'Optional[Path]' = None", "Optional[Path]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "declarative_data_sources", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeDataSources", "description": "Declarative Data Sources object"}, {"arg_name": "credentials_path", "default": "None", "is_optional": true, "type_name": "Optional[Path]", "description": "Path to the credentials. Defaults to None."}], "long_description": "If `credentials_path` is omitted then the connection\nis tested with empty credentials. In case some connection\nfailed the `ValueError` is raised with information about why\nthe connection to the data source failed, e.g. host\nunreachable or invalid login or password.", "short_description": "Tests connection to declarative data sources.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": {"params": [{"arg_name": "CatalogServiceBase", "default": null, "is_optional": false, "type_name": "_type_", "description": "_description_"}], "long_description": null, "short_description": "_summary_", "examples": "[]", "returns": null}, "kind": "class"}, "CatalogOrganizationService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "update_name": {"docstring": "Updates the name of the organization.\n\nArgs:\n    name (str):\n        New name of the organization\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "name", "default": null, "is_optional": false, "type_name": "str", "description": "New name of the organization"}], "long_description": null, "short_description": "Updates the name of the organization.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "update_oidc_parameters": {"docstring": "Updates OIDC parameters of organization.\n\nArgs:\n    oauth_issuer_location (Optional[str], optional):\n        Issuer location. Defaults to None.\n    oauth_client_id (Optional[str], optional):\n        Public client identifier. Defaults to None.\n    oauth_client_secret (Optional[str], optional):\n        Client secret. Defaults to None.\n\nReturns:\n    None\n\nRaises:\n    ValueError:\n        Parameters were not strictly all none or all string.", "signature": {"params": [["self", "None"], ["oauth_issuer_location: 'Optional[str]' = None", "Optional[str]"], ["oauth_client_id: 'Optional[str]' = None", "Optional[str]"], ["oauth_client_secret: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "oauth_issuer_location", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Issuer location. Defaults to None."}, {"arg_name": "oauth_client_id", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Public client identifier. Defaults to None."}, {"arg_name": "oauth_client_secret", "default": "None", "is_optional": true, "type_name": "Optional[str]", "description": "Client secret. Defaults to None."}], "long_description": null, "short_description": "Updates OIDC parameters of organization.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogPermissionService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: gooddata_sdk.client.GoodDataApiClient", "<class 'gooddata_sdk.client.GoodDataApiClient'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_declarative_permissions": {"docstring": "Retrieve current set of permissions of the workspace in a declarative form.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeWorkspacePermissions:\n        Object containing workspace permissions.", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"]], "return_annotation": "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve current set of permissions of the workspace in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace permissions.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "put_declarative_permissions": {"docstring": "Set effective permissions for the workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string. e.g. \"demo\"\n    declarative_workspace_permissions (CatalogDeclarativeWorkspacePermissions):\n        Object containing workspace Permissions.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: str", "<class 'str'>"], ["declarative_workspace_permissions: gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions", "<class 'gooddata_sdk.catalog.permission.declarative_model.permission.CatalogDeclarativeWorkspacePermissions'>"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string. e.g. \"demo\""}, {"arg_name": "declarative_workspace_permissions", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspacePermissions", "description": "Object containing workspace Permissions."}], "long_description": null, "short_description": "Set effective permissions for the workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogUserService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "create_or_update_user": {"docstring": "Creates a new user or overwrites an existing user.\n\n\nArgs:\n    user (CatalogUser):\n        User entity object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user: 'CatalogUser'", "CatalogUser"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user", "default": null, "is_optional": false, "type_name": "CatalogUser", "description": "User entity object."}], "long_description": null, "short_description": "Creates a new user or overwrites an existing user.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "create_or_update_user_group": {"docstring": "Create a new user group or overwrite an existing user group.\n\nArgs:\n    user_group (CatalogUserGroup):\n        UserGroup entity object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group: 'CatalogUserGroup'", "CatalogUserGroup"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group", "default": null, "is_optional": false, "type_name": "CatalogUserGroup", "description": "UserGroup entity object."}], "long_description": null, "short_description": "Create a new user group or overwrite an existing user group.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_user": {"docstring": "Delete User using User id.\n\nArgs:\n    user_id (str):\n        User identification string. e.g. \"123\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_id", "default": null, "is_optional": false, "type_name": "str", "description": "User identification string. e.g. \"123\""}], "long_description": null, "short_description": "Delete User using User id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_user_group": {"docstring": "Delete User Group using User Group id.\n\nArgs:\n    user_group_id (str):\n        User Group identification string. e.g. \"123\"\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_group_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_group_id", "default": null, "is_optional": false, "type_name": "str", "description": "User Group identification string. e.g. \"123\""}], "long_description": null, "short_description": "Delete User Group using User Group id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "get_declarative_user_groups": {"docstring": "Retrieve all user groups in a declarative form.\n\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUserGroups:\n        Declarative User Groups object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUserGroups"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all user groups in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object.", "return_name": null}}, "kind": "function"}, "get_declarative_users": {"docstring": "Retrieve all users in a declarative form.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUsers:\n        Declarative Users object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUsers"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve all users in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object.", "return_name": null}}, "kind": "function"}, "get_declarative_users_user_groups": {"docstring": "Retrieves all users and user groups in a declarative form.\n\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeUsersUserGroups:\n        Declarative Users and User Groups object.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeUsersUserGroups"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieves all users and user groups in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "get_user": {"docstring": "Get an individual user using User id.\n\nArgs:\n    user_id (str):\n        User identification string. e.g. \"123\"\n\nReturns:\n    CatalogUser:\n        User entity object.", "signature": {"params": [["self", "None"], ["user_id: 'str'", "str"]], "return_annotation": "CatalogUser"}, "docstring_parsed": {"params": [{"arg_name": "user_id", "default": null, "is_optional": false, "type_name": "str", "description": "User identification string. e.g. \"123\""}], "long_description": null, "short_description": "Get an individual user using User id.", "examples": "[]", "returns": {"type_name": "CatalogUser", "description": "User entity object.", "return_name": null}}, "kind": "function"}, "get_user_group": {"docstring": "Get an individual user group using user group id.\n\nArgs:\n    user_group_id (str):\n        User Group identification string. e.g. \"123\"\n\nReturns:\n    CatalogUserGroup:\n        UserGroup entity object.", "signature": {"params": [["self", "None"], ["user_group_id: 'str'", "str"]], "return_annotation": "CatalogUserGroup"}, "docstring_parsed": {"params": [{"arg_name": "user_group_id", "default": null, "is_optional": false, "type_name": "str", "description": "User Group identification string. e.g. \"123\""}], "long_description": null, "short_description": "Get an individual user group using user group id.", "examples": "[]", "returns": {"type_name": "CatalogUserGroup", "description": "UserGroup entity object.", "return_name": null}}, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_user_groups": {"docstring": "Get a list of all existing user groups.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogUserGroup]:\n        List of all User groups as UserGroup entity object.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogUserGroup]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get a list of all existing user groups.", "examples": "[]", "returns": {"type_name": "List[CatalogUserGroup]", "description": "List of all User groups as UserGroup entity object.", "return_name": null}}, "kind": "function"}, "list_users": {"docstring": "Get a list of all existing users.\n\nArgs:\n    None\n\nReturns:\n    List[CatalogUser]:\n        List of all Users as User entity objects.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogUser]"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get a list of all existing users.", "examples": "[]", "returns": {"type_name": "List[CatalogUser]", "description": "List of all Users as User entity objects.", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_user_groups": {"docstring": "Loads and sets the layouts stored using `store_declarative_users`.\n\nThis method combines load_declarative_users and put_declarative_users\nmethods to load and set layouts stored using store_declarative_users.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines load_declarative_users and put_declarative_users\nmethods to load and set layouts stored using store_declarative_users.", "short_description": "Loads and sets the layouts stored using `store_declarative_users`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_users": {"docstring": "Loads and sets the layouts stored using `store_declarative_users`.\n\nThis method combines `load_declarative_users` and `put_declarative_users`\nmethods to load and set layouts stored using `store_declarative_users`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_users` and `put_declarative_users`\nmethods to load and set layouts stored using `store_declarative_users`.", "short_description": "Loads and sets the layouts stored using `store_declarative_users`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_users_user_groups": {"docstring": "Loads and sets the layouts stored using `store_declarative_users_user_groups`.\n\nThis method combines `load_declarative_users` and `put_declarative_users_user_groups`\nmethods to load and set layouts stored using `store_declarative_users_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_users` and `put_declarative_users_user_groups`\nmethods to load and set layouts stored using `store_declarative_users_user_groups`.", "short_description": "Loads and sets the layouts stored using `store_declarative_users_user_groups`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_user_groups": {"docstring": "Load declarative users groups layout, which was stored using `store_declarative_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUserGroups:\n        Declarative User Groups object.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUserGroups"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users groups layout, which was stored using `store_declarative_user_groups`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object.", "return_name": null}}, "kind": "function"}, "load_declarative_users": {"docstring": "Load declarative users layout, which was stored using store_declarative_users.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUsers:\n        Declarative Users object, incuding authetication properties.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUsers"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users layout, which was stored using store_declarative_users.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object, incuding authetication properties.", "return_name": null}}, "kind": "function"}, "load_declarative_users_user_groups": {"docstring": "Load declarative users and user groups layout, which was stored using `store_declarative_users_user_groups`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeUsersUserGroups:\n        Declarative Users and User Groups object.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeUsersUserGroups"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative users and user groups layout, which was stored using `store_declarative_users_user_groups`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object.", "return_name": null}}, "kind": "function"}, "put_declarative_user_groups": {"docstring": "Set all user groups eventually with their parents.\n\nArgs:\n    user_groups (CatalogDeclarativeUserGroups):\n        Declarative User Groups object.\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["user_groups: 'CatalogDeclarativeUserGroups'", "CatalogDeclarativeUserGroups"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "user_groups", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUserGroups", "description": "Declarative User Groups object."}], "long_description": null, "short_description": "Set all user groups eventually with their parents.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_users": {"docstring": "Set all users and their authentication properties.\n\nArgs:\n    users (CatalogDeclarativeUsers):\n        Declarative Users object, incuding authetication properties.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["users: 'CatalogDeclarativeUsers'", "CatalogDeclarativeUsers"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "users", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUsers", "description": "Declarative Users object, incuding authetication properties."}], "long_description": null, "short_description": "Set all users and their authentication properties.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_users_user_groups": {"docstring": "Set all users and user groups.\n\nArgs:\n    users_user_groups (CatalogDeclarativeUsersUserGroups):\n        Declarative Users and User Groups object.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["users_user_groups: 'CatalogDeclarativeUsersUserGroups'", "CatalogDeclarativeUsersUserGroups"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "users_user_groups", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeUsersUserGroups", "description": "Declarative Users and User Groups object."}], "long_description": null, "short_description": "Set all users and user groups.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_user_groups": {"docstring": "Stores all the user groups in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores all the user groups in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_users": {"docstring": "Store users in directory hierarchy. Directly from server.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store users in directory hierarchy. Directly from server.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_users_user_groups": {"docstring": "Stores all the users and user groups in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory.. Defaults to Path.cwd().\n\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory.. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores all the users and user groups in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceContentService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_prepare_afm_for_availability": {"docstring": null, "signature": {"params": [["items: 'list[ValidObjectTypes]'", "list[ValidObjectTypes]"]], "return_annotation": "afm_models.AFM"}, "docstring_parsed": null, "kind": "function"}, "compute_valid_objects": {"docstring": "Returns attributes, facts, and metrics which are valid to add to a context that already\ncontains some entities from the semantic model. The entities are typically used to compute analytics and\ncome from the execution definition. You may, however, specify the entities through different layers of\nconvenience.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    ctx (ValidObjectsInputType):\n        items already in context. you can specify context in one of the following ways:\n\nReturns:\n    ValidObjects:\n        type of available object is used as key in the dict,\n        the value is a set containing id's of available items", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["ctx: 'ValidObjectsInputType'", "ValidObjectsInputType"]], "return_annotation": "ValidObjects"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "ctx", "default": null, "is_optional": false, "type_name": "ValidObjectsInputType", "description": "items already in context. you can specify context in one of the following ways:"}], "long_description": "contains some entities from the semantic model. The entities are typically used to compute analytics and\ncome from the execution definition. You may, however, specify the entities through different layers of\nconvenience.", "short_description": "Returns attributes, facts, and metrics which are valid to add to a context that already", "examples": "[]", "returns": {"type_name": "ValidObjects", "description": "type of available object is used as key in the dict,\nthe value is a set containing id's of available items", "return_name": null}}, "kind": "function"}, "get_attributes_catalog": {"docstring": "Retrieve all attributes in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogAttribute]:\n        List of all attributes in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogAttribute]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all attributes in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogAttribute]", "description": "List of all attributes in a given workspace.", "return_name": null}}, "kind": "function"}, "get_declarative_analytics_model": {"docstring": "Retrieves declarative analytics model. The model is tied to the workspace and organization.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieves declarative analytics model. The model is tied to the workspace and organization.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "get_declarative_ldm": {"docstring": "Retrieve a logical model layout. On CatalogDeclarativeModel user can call\n``modify_mapped_data_source(data_source_mapping: dict)`` method,\nwhich substitutes data source id in datasets.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "``modify_mapped_data_source(data_source_mapping: dict)`` method,\nwhich substitutes data source id in datasets.", "short_description": "Retrieve a logical model layout. On CatalogDeclarativeModel user can call", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model.", "return_name": null}}, "kind": "function"}, "get_dependent_entities_graph": {"docstring": "There are dependencies among all catalog objects, the chain is the following:\n`fact/attribute/label \u2192 dataset \u2192 metric \u2192 visualization \u2192 dashboard`\nSome steps can be skipped, e.g. `fact \u2192 visualization`\nWe do not support `table \u2192 dataset` dependency yet.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDependentEntitiesResponse:\n        Dependent entities graph containing nodes and edges.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDependentEntitiesResponse"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "`fact/attribute/label \u2192 dataset \u2192 metric \u2192 visualization \u2192 dashboard`\nSome steps can be skipped, e.g. `fact \u2192 visualization`\nWe do not support `table \u2192 dataset` dependency yet.", "short_description": "There are dependencies among all catalog objects, the chain is the following:", "examples": "[]", "returns": {"type_name": "CatalogDependentEntitiesResponse", "description": "Dependent entities graph containing nodes and edges.", "return_name": null}}, "kind": "function"}, "get_dependent_entities_graph_from_entry_points": {"docstring": "Extends get_dependent_entities_graph with the entry point from which the graph is created.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    dependent_entities_request (CatalogDependentEntitiesRequest):\n        Entry points for the dependent entities graph\n\nReturns:\n    CatalogDependentEntitiesResponse:\n        Dependent entities graph containing nodes and edges.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["dependent_entities_request: 'CatalogDependentEntitiesRequest'", "CatalogDependentEntitiesRequest"]], "return_annotation": "CatalogDependentEntitiesResponse"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "dependent_entities_request", "default": null, "is_optional": false, "type_name": "CatalogDependentEntitiesRequest", "description": "Entry points for the dependent entities graph"}], "long_description": null, "short_description": "Extends get_dependent_entities_graph with the entry point from which the graph is created.", "examples": "[]", "returns": {"type_name": "CatalogDependentEntitiesResponse", "description": "Dependent entities graph containing nodes and edges.", "return_name": null}}, "kind": "function"}, "get_facts_catalog": {"docstring": "Retrieve all facts in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogFact]:\n        List of all facts in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogFact]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all facts in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogFact]", "description": "List of all facts in a given workspace.", "return_name": null}}, "kind": "function"}, "get_full_catalog": {"docstring": "Retrieves catalog for a workspace. Catalog contains all data sets and metrics defined in that workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogWorkspaceContent:\n        Object containing all data sets and metrics.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogWorkspaceContent"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieves catalog for a workspace. Catalog contains all data sets and metrics defined in that workspace.", "examples": "[]", "returns": {"type_name": "CatalogWorkspaceContent", "description": "Object containing all data sets and metrics.", "return_name": null}}, "kind": "function"}, "get_labels_catalog": {"docstring": "Retrieve all labels in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogLabel]:\n        List of all labels in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogLabel]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all labels in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogLabel]", "description": "List of all labels in a given workspace.", "return_name": null}}, "kind": "function"}, "get_metrics_catalog": {"docstring": "Retrieve all Metrics in a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    list[CatalogMetric]:\n        List of all metrics in a given workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[CatalogMetric]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve all Metrics in a given workspace.", "examples": "[]", "returns": {"type_name": "list[CatalogMetric]", "description": "List of all metrics in a given workspace.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "layout_workspace_folder": {"docstring": "Ties the LDM or Analytics Model to the Organization and workspaces in the store methods.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    Path:\n        Path to the root of the layout directory for store methods.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": false, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Ties the LDM or Analytics Model to the Organization and workspaces in the store methods.", "examples": "[]", "returns": {"type_name": "Path", "description": "Path to the root of the layout directory for store methods.", "return_name": null}}, "kind": "function"}, "load_analytics_model_from_disk": {"docstring": "Loads the analytics model, which was stored using store_analytics_model_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the analytics model, which was stored using store_analytics_model_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_analytics_model": {"docstring": "This method combines load_declarative_analytics_model and put_analytics_model methods\nto load and set layouts stored using store_declarative_analytics_model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "to load and set layouts stored using store_declarative_analytics_model.", "short_description": "This method combines load_declarative_analytics_model and put_analytics_model methods", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_ldm": {"docstring": "This method combines load_declarative_ldm and put_declarative_ldm\nmethods to load and set layouts stored using store_declarative_ldm.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n    validator (Optional[DataSourceValidator], optional):\n        Object that manages validation, whether each data_source_id in LDM corresponds\n        to existing data source. Defaults to None.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"], ["validator: 'Optional[DataSourceValidator]' = None", "Optional[DataSourceValidator]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}, {"arg_name": "validator", "default": null, "is_optional": true, "type_name": "Optional[DataSourceValidator]", "description": "Object that manages validation, whether each data_source_id in LDM corresponds\nto existing data source. Defaults to None."}], "long_description": "methods to load and set layouts stored using store_declarative_ldm.", "short_description": "This method combines load_declarative_ldm and put_declarative_ldm", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_analytics_model": {"docstring": "Loads the declarative analytics model, which was stored using store_declarative_analytics_model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeAnalytics:\n        Object Containing declarative Analytical Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeAnalytics"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the declarative analytics model, which was stored using store_declarative_analytics_model.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model", "return_name": null}}, "kind": "function"}, "load_declarative_ldm": {"docstring": "Load declarative Logical Data Model, which was stored using store_declarative_workspaces\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative Logical Data Model, which was stored using store_declarative_workspaces", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model", "return_name": null}}, "kind": "function"}, "load_ldm_from_disk": {"docstring": "Loads the Logical Data Model, which was stored using store_ldm_to_disk.\n\nArgs:\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeModel:\n        Object Containing declarative Logical Data Model.", "signature": {"params": [["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeModel"}, "docstring_parsed": {"params": [{"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads the Logical Data Model, which was stored using store_ldm_to_disk.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model.", "return_name": null}}, "kind": "function"}, "put_declarative_analytics_model": {"docstring": "Sets the declarative analytics model for a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    analytics_model (CatalogDeclarativeAnalytics):\n        Object Containing declarative Analytical Model\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["analytics_model: 'CatalogDeclarativeAnalytics'", "CatalogDeclarativeAnalytics"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "analytics_model", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeAnalytics", "description": "Object Containing declarative Analytical Model"}], "long_description": null, "short_description": "Sets the declarative analytics model for a given workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_ldm": {"docstring": "Set declarative logical data model for a given workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    ldm (CatalogDeclarativeModel):\n        Object Containing declarative Logical Data Model\n    validator (Optional[DataSourceValidator], optional):\n        Object that manages validation, whether each data_source_id in LDM corresponds\n        to existing data source. Defaults to None.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["ldm: 'CatalogDeclarativeModel'", "CatalogDeclarativeModel"], ["validator: 'Optional[DataSourceValidator]' = None", "Optional[DataSourceValidator]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "ldm", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeModel", "description": "Object Containing declarative Logical Data Model"}, {"arg_name": "validator", "default": null, "is_optional": true, "type_name": "Optional[DataSourceValidator]", "description": "Object that manages validation, whether each data_source_id in LDM corresponds\nto existing data source. Defaults to None."}], "long_description": null, "short_description": "Set declarative logical data model for a given workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_analytics_model_to_disk": {"docstring": "Store analytics model for a given workspace in directory hierarchy.This method does not tie the declarative\n    analytics model to the workspace and organization, thus it is recommended for migration between workspaces.\n    If you want to migrate analytics model between workspaces, use store_analytics_model_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "analytics model to the workspace and organization, thus it is recommended for migration between workspaces.\n    If you want to migrate analytics model between workspaces, use store_analytics_model_to_disk.", "short_description": "Store analytics model for a given workspace in directory hierarchy.This method does not tie the declarative", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_analytics_model": {"docstring": "Store declarative analytics model for a given workspace in directory hierarchy.\n    This method ties the declarative analytics model to the workspace and organization, thus it is\n    recommended for backups. If you want to move declarative analytics model between workspaces or\n    organizations, use store_analytics_model_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method ties the declarative analytics model to the workspace and organization, thus it is\n    recommended for backups. If you want to move declarative analytics model between workspaces or\n    organizations, use store_analytics_model_to_disk.", "short_description": "Store declarative analytics model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_ldm": {"docstring": "Store declarative logical data model for a given workspace in directory hierarchy.\n    This method ties the LDM to the workspace and organization, thus it is recommended\n    for backups. If you want to move LDM between workspaces or organizations, use store_ldm_to_disk.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method ties the LDM to the workspace and organization, thus it is recommended\n    for backups. If you want to move LDM between workspaces or organizations, use store_ldm_to_disk.", "short_description": "Store declarative logical data model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_ldm_to_disk": {"docstring": "Store declarative logical data model for a given workspace in directory hierarchy.\n    This method does not tie the LDM to the workspace and organization, thus it is recommended\n    for migration between organizations. If you want to backup LDM use store_declarative_ldm.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method does not tie the LDM to the workspace and organization, thus it is recommended\n    for migration between organizations. If you want to backup LDM use store_declarative_ldm.", "short_description": "Store declarative logical data model for a given workspace in directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "CatalogWorkspaceService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "clone_workspace": {"docstring": "Clone workspace from existing workspace.\n\nClones complete workspace content - LDM, ADM, permissions.\n\nIf the target workspace already exists, it's content is overwritten.\nThis can be useful when testing changes in the clone\n  - once you are satisfied, you can clone it back to the origin workspace.\nFor the safety, you have to enforce this behavior by the dedicated input argument `overwrite_existing`.\n\nBeware of workspace data filters - after the clone you have to set WDF value for the new workspace.\n\nArgs:\n    source_workspace_id (str):\n        Source workspace ID, from which we wanna create a clone\n    target_workspace_id (str):\n        Target workspace ID, where we wanna clone the source workspace\n        Optional, if empty, we generate <source_workspace_id>_clone\n    target_workspace_name (str):\n        Target workspace name\n        Optional, if empty, we generate <source_workspace_name> (Clone)\n    overwrite_existing (bool):\n        Overwrite existing workspace.\n    data_source_mapping (dict):\n        Optional, allows users to map LDM to different data source ID\n    upper_case (bool):\n        Optional, allows users to change the case of all physical object IDs (table names, columns names)\n        True changes it to upper-case, False to lower-case, None(default) is noop\n        Useful when migrating to Snowflake, which is the only DB with upper-case default.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["source_workspace_id: 'str'", "str"], ["target_workspace_id: 'Optional[str]' = None", "Optional[str]"], ["target_workspace_name: 'Optional[str]' = None", "Optional[str]"], ["overwrite_existing: 'Optional[bool]' = None", "Optional[bool]"], ["data_source_mapping: 'Optional[dict]' = None", "Optional[dict]"], ["upper_case: 'Optional[bool]' = True", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "source_workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Source workspace ID, from which we wanna create a clone"}, {"arg_name": "target_workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Target workspace ID, where we wanna clone the source workspace\nOptional, if empty, we generate <source_workspace_id>_clone"}, {"arg_name": "target_workspace_name", "default": null, "is_optional": false, "type_name": "str", "description": "Target workspace name\nOptional, if empty, we generate <source_workspace_name> (Clone)"}, {"arg_name": "overwrite_existing", "default": null, "is_optional": false, "type_name": "bool", "description": "Overwrite existing workspace."}, {"arg_name": "data_source_mapping", "default": null, "is_optional": false, "type_name": "dict", "description": "Optional, allows users to map LDM to different data source ID"}, {"arg_name": "upper_case", "default": null, "is_optional": false, "type_name": "bool", "description": "Optional, allows users to change the case of all physical object IDs (table names, columns names)\nTrue changes it to upper-case, False to lower-case, None(default) is noop\nUseful when migrating to Snowflake, which is the only DB with upper-case default."}], "long_description": "Clones complete workspace content - LDM, ADM, permissions.\n\nIf the target workspace already exists, it's content is overwritten.\nThis can be useful when testing changes in the clone\n  - once you are satisfied, you can clone it back to the origin workspace.\nFor the safety, you have to enforce this behavior by the dedicated input argument `overwrite_existing`.\n\nBeware of workspace data filters - after the clone you have to set WDF value for the new workspace.", "short_description": "Clone workspace from existing workspace.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "create_or_update": {"docstring": "Create a new workspace or overwrite an existing workspace with the same id.\n\nArgs:\n    workspace (CatalogWorkspace):\n        Catalog Workspace object to be created or updated.\n\nReturns:\n    None\n\nRaises:\n    ValueError: Workspace parent can not be updated.", "signature": {"params": [["self", "None"], ["workspace: 'CatalogWorkspace'", "CatalogWorkspace"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogWorkspace", "description": "Catalog Workspace object to be created or updated."}], "long_description": null, "short_description": "Create a new workspace or overwrite an existing workspace with the same id.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "delete_workspace": {"docstring": "Delete a workspace with all its content - logical model and analytics model.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    None\n\nRaises:\n    ValueError:\n        Workspace does not exist.\n    ValueError:\n        Workspace is a parent of a workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Delete a workspace with all its content - logical model and analytics model.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "get_declarative_workspace": {"docstring": "Retrieve a workspace layout.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogDeclarativeWorkspaceModel:\n        Object Containing declarative Logical Data Model and declarative Analytical Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogDeclarativeWorkspaceModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Retrieve a workspace layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model.", "return_name": null}}, "kind": "function"}, "get_declarative_workspace_data_filters": {"docstring": "Retrieve a workspace data filers layout.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeWorkspaceDataFilters:\n        Object containing List of declarative workspace data filters.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeWorkspaceDataFilters"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Retrieve a workspace data filers layout.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters.", "return_name": null}}, "kind": "function"}, "get_declarative_workspaces": {"docstring": "Get all workspaces in the current organization in a declarative form.\n\nArgs:\n    None\n\nReturns:\n    CatalogDeclarativeWorkspaces:\n        Declarative Workspaces object including all the workspaces for given organization.", "signature": {"params": [["self", "None"]], "return_annotation": "CatalogDeclarativeWorkspaces"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Get all workspaces in the current organization in a declarative form.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces object including all the workspaces for given organization.", "return_name": null}}, "kind": "function"}, "get_organization": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "CatalogOrganization"}, "docstring_parsed": null, "kind": "function"}, "get_workspace": {"docstring": "Get an individual workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n\nReturns:\n    CatalogWorkspace:\n        Catalog workspace object containing structure of the workspace.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "CatalogWorkspace"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": null, "short_description": "Get an individual workspace.", "examples": "[]", "returns": {"type_name": "CatalogWorkspace", "description": "Catalog workspace object containing structure of the workspace.", "return_name": null}}, "kind": "function"}, "layout_organization_folder": {"docstring": null, "signature": {"params": [["self", "None"], ["layout_root_path: 'Path'", "Path"]], "return_annotation": "Path"}, "docstring_parsed": null, "kind": "function"}, "list_workspaces": {"docstring": "Returns a list of all workspaces in current organization\n\nArgs:\n    List[CatalogWorkspace]\n\nReturns:\n    List[CatalogWorkspace]:\n        List of workspaces in the current organization.", "signature": {"params": [["self", "None"]], "return_annotation": "List[CatalogWorkspace]"}, "docstring_parsed": null, "kind": "function"}, "load_and_put_declarative_workspace": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspace`.\n\nThis method combines `load_declarative_workspace` and `put_declarative_workspace` methods\nto load and set layouts stored using `store_declarative_workspace`.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspace` and `put_declarative_workspace` methods\nto load and set layouts stored using `store_declarative_workspace`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspace`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_workspace_data_filters": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspace_data_filters`.\n\nThis method combines `load_declarative_workspace_data_filters` and `put_declarative_workspace_data_filters`\nmethods to load and set layouts stored using `store_declarative_workspace_data_filters`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspace_data_filters` and `put_declarative_workspace_data_filters`\nmethods to load and set layouts stored using `store_declarative_workspace_data_filters`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspace_data_filters`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_and_put_declarative_workspaces": {"docstring": "Loads and sets the layouts stored using `store_declarative_workspaces`.\n\nThis method combines `load_declarative_workspaces` and `put_declarative_workspaces`\nmethods to load and set layouts stored using `store_declarative_workspaces`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": "This method combines `load_declarative_workspaces` and `put_declarative_workspaces`\nmethods to load and set layouts stored using `store_declarative_workspaces`.", "short_description": "Loads and sets the layouts stored using `store_declarative_workspaces`.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "load_declarative_workspace": {"docstring": "Load declarative workspaces layout, which was stored using `store_declarative_workspace`.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeWorkspaceModel:\n        Object Containing declarative Logical Data Model and declarative Analytical Model.", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaceModel"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative workspaces layout, which was stored using `store_declarative_workspace`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model.", "return_name": null}}, "kind": "function"}, "load_declarative_workspace_data_filters": {"docstring": "Loads workspace data filters layout, which was stored using `store_declarative_workspace_data_filters`.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    CatalogDeclarativeWorkspaceDataFilters:\n        Object containing List of declarative workspace data filters.", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaceDataFilters"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Loads workspace data filters layout, which was stored using `store_declarative_workspace_data_filters`.", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters.", "return_name": null}}, "kind": "function"}, "load_declarative_workspaces": {"docstring": "Load declarative workspaces layout, which was stored using `store_declarative_workspaces`\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\nReturns:\n    CatalogDeclarativeWorkspaces:\n        Declarative Workspaces Object", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "CatalogDeclarativeWorkspaces"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Load declarative workspaces layout, which was stored using `store_declarative_workspaces`", "examples": "[]", "returns": {"type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces Object", "return_name": null}}, "kind": "function"}, "put_declarative_workspace": {"docstring": "Set a workspace layout.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    workspace (CatalogDeclarativeWorkspaceModel):\n        Object Containing declarative Logical Data Model and declarative Analytical Model.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["workspace: 'CatalogDeclarativeWorkspaceModel'", "CatalogDeclarativeWorkspaceModel"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaceModel", "description": "Object Containing declarative Logical Data Model and declarative Analytical Model."}], "long_description": null, "short_description": "Set a workspace layout.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_workspace_data_filters": {"docstring": "Set workspace data filters layout.\n\nArgs:\n    workspace_data_filters (CatalogDeclarativeWorkspaceDataFilters):\n        Object containing List of declarative workspace data filters.\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace_data_filters: 'CatalogDeclarativeWorkspaceDataFilters'", "CatalogDeclarativeWorkspaceDataFilters"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_data_filters", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaceDataFilters", "description": "Object containing List of declarative workspace data filters."}], "long_description": null, "short_description": "Set workspace data filters layout.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "put_declarative_workspaces": {"docstring": "Set layout of all workspaces and their hierarchy. Parameter is in declarative form.\n\nArgs:\n    workspace (CatalogDeclarativeWorkspaces):\n        Declarative Workspaces object including all the workspaces for given organization.\n\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["workspace: 'CatalogDeclarativeWorkspaces'", "CatalogDeclarativeWorkspaces"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace", "default": null, "is_optional": false, "type_name": "CatalogDeclarativeWorkspaces", "description": "Declarative Workspaces object including all the workspaces for given organization."}], "long_description": null, "short_description": "Set layout of all workspaces and their hierarchy. Parameter is in declarative form.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_workspace": {"docstring": "Store workspace layout in a directory hierarchy.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store workspace layout in a directory hierarchy.", "examples": "[]", "returns": null}, "kind": "function"}, "store_declarative_workspace_data_filters": {"docstring": "Store workspace data filters layout in a directory hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Store workspace data filters layout in a directory hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}, "store_declarative_workspaces": {"docstring": "Stores declarative workspaces in a given path, as folder hierarchy.\n\nArgs:\n    layout_root_path (Path, optional):\n        Path to the root of the layout directory. Defaults to Path.cwd().\n\nReturns:\n    None", "signature": {"params": [["self", "None"], ["layout_root_path: 'Path' = PosixPath('/home/basta/Documents/GD/gooddata-python-sdk/scripts/docs')", "Path"]], "return_annotation": "None"}, "docstring_parsed": {"params": [{"arg_name": "layout_root_path", "default": "Path.cwd()", "is_optional": true, "type_name": "Path", "description": "Path to the root of the layout directory. Defaults to Path.cwd()."}], "long_description": null, "short_description": "Stores declarative workspaces in a given path, as folder hierarchy.", "examples": "[]", "returns": {"type_name": null, "description": "None", "return_name": null}}, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "ComputeService": {"docstring": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute\nis encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "for_exec_def": {"docstring": "Starts computation in GoodData.CN workspace, using the provided execution definition.\n\n:param workspace_id: workspace identifier\n:param exec_def: execution definition - this prescribes what to calculate, how to place labels and metric values\n into dimensions", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"]], "return_annotation": "Execution"}, "docstring_parsed": null, "kind": "function"}, "retrieve_result_cache_metadata": {"docstring": "Gets execution result's metadata from GoodData.CN workspace for given execution result ID.\n\n:param workspace_id: workspace identifier\n:param result_id: execution result ID\n:return: execution result's metadata", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["result_id: 'str'", "str"]], "return_annotation": "ResultCacheMetadata"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "is encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "short_description": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute", "examples": "[]", "returns": null}, "kind": "class"}, "InsightService": {"docstring": "Insight Service allows retrieval of insights from a GD.CN workspace. The insights are returned as instances of\nInsight which allows convenient introspection and necessary functions to convert the insight into a form where it\ncan be sent for computation.\n\nNote: the insights are created using GD.CN Analytical Designer or using GoodData.UI SDK. They are stored as\nvisualization objects with a free-form body. This body is specific for AD & SDK.\nThe Insight wrapper exists to take care of these discrepancies.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "get_insight": {"docstring": "Gets a single insight from a workspace.\n\nArgs:\n    workspace_id (str):\n        Workspace identification string e.g. \"demo\"\n    insight_id (str):\n        Insight identifier string e.g. \"bikes\"\n\nReturns:\n    Insight:\n        A single Insight object contains side loaded metadata about the entities it references", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["insight_id: 'str'", "str"]], "return_annotation": "Insight"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}, {"arg_name": "insight_id", "default": null, "is_optional": false, "type_name": "str", "description": "Insight identifier string e.g. \"bikes\""}], "long_description": null, "short_description": "Gets a single insight from a workspace.", "examples": "[]", "returns": {"type_name": "Insight", "description": "A single Insight object contains side loaded metadata about the entities it references", "return_name": null}}, "kind": "function"}, "get_insights": {"docstring": "Gets all insights for a workspace. The insights will contain side loaded metadata for all execution entities\nthat they reference.\n\nArgs:\n     workspace_id (str):\n        Workspace identification string e.g. \"demo\"\nReturns:\n     list[Insight]:\n        All available insights, each insight will contain side loaded metadata about the entities it references", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"]], "return_annotation": "list[Insight]"}, "docstring_parsed": {"params": [{"arg_name": "workspace_id", "default": null, "is_optional": false, "type_name": "str", "description": "Workspace identification string e.g. \"demo\""}], "long_description": "that they reference.", "short_description": "Gets all insights for a workspace. The insights will contain side loaded metadata for all execution entities", "examples": "[]", "returns": {"type_name": "list[Insight]", "description": "All available insights, each insight will contain side loaded metadata about the entities it references", "return_name": null}}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "Insight which allows convenient introspection and necessary functions to convert the insight into a form where it\ncan be sent for computation.\n\nNote: the insights are created using GD.CN Analytical Designer or using GoodData.UI SDK. They are stored as\nvisualization objects with a free-form body. This body is specific for AD & SDK.\nThe Insight wrapper exists to take care of these discrepancies.", "short_description": "Insight Service allows retrieval of insights from a GD.CN workspace. The insights are returned as instances of", "examples": "[]", "returns": null}, "kind": "class"}, "SupportService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "wait_till_available": {"docstring": "Wait till GD.CN service is available. When timeout is:\n\n  - > 0 exception is raised after given number of seconds.\n  - = 0 exception is raised whe service is not available immediately\n  - < 0 no timeout\n\nMethod propagates is_available exceptions.\n\n:param timeout: seconds to wait to service to be available (see method description for details)\n:param sleep_time: seconds to wait between GD.CN availability tests", "signature": {"params": [["self", "None"], ["timeout: 'int'", "int"], ["sleep_time: 'float' = 2.0", "float"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "TableService": {"docstring": "The TableService provides a convenient way to drive computations and access the results in a tabular fashion.\n\nCompared to the ComputeService, with this one here you do not have to worry about the layout of the result and\ndo not have to have to work with execution response, access the data using paging.\n\nThe ExecutionTable returned by the TableService allows you to iterate over the rows of the calculated data.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "for_insight": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["insight: 'Insight'", "Insight"]], "return_annotation": "ExecutionTable"}, "docstring_parsed": null, "kind": "function"}, "for_items": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["items: 'list[Union[Attribute, Metric]]'", "list[Union[Attribute, Metric]]"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "ExecutionTable"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "Compared to the ComputeService, with this one here you do not have to worry about the layout of the result and\ndo not have to have to work with execution response, access the data using paging.\n\nThe ExecutionTable returned by the TableService allows you to iterate over the rows of the calculated data.", "short_description": "The TableService provides a convenient way to drive computations and access the results in a tabular fashion.", "examples": "[]", "returns": null}, "kind": "class"}, "GoodDataSdk": {"docstring": "Top-level class that wraps all the functionality together.", "functions": {"__init__": {"docstring": "Take instance of GoodDataApiClient and return new GoodDataSdk instance.\n\nUseful when customized GoodDataApiClient is needed. Usually users should use\n`GoodDataSdk.create` classmethod.", "signature": {"params": [["self", "None"], ["client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "Useful when customized GoodDataApiClient is needed. Usually users should use\n`GoodDataSdk.create` classmethod.", "short_description": "Take instance of GoodDataApiClient and return new GoodDataSdk instance.", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Top-level class that wraps all the functionality together.", "examples": "[]", "returns": null}, "kind": "class"}}, "support": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "SupportService": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "wait_till_available": {"docstring": "Wait till GD.CN service is available. When timeout is:\n\n  - > 0 exception is raised after given number of seconds.\n  - = 0 exception is raised whe service is not available immediately\n  - < 0 no timeout\n\nMethod propagates is_available exceptions.\n\n:param timeout: seconds to wait to service to be available (see method description for details)\n:param sleep_time: seconds to wait between GD.CN availability tests", "signature": {"params": [["self", "None"], ["timeout: 'int'", "int"], ["sleep_time: 'float' = 2.0", "float"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}, "table": {"kind": "module", "GoodDataApiClient": {"docstring": "Provide access to metadata and afm services.", "functions": {"__init__": {"docstring": "Take url, token for connecting to GoodData.CN.\n\nHTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "signature": {"params": [["self", "None"], ["host: 'str'", "str"], ["token: 'str'", "str"], ["custom_headers: 'Optional[dict[str, str]]' = None", "Optional[dict[str, str]]"], ["extra_user_agent: 'Optional[str]' = None", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": "HTTP requests made by this class may be enriched by `custom_headers` dict\ncontaining header names as keys and header values as dict values.\n\n`extra_user_agent` is optional string to be added to default http User-Agent\nheader. This takes precedence over custom_headers setting.", "short_description": "Take url, token for connecting to GoodData.CN.", "examples": "[]", "returns": null}, "kind": "function"}, "_set_default_headers": {"docstring": null, "signature": {"params": [["headers: 'dict'", "dict"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Provide access to metadata and afm services.", "examples": "[]", "returns": null}, "kind": "class"}, "Attribute": {"docstring": null, "functions": {"__init__": {"docstring": "Creates new attribute that can be used to slice or dice metric values during computation.\n\n:param local_id: identifier of the attribute within the execution\n:param label: identifier of the label to use for slicing or dicing; specified either as ObjId or str containing\n       the label id\n:param show_all_values: request show all values functionality for a given attribute", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"], ["label: 'Union[ObjId, str]'", "Union[ObjId, str]"], ["show_all_values: 'Optional[bool]' = None", "Optional[bool]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AttributeItem"}, "docstring_parsed": null, "kind": "function"}, "has_same_label": {"docstring": null, "signature": {"params": [["self", "None"], ["other: 'ExecModelEntity'", "ExecModelEntity"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionDefinition": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["attributes: 'Optional[list[Attribute]]'", "Optional[list[Attribute]]"], ["metrics: 'Optional[list[Metric]]'", "Optional[list[Metric]]"], ["filters: 'Optional[list[Filter]]'", "Optional[list[Filter]]"], ["dimensions: 'list[Optional[list[str]]]'", "list[Optional[list[str]]]"], ["totals: 'Optional[list[TotalDefinition]]' = None", "Optional[list[TotalDefinition]]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_create_dimensions": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "list[models.Dimension]"}, "docstring_parsed": null, "kind": "function"}, "_create_result_spec": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.ResultSpec"}, "docstring_parsed": null, "kind": "function"}, "_create_totals": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Optional[list[models.Total]]"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "models.AfmExecution"}, "docstring_parsed": null, "kind": "function"}, "has_attributes": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_filters": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "has_metrics": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_one_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "is_two_dim": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionResponse": {"docstring": "An envelope class holding execution related classes:\n    - exec_def              ExecutionDefinition\n    - bare_exec_response    BareExecutionResponse", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"], ["response: 'models.AfmExecutionResponse'", "models.AfmExecutionResponse"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "read_result": {"docstring": null, "signature": {"params": [["self", "None"], ["limit: 'Union[int, list[int]]'", "Union[int, list[int]]"], ["offset: 'Union[None, int, list[int]]' = None", "Union[None, int, list[int]]"]], "return_annotation": "ExecutionResult"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "- exec_def              ExecutionDefinition\n- bare_exec_response    BareExecutionResponse", "short_description": "An envelope class holding execution related classes:", "examples": "[]", "returns": null}, "kind": "class"}, "ExecutionResult": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["result: 'models.ExecutionResult'", "models.ExecutionResult"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "check_dimensions_size_limits": {"docstring": null, "signature": {"params": [["self", "None"], ["result_size_dimensions_limits: 'ResultSizeDimensions'", "ResultSizeDimensions"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "get_all_header_values": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int'", "int"], ["header_idx: 'int'", "int"]], "return_annotation": "list[str]"}, "docstring_parsed": null, "kind": "function"}, "get_all_headers": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int'", "int"]], "return_annotation": "list[list[Any]]"}, "docstring_parsed": null, "kind": "function"}, "is_complete": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int' = 0", "int"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "next_page_start": {"docstring": null, "signature": {"params": [["self", "None"], ["dim: 'int' = 0", "int"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Filter": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "is_noop": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "Metric": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["local_id: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "_body_as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "OpenApiModel"}, "docstring_parsed": null, "kind": "function"}, "as_api_model": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.MeasureItem"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ComputeService": {"docstring": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute\nis encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "for_exec_def": {"docstring": "Starts computation in GoodData.CN workspace, using the provided execution definition.\n\n:param workspace_id: workspace identifier\n:param exec_def: execution definition - this prescribes what to calculate, how to place labels and metric values\n into dimensions", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["exec_def: 'ExecutionDefinition'", "ExecutionDefinition"]], "return_annotation": "Execution"}, "docstring_parsed": null, "kind": "function"}, "retrieve_result_cache_metadata": {"docstring": "Gets execution result's metadata from GoodData.CN workspace for given execution result ID.\n\n:param workspace_id: workspace identifier\n:param result_id: execution result ID\n:return: execution result's metadata", "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["result_id: 'str'", "str"]], "return_annotation": "ResultCacheMetadata"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "is encapsulated by the ExecutionDefinition which consists of attributes, metrics, filters and definition of\ndimensions that influence how to organize the data in the result.", "short_description": "Compute service drives computation of analytics for a GoodData.CN workspaces. The prescription of what to compute", "examples": "[]", "returns": null}, "kind": "class"}, "Insight": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["from_vis_obj: 'dict[str, Any]'", "dict[str, Any]"], ["side_loads: 'Optional[SideLoads]' = None", "Optional[SideLoads]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "get_metadata": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Optional[Any]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "ExecutionTable": {"docstring": "Represents execution result as a table. This is a convenience wrapper for executions constructed using\nthe following convention:\n\n-  all attributes are in the first dimension\n-  all metrics are in the second dimension\n-  if the execution is attribute- or metric-less, then there is always single dimension\n\nThe mapping to rows is then as follows:\n\n-  both attributes + metrics are on the execution = iteration over first dimension; as many rows as total records\n   in the first dimension (paging.total[0])\n-  just attributes = iteration over just headers in first dimension; as many rows as total records in the\n   first dimension (paging.total[0])\n-  just metrics = single row, all metrics values returned in one row", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["response: 'ExecutionResponse'", "ExecutionResponse"], ["first_page: 'ExecutionResult'", "ExecutionResult"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__len__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "_read_all_metrics_in_one_row": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Generator[dict[str, Any], None, None]"}, "docstring_parsed": null, "kind": "function"}, "_read_all_paged": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "Generator[dict[str, Any], None, None]"}, "docstring_parsed": null, "kind": "function"}, "_read_next_page": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "bool"}, "docstring_parsed": null, "kind": "function"}, "read_all": {"docstring": "Returns a generator that will be yielding execution result as rows. Each row is a dict() mapping column\nidentifier to value of that column.\n\n:return: generator yielding dict() representing rows of the table", "signature": {"params": [["self", "None"]], "return_annotation": "Generator[dict[str, Any], None, None]"}, "docstring_parsed": {"params": [], "long_description": "identifier to value of that column.\n\n:return: generator yielding dict() representing rows of the table", "short_description": "Returns a generator that will be yielding execution result as rows. Each row is a dict() mapping column", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "the following convention:\n\n-  all attributes are in the first dimension\n-  all metrics are in the second dimension\n-  if the execution is attribute- or metric-less, then there is always single dimension\n\nThe mapping to rows is then as follows:\n\n-  both attributes + metrics are on the execution = iteration over first dimension; as many rows as total records\n   in the first dimension (paging.total[0])\n-  just attributes = iteration over just headers in first dimension; as many rows as total records in the\n   first dimension (paging.total[0])\n-  just metrics = single row, all metrics values returned in one row", "short_description": "Represents execution result as a table. This is a convenience wrapper for executions constructed using", "examples": "[]", "returns": null}, "kind": "class"}, "TableService": {"docstring": "The TableService provides a convenient way to drive computations and access the results in a tabular fashion.\n\nCompared to the ComputeService, with this one here you do not have to worry about the layout of the result and\ndo not have to have to work with execution response, access the data using paging.\n\nThe ExecutionTable returned by the TableService allows you to iterate over the rows of the calculated data.", "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["api_client: 'GoodDataApiClient'", "GoodDataApiClient"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "for_insight": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["insight: 'Insight'", "Insight"]], "return_annotation": "ExecutionTable"}, "docstring_parsed": null, "kind": "function"}, "for_items": {"docstring": null, "signature": {"params": [["self", "None"], ["workspace_id: 'str'", "str"], ["items: 'list[Union[Attribute, Metric]]'", "list[Union[Attribute, Metric]]"], ["filters: 'Optional[list[Filter]]' = None", "Optional[list[Filter]]"]], "return_annotation": "ExecutionTable"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "Compared to the ComputeService, with this one here you do not have to worry about the layout of the result and\ndo not have to have to work with execution response, access the data using paging.\n\nThe ExecutionTable returned by the TableService allows you to iterate over the rows of the calculated data.", "short_description": "The TableService provides a convenient way to drive computations and access the results in a tabular fashion.", "examples": "[]", "returns": null}, "kind": "class"}}, "type_converter": {"kind": "module", "Converter": {"docstring": "Base Converter class. It defines Converter API and implements support for external type conversion.\nExternal type conversion provides ability to plug-in conversion function to Converter", "functions": {"db_data_type": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "to_external_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "External type conversion provides ability to plug-in conversion function to Converter", "short_description": "Base Converter class. It defines Converter API and implements support for external type conversion.", "examples": "[]", "returns": null}, "kind": "class"}, "StringConverter": {"docstring": "Base Converter class. It defines Converter API and implements support for external type conversion.\nExternal type conversion provides ability to plug-in conversion function to Converter", "functions": {"db_data_type": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "to_external_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "External type conversion provides ability to plug-in conversion function to Converter", "short_description": "Base Converter class. It defines Converter API and implements support for external type conversion.", "examples": "[]", "returns": null}, "kind": "class"}, "IntegerConverter": {"docstring": "Base Converter class. It defines Converter API and implements support for external type conversion.\nExternal type conversion provides ability to plug-in conversion function to Converter", "functions": {"db_data_type": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "to_external_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "External type conversion provides ability to plug-in conversion function to Converter", "short_description": "Base Converter class. It defines Converter API and implements support for external type conversion.", "examples": "[]", "returns": null}, "kind": "class"}, "DateConverter": {"docstring": "Base Converter class. It defines Converter API and implements support for external type conversion.\nExternal type conversion provides ability to plug-in conversion function to Converter", "functions": {"_to_components": {"docstring": "Add first month and first date to incomplete iso date string.\n\n>>> assert DateConverter._to_components(\"2021-01\") == [2021, 1, 1]\n>>> assert DateConverter._to_components(\"1992\") == [1992, 1, 1]", "signature": {"params": [["value: 'str'", "str"]], "return_annotation": "list[int]"}, "docstring_parsed": {"params": [], "long_description": ">>> assert DateConverter._to_components(\"2021-01\") == [2021, 1, 1]\n>>> assert DateConverter._to_components(\"1992\") == [1992, 1, 1]", "short_description": "Add first month and first date to incomplete iso date string.", "examples": "[]", "returns": null}, "kind": "function"}, "db_data_type": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "to_external_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "date"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "External type conversion provides ability to plug-in conversion function to Converter", "short_description": "Base Converter class. It defines Converter API and implements support for external type conversion.", "examples": "[]", "returns": null}, "kind": "class"}, "DatetimeConverter": {"docstring": "Base Converter class. It defines Converter API and implements support for external type conversion.\nExternal type conversion provides ability to plug-in conversion function to Converter", "functions": {"_sanitize_timestamp": {"docstring": "Append minutes to incomplete datetime string.\n\n>>>assert DatetimeConverter._sanitize_timestamp(\"2021-01-01 02\") == \"2021-01-01 02:00\"\n>>>assert DatetimeConverter._sanitize_timestamp(\"2021-01-01 12:34\") == \"2021-01-01 12:34\"", "signature": {"params": [["value: 'str'", "str"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ">>>assert DatetimeConverter._sanitize_timestamp(\"2021-01-01 02\") == \"2021-01-01 02:00\"\n>>>assert DatetimeConverter._sanitize_timestamp(\"2021-01-01 12:34\") == \"2021-01-01 12:34\"", "short_description": "Append minutes to incomplete datetime string.", "examples": "[]", "returns": null}, "kind": "function"}, "db_data_type": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": null, "kind": "function"}, "to_external_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "Any"}, "docstring_parsed": null, "kind": "function"}, "to_type": {"docstring": null, "signature": {"params": [["self", "None"], ["value: 'str'", "str"]], "return_annotation": "datetime"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": "External type conversion provides ability to plug-in conversion function to Converter", "short_description": "Base Converter class. It defines Converter API and implements support for external type conversion.", "examples": "[]", "returns": null}, "kind": "class"}, "TypeConverterRegistry": {"docstring": "Class stores converters for given type with ability to distinguish converters based on sub-type granularity.", "functions": {"__init__": {"docstring": "Initialize instance with type for which instance is going to be responsible\n\n:param type_name: type name", "signature": {"params": [["self", "None"], ["type_name: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_get_default_converter": {"docstring": "Check if default converter is registered. If yes, return it. Otherwise raise ValueError exception.\n\n:return: default Converter instance", "signature": {"params": [["self", "None"]], "return_annotation": "Converter"}, "docstring_parsed": {"params": [], "long_description": ":return: default Converter instance", "short_description": "Check if default converter is registered. If yes, return it. Otherwise raise ValueError exception.", "examples": "[]", "returns": null}, "kind": "function"}, "_register_default": {"docstring": "Register default converter instance for the type. Default type can be registered only once.\n\n:param converter: converter instance", "signature": {"params": [["self", "None"], ["converter: 'Converter'", "Converter"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "_register_with_sub_type": {"docstring": "Register converter instance for given sub-type granularity.\n\n:param converter: converter instance\n:param sub_type: sub-type name", "signature": {"params": [["self", "None"], ["converter: 'Converter'", "Converter"], ["sub_type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "converter": {"docstring": "Find and return converter instance for a given sub-type. Default converter instance is returned\nif the sub-type is not found or not provided. When a default converter is not registered, ValueError\nexception is raised.\n\n:param sub_type: sub-type name\n:return: Converter instance", "signature": {"params": [["self", "None"], ["sub_type: 'Optional[str]'", "Optional[str]"]], "return_annotation": "Converter"}, "docstring_parsed": null, "kind": "function"}, "register": {"docstring": "Register converter instance for given sub-type (granularity). If sub-type is not specified, converter is\nregistered as the default one for the whole type. Default converter can be registered only once.\n\n:param converter: converter instance\n:param sub_type: sub-type name", "signature": {"params": [["self", "None"], ["converter: 'Converter'", "Converter"], ["sub_type: 'Optional[str]'", "Optional[str]"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Class stores converters for given type with ability to distinguish converters based on sub-type granularity.", "examples": "[]", "returns": null}, "kind": "class"}, "ConverterRegistryStore": {"docstring": "Class store TypeConverterRegistry instances for each registered type. It provides interface to register converters\nwith type and sub-type and to find converter.\nThe class is not meant to be used directly but as base class for child classes", "functions": {}, "docstring_parsed": {"params": [], "long_description": "with type and sub-type and to find converter.\nThe class is not meant to be used directly but as base class for child classes", "short_description": "Class store TypeConverterRegistry instances for each registered type. It provides interface to register converters", "examples": "[]", "returns": null}, "kind": "class"}, "AttributeConverterStore": {"docstring": "Store for conversion of attributes", "functions": {}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Store for conversion of attributes", "examples": "[]", "returns": null}, "kind": "class"}, "DBTypeConverterStore": {"docstring": "Store for conversion of database types", "functions": {}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Store for conversion of database types", "examples": "[]", "returns": null}, "kind": "class"}}, "utils": {"kind": "module", "ObjId": {"docstring": null, "functions": {"__eq__": {"docstring": "Return self==value.", "signature": {"params": [["self", "None"], ["other: 'object'", "object"]], "return_annotation": "bool"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self==value.", "examples": "[]", "returns": null}, "kind": "function"}, "__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["id: 'str'", "str"], ["type: 'str'", "str"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "String representation is used to transform ObjId to string key.\n\n:return: string in format <type>/<id>\n:rtype: str", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": ":return: string in format <type>/<id>\n:rtype: str", "short_description": "String representation is used to transform ObjId to string key.", "examples": "[]", "returns": null}, "kind": "function"}, "as_afm_id": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifier"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_attribute": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierAttribute"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_dataset": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierDataset"}, "docstring_parsed": null, "kind": "function"}, "as_afm_id_label": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmObjectIdentifierLabel"}, "docstring_parsed": null, "kind": "function"}, "as_identifier": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "afm_models.AfmIdentifier"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "AllPagedEntities": {"docstring": "AllPagedEntities(data, included)", "functions": {"__getnewargs__": {"docstring": "Return self as a plain tuple.  Used by copy and pickle.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return self as a plain tuple.  Used by copy and pickle.", "examples": "[]", "returns": null}, "kind": "function"}, "__new__": {"docstring": "Create new instance of AllPagedEntities(data, included)", "signature": {"params": [["_cls", "None"], ["data: ForwardRef('list[Any]')", "ForwardRef('list[Any]')"], ["included: ForwardRef('list[Any]')", "ForwardRef('list[Any]')"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Create new instance of AllPagedEntities(data, included)", "examples": "[]", "returns": null}, "kind": "function"}, "__repr__": {"docstring": "Return a nicely formatted representation string", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a nicely formatted representation string", "examples": "[]", "returns": null}, "kind": "function"}, "_asdict": {"docstring": "Return a new dict which maps field names to their values.", "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a new dict which maps field names to their values.", "examples": "[]", "returns": null}, "kind": "function"}, "_replace": {"docstring": "Return a new AllPagedEntities object replacing specified fields with new values", "signature": {"params": [["self", "None"], ["**kwds", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return a new AllPagedEntities object replacing specified fields with new values", "examples": "[]", "returns": null}, "kind": "function"}}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "AllPagedEntities(data, included)", "examples": "[]", "returns": null}, "kind": "class"}, "SideLoads": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["objs: 'list[Any]'", "list[Any]"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "__len__": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "int"}, "docstring_parsed": null, "kind": "function"}, "__repr__": {"docstring": "Return repr(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return repr(self).", "examples": "[]", "returns": null}, "kind": "function"}, "__str__": {"docstring": "Return str(self).", "signature": {"params": [["self", "None"]], "return_annotation": "str"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Return str(self).", "examples": "[]", "returns": null}, "kind": "function"}, "all_for_type": {"docstring": null, "signature": {"params": [["self", "None"], ["obj_type: 'str'", "str"]], "return_annotation": "list[Any]"}, "docstring_parsed": null, "kind": "function"}, "find": {"docstring": null, "signature": {"params": [["self", "None"], ["id_obj: 'IdObjType'", "IdObjType"]], "return_annotation": "Union[Any, None]"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}, "IndentDumper": {"docstring": null, "functions": {"__init__": {"docstring": "Initialize self.  See help(type(self)) for accurate signature.", "signature": {"params": [["self", "None"], ["stream", "None"], ["default_style=None", "None"], ["default_flow_style=False", "None"], ["canonical=None", "None"], ["indent=None", "None"], ["width=None", "None"], ["allow_unicode=None", "None"], ["line_break=None", "None"], ["encoding=None", "None"], ["explicit_start=None", "None"], ["explicit_end=None", "None"], ["version=None", "None"], ["tags=None", "None"], ["sort_keys=True", "None"]], "return_annotation": "None"}, "docstring_parsed": {"params": [], "long_description": null, "short_description": "Initialize self.  See help(type(self)) for accurate signature.", "examples": "[]", "returns": null}, "kind": "function"}, "analyze_scalar": {"docstring": null, "signature": {"params": [["self", "None"], ["scalar", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "anchor_node": {"docstring": null, "signature": {"params": [["self", "None"], ["node", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "ascend_resolver": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "check_empty_document": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "check_empty_mapping": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "check_empty_sequence": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "check_resolver_prefix": {"docstring": null, "signature": {"params": [["self", "None"], ["depth", "None"], ["path", "None"], ["kind", "None"], ["current_node", "None"], ["current_index", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "check_simple_key": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "choose_scalar_style": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "close": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "descend_resolver": {"docstring": null, "signature": {"params": [["self", "None"], ["current_node", "None"], ["current_index", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "determine_block_hints": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "dispose": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "emit": {"docstring": null, "signature": {"params": [["self", "None"], ["event", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_alias": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_mapping": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_mapping_key": {"docstring": null, "signature": {"params": [["self", "None"], ["first=False", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_mapping_simple_value": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_mapping_value": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_sequence": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_block_sequence_item": {"docstring": null, "signature": {"params": [["self", "None"], ["first=False", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_document_end": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_document_root": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_document_start": {"docstring": null, "signature": {"params": [["self", "None"], ["first=False", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_first_block_mapping_key": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_first_block_sequence_item": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_first_document_start": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_first_flow_mapping_key": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_first_flow_sequence_item": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_mapping": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_mapping_key": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_mapping_simple_value": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_mapping_value": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_sequence": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_flow_sequence_item": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_node": {"docstring": null, "signature": {"params": [["self", "None"], ["root=False", "None"], ["sequence=False", "None"], ["mapping=False", "None"], ["simple_key=False", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_nothing": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_scalar": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "expect_stream_start": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "flush_stream": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "generate_anchor": {"docstring": null, "signature": {"params": [["self", "None"], ["node", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "ignore_aliases": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "increase_indent": {"docstring": null, "signature": {"params": [["self", "None"], ["flow: 'bool' = False", "bool"], ["indentless: 'bool' = False", "bool"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "need_events": {"docstring": null, "signature": {"params": [["self", "None"], ["count", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "need_more_events": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "open": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "prepare_anchor": {"docstring": null, "signature": {"params": [["self", "None"], ["anchor", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "prepare_tag": {"docstring": null, "signature": {"params": [["self", "None"], ["tag", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "prepare_tag_handle": {"docstring": null, "signature": {"params": [["self", "None"], ["handle", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "prepare_tag_prefix": {"docstring": null, "signature": {"params": [["self", "None"], ["prefix", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "prepare_version": {"docstring": null, "signature": {"params": [["self", "None"], ["version", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "process_anchor": {"docstring": null, "signature": {"params": [["self", "None"], ["indicator", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "process_scalar": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "process_tag": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_binary": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_bool": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_data": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_date": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_datetime": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_dict": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_float": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_int": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_list": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_mapping": {"docstring": null, "signature": {"params": [["self", "None"], ["tag", "None"], ["mapping", "None"], ["flow_style=None", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_none": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_scalar": {"docstring": null, "signature": {"params": [["self", "None"], ["tag", "None"], ["value", "None"], ["style=None", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_sequence": {"docstring": null, "signature": {"params": [["self", "None"], ["tag", "None"], ["sequence", "None"], ["flow_style=None", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_set": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_str": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_undefined": {"docstring": null, "signature": {"params": [["self", "None"], ["data", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "represent_yaml_object": {"docstring": null, "signature": {"params": [["self", "None"], ["tag", "None"], ["data", "None"], ["cls", "None"], ["flow_style=None", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "resolve": {"docstring": null, "signature": {"params": [["self", "None"], ["kind", "None"], ["value", "None"], ["implicit", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "serialize": {"docstring": null, "signature": {"params": [["self", "None"], ["node", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "serialize_node": {"docstring": null, "signature": {"params": [["self", "None"], ["node", "None"], ["parent", "None"], ["index", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_double_quoted": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"], ["split=True", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_folded": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_indent": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_indicator": {"docstring": null, "signature": {"params": [["self", "None"], ["indicator", "None"], ["need_whitespace", "None"], ["whitespace=False", "None"], ["indention=False", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_line_break": {"docstring": null, "signature": {"params": [["self", "None"], ["data=None", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_literal": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_plain": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"], ["split=True", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_single_quoted": {"docstring": null, "signature": {"params": [["self", "None"], ["text", "None"], ["split=True", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_stream_end": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_stream_start": {"docstring": null, "signature": {"params": [["self", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_tag_directive": {"docstring": null, "signature": {"params": [["self", "None"], ["handle_text", "None"], ["prefix_text", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}, "write_version_directive": {"docstring": null, "signature": {"params": [["self", "None"], ["version_text", "None"]], "return_annotation": "None"}, "docstring_parsed": null, "kind": "function"}}, "docstring_parsed": null, "kind": "class"}}}